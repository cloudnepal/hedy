// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser, LocalTokenGroup} from "@lezer/lr"
import {specializeKeyword, extendKeyword} from "./tokens"
export const parser = LRParser.deserialize({
  version: 14,
  states: "5rQYQPOOOOQO'#Dj'#DjQYQPOOO!ZQPO'#DpO!lQPO'#DiOOQO'#Dv'#DvO!wQPO'#DVOOQO'#Dw'#DwO#SQPO'#DWOOQO'#Dx'#DxO#eQPO'#DXOOQO'#Dy'#DyO#pQPO'#DZOOQO'#Dz'#DzO#{QPO'#D[OOQO'#D{'#D{O$WQPO'#D]OOQO'#DY'#DYOOQO'#D|'#D|O$cQPO'#D^OOQO'#D}'#D}O$tQPO'#D_OOQO'#EP'#EPO$|QPO'#D`OOQO'#ER'#ERO%UQPO'#DaOOQO'#EV'#EVO%aQPO'#DfOOQO'#EW'#EWO%lQPO'#DgOOQO'#EY'#EYO%wQPO'#DhOOQO'#Cx'#CxQ!UQPO'#DkQ&PQPOOOOQO-E7h-E7hOOQO'#Dl'#DlO&}QPO,59eOOQO'#C{'#C{O']QPO,59eOOQO'#Dp'#DpOOQO-E7n-E7nOOQO-E7t-E7tO'hQPO'#DsOOQO'#C|'#C|O(wQPO'#C|O)ROSO'#EgO)ZOQO'#EkOOQO'#DU'#DUOOQO'#Ds'#DsO)cQPO,59rOOQO-E7u-E7uO)wQPO,59sOOQO-E7v-E7vOOQO,59s,59sO*]QPO,59uOOQO-E7w-E7wOOQO,59u,59uO*qQPO,59vOOQO-E7x-E7xOOQO,59v,59vO+VQPO,59wOOQO-E7y-E7yOOQO,59w,59wO+kQPO,59xOOQO-E7z-E7zOOQO,59x,59xO,PQPO,59yOOQO-E7{-E7{O,XQPO,59zOOQO-E7}-E7}OOQO-E8P-E8PO,aQPO'#DcOOQO'#Db'#DbOOQO,59{,59{OOQO-E8T-E8TOOQO-E8U-E8UO,oQPO,5:ROOQO-E8W-E8WO,tQPO,5:SO,yQPO,5:VOOQO-E7i-E7iOOQO-E7j-E7jO-}QPO'#DmO.iQPO1G/XO.pQPO'#C|OOQO'#Dm'#DmO.zQPO1G/PO/YQPO1G/XOOQO'#Dr'#DrO/bQPO1G/ZOOQO'#DO'#DOOOQO'#DP'#DPO/sQPO,5:|O/sQPO,5:|OOQO'#Dn'#DnO/{QPO,59lOOOO'#Dt'#DtO0ZOSO,5;ROOQO,5;R,5;ROOOO'#Du'#DuO0cOQO,5;VOOQO,5;V,5;VOOQO-E7q-E7qOOQO'#EO'#EOO0kQPO1G/eOOQO'#EQ'#EQO0sQPO1G/fO1^QPO,59}O0{QPO,59}OOQO'#ET'#ETO1eQPO,5:OOOQO'#EU'#EUO1mQPO,5:POOQO'#EX'#EXO1uQPO1G/mO2QQPO1G/nO2]QPO'#DqO2eQPO7+$sOOQO-E7k-E7kOOQO-E7p-E7pO2pQPO7+$uOOQO1G0h1G0hO3UQPO1G0hOOQO-E7l-E7lOOQO'#Do'#DoO3vQPO1G/WOOQO1G/W1G/WOOOO-E7r-E7rOOQO1G0m1G0mOOOO-E7s-E7sOOQO1G0q1G0qOOQO-E7|-E7|OOQO7+%P7+%POOQO-E8O-E8OOOQO7+%Q7+%QO4_QPO1G/iOOQO'#ES'#ESO4sQPO1G/iOOQO1G/i1G/iOOQO-E8R-E8ROOQO1G/j1G/jOOQO-E8S-E8SOOQO1G/k1G/kOOQO-E8V-E8VOOQO'#EZ'#EZO5OQPO7+%YOOQO7+%Y7+%YO5ZQPO,5:]OOQO,5:],5:]OOQO-E7o-E7oOOQO-E7m-E7mOOQO-E8Q-E8QOOQO-E8X-E8XO5iQPO<<HtOOQO'#E['#E[O5nQPOAN>`OOQO-E8Y-E8YOOQOG23zG23z",
  stateData: "5|~OjOS#ROS~OShOUjOVVOWZOX]OY_OZbO[XO^dO`fObTOelOgnOnRO#SPO~O]tO#TvOn!dX#P!dX#S!dX~OnxO#P!]X#S!]X~ObTO#PyX#SyX~OVVOn}Oq|O#[!OO#`!PO~O[XOn}Oq|O~OWZOn}Oq|O~OX]On}Oq|O~OY_On}Oq|O~OZbOn}Oq|O#P!QX#S!QX~O^dOnxO~O`fOnxO~OShOn!jOq!jO~OUjO#P!YX#S!YX~OelOn!oOq!oO~OgnOn!qO~OShOUjOVVOWZOX]OY_OZbO[XO^dO`fObTOelOgnOnRO~OP!{O]tOn!wOq!vO~OP!{On!wOq!vO~O#V!}O#W!}O#X#OO#Y#OOn!gXq!gX#P!gX#S!gX#[!gX#`!gX~OQ#ROnpXqpX#PpX#SpX#VpX#WpX#XpX#YpX~O#[pX#`pX~P(YO#]#TO#^#VO~O#a#WO#b#YO~On}Oq|O#[!OO#`!PO#Pza#Sza~O#V!}O#W!}O#X#OO#Y#OO#P{a#S{a~O#V!}O#W!}O#X#OO#Y#OO#P}a#S}a~O#V!}O#W!}O#X#OO#Y#OO#P!Oa#S!Oa~O#V!}O#W!}O#X#OO#Y#OO#P!Pa#S!Pa~O#V!}O#W!}O#X#OO#Y#OO#P!Qa#S!Qa~Oa#[OnxO~O_#^OnxO~O]tOc#bOd#dO#TvO~Of#fO~Oc#bO~O#SPOS!_aU!_aV!_aW!_aX!_aY!_aZ!_a[!_a^!_a`!_ab!_ae!_ag!_an!_a#P!_a~O#V!}O#W!}O#X#OO#Y#OOn!aXq!aX#P!aX#S!aX~Ov#iO~P(]On!dXv!dX~P(YOn}Oq|O#Pmi#Smi~OnxOv#iO~OP!{On}Oq|O#[!OO#`!PO~On|Oq|O~OQ#ROR#qOn#sOq#sO~O#]#TO#^#uO~O#a#WO#b#wO~Oa#[On#yO~O_#^On#{O~OT#}On|Oq|O#[!OO#`!PO~O]tO~P0{Oc#bOn$RO~Od#dOn$TO~Of#fO#P!Zi#S!Zi~Oc#bOi$VOn$XO~OnxOq$ZO~Ov#iO#Puq#Suq~On}Oq|O#[!OO#`!PO#Pwq#Swq~O#V!}O#W!}O#X#OO#Y#OOn#Uiq#Ui#P#Ui#S#Ui#[#Ui#`#Ui~OR#qOntiqti#Pti#Sti#[ti#`ti~O#V!}O#W!}O#X#OO#Y#OO#P!Vi#S!Vi~OT#}O#P!Vi#S!Vi~Oi$VOn$`Oq$`O~OnxOv!ea#P!ea#S!ea~Oh$aO~Oh$aOn$dOq$dO~Oqn~",
  goto: ",_#`PPPPPPPPPPPPPPPPPPPPPPPPPPPP#a#fP#k#qP$g$r$}#fP#f%i#f#f#f#f%s%s%s#f#f#f#f%x%{%{%{#f#f#f#f&O&Y&a&k&r&y'P'j'q'x(S(Y(`(h(p(x)Q)Y)b)j)r)x*Q*W*`*g*q*w+P+X+_+g+mPPPPP+sPPPP,VPPP,VVqOQrVpOQrQwRR#a!jW{W!S!|#mQ!UYQ!X[Q![^Q!_`Q!bcU!uuw!yQ#n#PQ#o#QT#|#`#ac#P{!U!X![!_!b!u#o#|c#Q{!U!X![!_!b!u#o#|W!RW!S!|#mQ!WYQ!Z[Q!^^Q!a`Q!dcV!xuw!yW!RW!S!|#mT$P#`#aVaOQrR!liR!kiQQOSsQ!rR!rqSrOQR!srQuRS!tu#`R#`!jS!yuwR#k!yS#S}!wR#p#SQ#r#SR$]#rUSOQrYyS!e!g!z$YQ!eeQ!ggS!zuwR$Y#iS#j!v!zR$[#jS!|uwR#l!|Q!SWS#Z!S#mR#m!|Q#U!OR#t#UQ#X!PR#v#XUUOQrRzUUWOQrR!TWUYOQrR!VYU[OQrR!Y[U^OQrR!]^U`OQrR!``UcOQrR!ccUeOQrR!feQ#]!eR#x#]UgOQrR!hgQ#_!gR#z#_UiOQrR!iiS$O#`#aR$^$OQ#c!jQ#h!qT$Q#c#hQ#e!jR$S#eUkOQrR!mkUmOQrR!nmQ#g!oR$U#gUoOQrR!poQ$W#hR$_$WQ$b$`R$c$bq|WY[^`cuw!S!y!|#P#Q#`#a#m]!QW!S!|#`#a#m",
  nodeNames: "âš  ask at random if pressed else print forward turn color sleep play is add from remove toList clear in not_in repeat times for to range Comment Program Command Assign Text Op Expression Int Op Op ListAccess AssignList Comma Ask String Clear Print Play Turtle Forward Turn Color Sleep Add Remove If Condition EqualityCheck InListCheck NotInListCheck Else Repeat For ErrorInvalid",
  maxTerm: 110,
  nodeProps: [
    ["group", 44,"turtle"]
  ],
  skippedNodes: [0,26],
  repeatNodeCount: 33,
  tokenData: "*x~R!^OY$}YZ&UZp$}pq&Zqr$}rs&`st&etw$}wx&|xz$}z{'R{|'W|}']}!O'b!O!P$}!P!Q'g!Q!R'l!R!S'l!S!T'l!T!U'l!U!V'l!V!W'l!W!X'l!X!Y'l!Y!Z'l!Z!['l![!_$}!_!`*s!`#Q$}#RBn$}BnBo']BoDf$}DfDg'lDgDh'lDhDi'lDiDj'lDjDk'lDkDl'lDlDm'lDmDn'lDnDo'lDoDp'lDpGl$}GlGm'lGmGn'lGnGo'lGoGp'lGpGq'lGqGr'lGrGs'lGsGt'lGtGu'lGuGv'lGv&FV$}&FV&FW']&FW;'S$};'S;=`&O<%l?Hb$}?Hb?Hc']?HcO$}~%S^n~OY$}Zp$}qr$}tw$}xz$}!O!P$}!Q!_$}!`#Q$}#RBn$}Bo&FV$}&FW;'S$};'S;=`&O<%l?Hb$}?HcO$}~&RP;=`<%l$}~&ZO#S~~&`O#R~~&eO#[~~&jSj~OY&eZ;'S&e;'S;=`&v<%lO&e~&yP;=`<%l&e~'RO#`~~'WO#V~~']O#X~~'bOv~~'gO#Y~~'lO#W~~'s!Oq~n~OY$}Zp$}qr$}tw$}xz$}!O!P$}!Q!R'l!R!S'l!S!T'l!T!U'l!U!V'l!V!W'l!W!X'l!X!Y'l!Y!Z'l!Z!['l![!_$}!`#Q$}#RBn$}BoDf$}DfDg'lDgDh'lDhDi'lDiDj'lDjDk'lDkDl'lDlDm'lDmDn'lDnDo'lDoDp'lDpGl$}GlGm'lGmGn'lGnGo'lGoGp'lGpGq'lGqGr'lGrGs'lGsGt'lGtGu'lGuGv'lGv&FV$}&FW;'S$};'S;=`&O<%l?Hb$}?HcO$}~*xO#T~",
  tokenizers: [2, new LocalTokenGroup("_~RQYZXwxX~^O#b~~", 14, 109), new LocalTokenGroup("_~RQYZXrsX~^O#^~~", 14, 105)],
  topRules: {"Program":[0,27]},
  dynamicPrecedences: {"59":-10},
  specialized: [{term: 30, get: (value: any, stack: any) => (specializeKeyword(value, stack) << 1), external: specializeKeyword},{term: 30, get: (value: any, stack: any) => (extendKeyword(value, stack) << 1) | 1, external: extendKeyword, extend: true}],
  tokenPrec: 961
})
