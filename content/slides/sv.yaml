levels:
    0:
        1:
            header: Välkommen till Hedy!
            text: Hedy är ett programmeringsspråk.
        2:
            header: Programmering
            text: |-
                Programmering är att ge instruktioner till en dator, med datorns språk.

                Ett sådant språk kallas för ett programmeringsspråk.
        3:
            header: Programmeringsspråk
            text: |-
                Kanske känner du redan till några programmeringsspråk?
                Ett par exempel är:
                * Scratch
                * Python
                * HTML
        4:
            header: Programmering
            text: |-
                Om man kan programmera kan man göra många häftiga saker:
                * Bygga interaktiva berättelser
                * Skapa datormålningar och rita dem på papper eller tyg
                * Bygga egna appar att ha på telefonen
        5:
            header: Programmering i Hedy
            text: I Hedy använder vi speciella koder, som `{print}`.
        6:
            header: Programmering i Hedy
            text: Kodord visas i rosa.
        7:
            header: Programmering i Hedy
            text: Vi startar koden med Kör kod-knappen under koden.
        8:
            header: Programmering i Hedy
            text: Utmatning visas till höger.
        9:
            header: Programmering i Hedy
            text: Utmatningen kan också vara en teckning.
            code: |-
                {forward} 100
                {turn} left
    1:
        1:
            header: Välkommen till nivå 1!
            text: |-
                Vi börjar nivå 1 med att göra historier i Hedy!

                Vi behöver tre textkoder för att skapa interaktiva berättelser.
        2:
            text: |-
                Den första koden man kan använda i nivå 1 är `{print}`.

                `{print}` används för att visa text på skärmen.
            code: '{print} Put text on the screen'
        3:
            header: Kommandot {print}
            text: |-
                Du kan ändra texten efter skriv-kommandot till vad du vill.

                Eller så kan du skriva ut flera rader genom att lägga till en ny kodrad som också börjar med `{print}`.
            code: '{print} Put text on the screen'
        4:
            text: |-
                Det andra kommandot som du kan använda på nivå 1 är `{ask}`.

                `{ask}` används för att ställa en fråga som kan besvaras.
        5:
            text: |-
                Du såg i förra exemplet att om du använder kommandot `{ask}` kan du ställa en fråga.

                Men svaret visas inte i på utdataskärmen.

                Om du vill att svaret ska visas kan du använda det sista kommandot på den här nivån: `{echo}`.

                `{echo}` används för att upprepa svaret på en `{ask}`.
        6:
            header: Programmering!
            text: |-
                Med `{print}`, `{ask}` och `{echo}` kan du redan skapa en liten berättelse.
                Det här är ett bra tillfälle att prova äventyren Papegoja, Berättelse och Sten, sax, påse.
        7:
            header: Programmering!
            text: Äventyren visas i flikar.
        8:
            header: Programmering!
            text: De gula pilknapparna används för att kopiera exempel.
            editor: /hedy/1
        9:
            header: Rita med sköldpaddan
            text: Nu när vi har sett textkod kommer vi att titta på ritkod.
        10:
            header: 'Rita med sköldpaddan: {forward}'
            text: '`{forward}` flyttar sköldpaddan framåt.'
            code: |-
                {forward} 50
                {turn} left
        11:
            header: 'Rita med sköldpaddan: {turn}'
            text: '`{turn}` används för att få sköldpaddan att svänga vänster eller höger.'
            code: |-
                {forward} 50
                {turn} left
    2:
        1:
            header: Välkommen till nivå 2
            text: |-
                På den här nivån får du lära dig att använda variabler.

                En variabel är ett ord som kan användas för att spara information.

                Till exempel: ett namn, en ålder eller ett favoritlag.
        2:
            header: Variabler
            text: För att skapa eller sätta en variabels värde använder vi kommandot `{is}`
        3:
            header: Interaktiv
            text: |-
                Vi kan också sätta en variabel genom att ställa frågor.

                Svaret på frågan lagras i variabeln.

                På så sätt behöver vi inte kommandot `{echo}`.
        4:
            header: Flera variabler
            text: Nu när vi använder variabler kan vi använda flera variabler istället för bara ett `{echo}`-kommando.
        5:
            header: Sov
            text: Du kan också använda kommandot `{sleep}` för att pausa koden ett tag.
        6:
            header: Sov 5
            text: |-
                Du kan lägga till ett tal efter kommandot `{sleep}` om du vill att pausen ska vara längre.

                Om du vill kan du även använda en variabel istället för ett tal för att bestämma längden på sov-kommandot.
        8:
            header: Låt den roliga programmeringen börja!
            text: Ha det kul med äventyren på nivå 2!
    3:
        1:
            header: Välkommen till nivå 3
            text: På den här nivån får du lära dig att göra en lista, lägga till och ta bort element från din lista och välja ett slumpmässigt element från listan.
        2:
            header: Göra en lista
            text: |-
                Du gör en lista med kommandot `{is}`.

                Skriv kommatecken mellan elementen i listan.
        3:
            header: Slumpmässigt
            text: |-
                Du kan använda listan med kommandot `{at}` `{random}`.
                Datorn kommer slumpmässigt att välja ett element från listan.
                Varje gång du kör denna kod kommer utskriften att skilja sig åt.
        4:
            header: Slumpmässigt i en mening
            text: Du kan använda kommandot `{at} {random}` i en mening också.
        5:
            header: Lägg till i
            text: |-
                Du kan lägga till element i en lista med kommandot `{add}` `{to}`.

                Du kan välja vad som ska läggas till i listan eller så kan du använda kommandot `{add}` `{to}` i kombination med kommandot `{ask}`.
                På så sätt kan du låta spelaren bestämma vad som ska läggas till i listan.
        6:
            header: Ta bort från
            text: |-
                Motsatsen till kommandot `{add}` `{to}` är kommandot `{remove}` `{from}`.
                Detta kommando tar bort ett element från en lista.
        8:
            header: Nu sätter vi igång!
            text: Ha det kul med äventyren på nivå 3!
    4:
        1:
            header: Välkommen till nivå 4
            text: På den här nivån får du lära dig använda citattecken.
        2:
            text: 'På de tidigare nivåerna kan du ha stött på det här problemet:'
        3:
            header: Fixa det med citattecken
            text: |-
                På den här nivån kommer vi att lösa detta problem genom att använda citattecken.

                Detta gör också att vår kod mer liknar 'riktig' Python-kod.
        4:
            header: Citattecken med skriv
            text: När du använder kommandot `{print}` måste du sätta texten som du vill ska visas på skärmen inom citattecken.
        5:
            header: Citattecken med fråga
            text: Detta gäller också för kommandot `{fråga}`.
        6:
            header: Citattecken och variabler
            text: |-
                Du vill inte att variabelnamn ska skrivas ut på skärmen.
                Det är därför variabler ska lämnas utanför citattecknen, så här:
        7:
            header: Citattecken och variabler
            text: |-
                När variabelnamn används inuti mening måste variablerna stå utanför citattecknen.
                Resten av meningen behöver citattecken. Det ser ut så här:
        8:
            header: Citattecken och sammandragningar
            text: |-
                Var försiktig! Nu när du använder citattecken kan du inte använda apostrofer i sammandragningar.

                Försök att skriva ut en sammandragning som engelska "you're" eller "I'm" på skärmen nedan och se vad som händer …
        9:
            header: Rensa
            text: |-
                På den här nivån lär du dig också kommandot {clear}.
                Med det kommandot kan du sudda ut all text från din utdataskärm.

                Var försiktig så att du alltid använder ett sov-kommando också. Om du inte gör det kommer datorn att sudda ut all text innan du hinner läsa den!
        11:
            header: Klara, färdiga, gå!
            text: Ha det kul med äventyren på nivå 4!
    5:
        1:
            header: Välkommen till nivå 5
            text: 'På den här nivån får du lära dig att använda tre nya kommandon: `{if}`, `{else}` och `{in}`.'
        2:
            header: om
            text: |-
                Med kommandot `{if}` kan du välja mellan två alternativ.
                I exemplet kommer datorn att skriva 'nice' om det givna svaret är Hedy.
                Om svaret inte är Hedy kommer datorn inte att göra någonting.
        3:
            header: Glöm inte att skriva ut
            text: Glöm inte att använda kommandot `{print}` när du använder kommandot `{if}`.
        4:
            header: annars
            text: |-
                När du använder ett `{if}`-kommando kan du också lägga till ett `{else}`-kommando.
                Om svaret är Hedy kommer datorn att skriva 'nice'.
                Men om svaret är något annat kommer datorn att skriva 'boo'.
        5:
            header: Långa rader
            text: |-
                Du kanske har märkt att dina rader kan bli väldigt långa när du har både ett `{if}`- och ett `{else}`-kommando.

                Du kan välja att dela upp kommandona på två rader, så här:
        6:
            header: Ett till nytt kommando
            text: |-
                Om du har övat med kommandona `{if}` och `{else}` kan du också prova kommandot `{in}`.

                Med `{in}` kan du låta datorn kolla om ett element finns i en lista, t.ex:

                Tänk på att Hedy är skiljer på stora och små bokstäver. Det betyder om du svarar "Grönt" istället för "grönt", kommer Hedy att skriva "meh".
        8:
            header: Nu kör vi!
            text: Ha det kul med äventyren på nivå 5!
    6:
        1:
            header: Välkommen till nivå 6
            text: På den här nivån lägger vi till matematik till vår kod.
        2:
            text: Om du vill addera så använder du helt enkelt plustecknet.
        3:
            header: Subtraktion
            text: För att subtrahera använder du minustecknet.
        4:
            header: Multiplikation
            text: Om du vill multiplicera kan du använda asterisk.
        5:
            text: Du kan använda snedstreck för division.
        6:
            header: Sammanfattning
            text: Sammanfattningsvis kan du använda +, –, * och / för att räkna.
        7:
            header: Symbolen =
            text: |-
                Från och med nu kan du också använda likhetstecken (=) istället för `{is}`-kommandot.
                Detta gäller både tal och ord, och det gäller även efter kommandona `{if}` eller `{else}`.
        8:
            header: Beräkningar med variabler
            text: 'Du kan göra beräkningar med tal, men du kan också använda variabler för att göra beräkningar, t.ex. så här:'
        10:
            header: Nu sätter vi igång!
            text: Ha det kul med äventyren på nivå 6!
    7:
        1:
            header: Välkommen till nivå 7
            text: På den här nivån får du lära dig att upprepa en kodrad hur många gånger som helst.
        2:
            header: upprepa 3 gånger
            text: |-
                Om du vill upprepa en kodrad kan du använda koden `{repeat}` 3 `{times}`.
                Om du vill upprepa raden fler gånger ändrar du bara talet.

                Till exempel: Om du programmerar en berättelse där din karaktär ropar på hjälp fem gånger, kan det se ut så här:
        3:
            header: Glöm inte kommandot skriv
            text: Glöm inte kommandot `{print}` när du använder kommandot upprepa.
        4:
            header: Upprepa ett fråga-kommando
            text: Du kan också upprepa ett `{ask}`-, `{if}`- eller `{else}`-kommando flera gånger.
        6:
            header: Klara, färdiga, gå!
            text: Ha det kul med äventyren på nivå 7!
    8:
        1:
            header: Välkommen till nivå 8
            text: På den här nivån lär du dig att använda indrag för att få kommandona `{repeat}`, `{if}` och `{else}` att fungera för flera rader kod.
        2:
            header: '{repeat}-kommandon förut'
            text: |-
                På de tidigare nivåerna såg kommandot `{repeat}` ut så här:

                Du kunde bara upprepa en kodrad.
        3:
            header: '{repeat}-kommandon nu'
            text: |-
                På den här nivån kan du upprepa flera rader kod. För att göra det måste du berätta för datorn vilka rader som hör ihop och ska upprepas.
                Det gör du genom att använda indrag.

                Använd fyra blanksteg (eller en tabb) i början av varje rad som du vill upprepa, så här:
        4:
            header: '{repeat}-kommandon nu'
            text: |-
                Om du vill kan du fortsätta efter kommandot `{repeat}` utan indrag.
                Rader utan indrag kommer inte att upprepas.
        5:
            header: om och annars förut
            text: |-
                Detsamma gäller för kommandona `{if}` och `{else}`.
                Dessa kommandon användes tidigare:
        6:
            header: om och annars nu
            text: |-
                Så här är kommandona`{if}` och `{else}` nu.
                Varje rad efter kommandona `{if}` och `{else}` börjar med indrag.
        7:
            header: stoppa indraget
            text: Precis som med kommandot `{repeat}` kan du sluta använda indrag och raderna kommer alltid att visas, altså inte bara om påståendet är sant.
        8:
            header: if-satser inuti if-satser
            text: |-
                Du kanske har funderat på att ha ett if-kommando inuti ett repeat-kommando, eller inuti ett annat if-kommando.
                För närvarande är detta inte möjligt. På de högre nivåerna kommer det att bli tillåtet, men nu ska vi fokusera på att öva kommandona `{if}` `{else}` och `{repeat}` med korrekt indrag först.
        10:
            header: Vi kollar in äventyren!
            text: Ha det kul med äventyren på nivå 8!
    9:
        1:
            header: Välkommen till nivå 9
            text: |-
                På den här nivån kan du använda flera rader kod efter ett `{if}`- eller `{repeat}`-kommando.

                Du kan till och med ha ett `{repeat}`-kommando inuti ett annat `{repeat}`-kommando.
        2:
            header: Flera rader efter `{repeat}`
            text: Du får ha flera rader efter `{repeat}`.
        3:
            header: Indrag är viktigt!
            text: Indrag är mycket viktigt för att tala om för datorn vilka rader som ska upprepas och vilka rader som bara ska köras en gång.
        4:
            header: Flera rader efter `{if}`
            text: Du kan också ha flera rader efter `{if}`
        5:
            header: Indrag är viktigt
            text: Indrag är fortfarande mycket viktigt och kan göra stor skillnad i koden.
        6:
            header: Ett `{if}` inuti en `{repeat}`
            text: |-
                Nu när du kan ha flera kodrader efter dessa kommandon kan du också placera dem inuti varann.
                Kolla in det här:
        7:
            header: Tänk på indraget
            text: Tänk på att den fjärde och sjätte raden i koden börjar med åtta mellanslag.
        9:
            header: Nu kör vi!
            text: Ha det kul med äventyren på nivå 9!
    10:
        1:
            header: Välkommen till nivå 10
            text: 'På den här nivån kommer du att lära dig ett nytt kommando: `{for}`.'
        2:
            header: Kommandot 'för'
            text: Med 'för' kan du skapa en lista och använda alla element i listan. `{for}` skapar ett block, som 'upprepa' och 'om', så alla rader i blocket ska börja med indrag (fyra mellanslag).
        3:
            header: Kommandot 'för'
            text: 'Här ser du ett annat exempel på kommandot `{for}`:'
        5:
            header: Dags att programmera!
            text: Ha det kul med äventyren på nivå 10!
    11:
        1:
            header: Välkommen till nivå 11
            text: |-
                På den här nivån lägger vi till en ny variant av kommandot `{for}`. På tidigare nivåer använde vi för med en lista, men vi kan också använda för med tal.

                På så sätt behöver vi inte kommandot `{repeat}` längre.
        2:
            header: Kommandot 'för'
            text: 'Så här ser det nya för-kommandot ut:'
        3:
            header: variabeln i
            text: |-
                I föregående bild fick variabeln namnet 'räknare', eftersom den räknade nedåt.
                Du kan naturligtvis använda vilket namn du vill för variabeln.
                Standardnamnet för variabler i den här situationen som används i programspråk som Python är 'i'.
                Det ser ut så här:
        5:
            header: Låt oss börja programmera!
            text: Ha det kul med äventyren på nivå 11!
    12:
        1:
            header: Välkommen till nivå 12
            text: Från och med denna nivå får du använda decimaltal och det har gjorts vissa ändringar av citattecknen.
        2:
            header: Citattecken
            text: |-
                Den här nivån ändrar lite hur citattecken används.
                Från och med nu måste ** alla texter ** vara inom citattecken. Detta gäller också värden för variabler, element i listor och text efter {if}-kommandon.
        3:
            header: Decimaltal
            text: |-
                Från och med denna nivå får du också använda decimaltal. Det kan göra program som din restaurang ännu bättre!

                Siffror har inte citattecken.
    13:
        1:
            header: Välkommen till nivå 13
            text: Nu ska vi lära oss `{and}` och `{or}`! Om du vill kolla två påståenden behöver du inte använda två 'om' utan kan använda 'och' och 'eller'.
        2:
            header: Kommandot och
            text: |-
                Kommandot `{och}` används alltid ihop med kommandot {if}.
                På så sätt kan du kontrollera om två påståenden är sanna. Till exempel:
        3:
            header: Kommandot 'eller'
            text: |-
                Kommandot `{or}` fungerar på samma sätt som kommandot `{and}`, men bara ett av de två påståendena måste vara sant.

                Låt oss se vad som händer när du byter `{and}` mot `{or}`.
    14:
        1:
            header: Välkommen till nivå 14
            text: På den här nivån får du lära dig några nya symboler som kan hjälpa dig att förbättra dina program, t.ex. '>'.
        2:
            header: Symboler
            text: |-
                Detta är de nya symbolerna som du kan använda:

                  > betyder större än …

                  >= betyder större än eller lika med …

                  < betyder mindre än …

                  <= betyder mindre än eller lika med …

                Du kan använda dem så här:
        3:
            header: Symboler
            text: |-
                Du kan också använda:

                == är lika med.

                != är inte lika med

                == används i `{if}`-satser.
    15:
        1:
            header: Välkommen till nivå 15
            text: På den här nivån lär du dig om `{while}`-loopen.
        2:
            text: |-
                Vi ska lära oss en ny loop, medan-loopen! Loopen fortsätter så länge som påståendet är sant. Så glöm inte att ändra värdet inuti slingan.

                I exempelkoden fortsätter vi tills ett korrekt svar har getts. Om det rätta svaret aldrig ges kommer loopen aldrig att avslutas!
        4:
            header: Vi testar det!
            text: Ha det kul med äventyren på nivå 15!
    16:
        1:
            header: Välkommen till nivå 16
            text: På den här nivån får du lära dig mer om [hakparenteser] och hur du använder dem.
        2:
            header: Hakparenteser
            text: Vi kommer att göra listor på Python-vis, med hakparenteser runt listorna! Vi behåller också citattecknen runt varje element, som vi har lärt oss i tidigare nivåer. Vi använder hakparenteser för att peka ut en plats i en lista. Kommandot 'på slump' kan inte användas längre.
        4:
            header: Vi testar det!
            text: Ha det kul med äventyren på nivå 16!
    17:
        1:
            header: Välkommen till nivå 17
            text: På den här nivån får du lära dig hur man använder kolon och kommandot 'annars om'.
        2:
            header: Kolon
            text: Nu ska vi ändra indraget lite grann. Varje gång vi behöver en indragning behöver vi kolon (:) på raden före indragningen.
        3:
            header: Annarsom
            text: 'På den här nivån kan du också använda ett nytt kommando: annarsom. annarsom är en sammandragning av ''annars om'' och du behöver det när du vill skapa tre (eller fler!) alternativ. Kolla in det här!'
        4:
            header: Vi testar det!
            text: Ha det kul med äventyren på nivå 17!
    18:
        1:
            header: Välkommen till nivå 18
            text: Grattis! Du har nått den sista nivån i Hedy! Koden som du har skapat här kan kopieras till riktiga Python-miljöer som repl.it eller PyCharm och du kan fortsätta att lära dig där! Tänk på att Python bara kan läsa engelska kommandon, så om du har använt andra språk måste du byta till engelska nu.
        2:
            header: Python-sättet
            text: |-
                Vi har kommit till riktig Python-kod! Det betyder att vi måste använda parenteser med print och range från och med nu.

                Om du vill skriva ut mer än ett element måste du också skilja dem med kommatecken.

                Den sista ändringen vi behöver göra för att få Python-kod är att ändra ask till input.

                Klicka på fliken 'print' för alla exempel.
        3:
            header: De allra sista äventyren!
            text: Njut av de allra sista äventyren på nivå 18!
