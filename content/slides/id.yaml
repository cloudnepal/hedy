levels:
    0:
        1:
            header: Selamat datang di Hedy!
            text: Hedy adalah bahasa pemrograman.
        2:
            header: Pemrograman
            text: |-
                Pemrograman adalah memberikan instruksi kepada komputer, menggunakan bahasa komputer.

                Bahasa seperti ini disebut “bahasa pemrograman”.
        3:
            header: Bahasa pemrograman
            text: |-
                Mungkin Anda sudah mengetahui beberapa bahasa pemrograman?
                Beberapa contohnya adalah:
                * Scratch
                * Phyton
                *HTML
        4:
            header: Pemrograman
            text: |-
                Jika Anda bisa memprogram, Anda bisa melakukan banyak hal keren:
                * Membangun cerita interaktif
                * Membuat gambar komputer dan gambarlah di atas kertas atau kain
                * Membangun aplikasi Anda sendiri untuk digunakan di ponsel Anda
        5:
            header: Pemrograman di Hedy
            text: Di Hedy kami menggunakan kode khusus, seperti `{print}`.
        6:
            header: Pemrograman di Hedy
            text: Kata kode akan ditampilkan dalam warna merah muda.
        7:
            header: Pemrograman di Hedy
            text: Kami memulai kode dengan tombol Jalankan kode di bawah kode.
        8:
            header: Pemrograman di Hedy
            text: Output appears on the left-hand side.
        9:
            header: Pemrograman di Hedy
            text: Outputnya juga bisa berupa gambar.
            code: |-
                {forward} 100
                {turn} left
    1:
        1:
            header: Selamat datang di level 1!
            text: |-
                Kami akan memulai level 1 dengan membuat cerita di Hedy!

                Kita memerlukan tiga kode teks untuk membuat cerita interaktif.
        2:
            text: |-
                Kode pertama yang bisa Anda gunakan di level 1 adalah `{print}`.

                `{print}` digunakan untuk menampilkan teks di layar.
        3:
            header: Perintah {print}
            text: |-
                The second code that you can use in level 1 is `{ask}`.

                `{ask}` is used to ask a question that can be answered.
            code: |-
                {print} Welcome to your own rock scissors paper!
                {ask} What will you choose?
        4:
            text: |-
                The final text code that you can use in level 1 is `{echo}`.

                `{echo}` is used to repeat the answer of an `{ask}`.
            code: |-
                {print} Hello!
                {ask} What is your name?
                {echo} hello
        5:
            text: |-
                Seperti yang Anda lihat pada contoh sebelumnya. Jika Anda menggunakan perintah `{ask}`, Anda dapat mengajukan pertanyaan.

                Namun jawabannya tidak muncul di layar keluaran.

                Jika Anda ingin jawabannya ditampilkan, Anda dapat menggunakan perintah terakhir pada level ini: `{echo}`.

                `{echo}` digunakan untuk mengulang jawaban `{ask}`.
        6:
            header: Pemrograman!
            text: |-
                Dengan `{print}`, `{ask}` dan `{echo}` Anda sudah bisa membuat sedikit cerita.
                Ini saat yang tepat untuk mencoba petualangan Parrot, Story, dan Rock, Paper Scissors.
        7:
            header: Pemrograman!
            text: Petualangan ditampilkan di tab.
        8:
            header: Pemrograman!
            text: Tombol panah kuning dapat digunakan untuk menyalin contoh.
            editor: /hedy/1
        9:
            header: Menggambar dengan kura-kura
            text: '`{forward}` is used to move the turtle forward.'
        10:
            header: 'Menggambar dengan kura-kura: {forward}'
            text: '`{turn}` is used to make the turtle turn left or right.'
            code: |-
                {forward} 50
                {turn} left
        11:
            header: 'Menggambar dengan kura-kura: {turn}'
            text: '`{turn}` digunakan untuk membuat penyu berbelok ke kiri atau ke kanan.'
            code: |-
                {forward} 50
                {turn} left
    2:
        1:
            header: Selamat datang di level 2
            text: |-
                Pada level ini Anda akan belajar menggunakan variabel.

                Variabel adalah kata yang dapat digunakan untuk menyimpan informasi.

                Misalnya: nama, umur atau tim olahraga favorit.
        2:
            header: Variabel
            text: Untuk membuat atau 'mengatur' suatu variabel kita menggunakan perintah `{is}`
        3:
            header: Interaktif
            text: |-
                Kita juga dapat mengatur variabel dengan mengajukan pertanyaan.

                Jawaban atas pertanyaan disimpan dalam variabel.

                Dengan cara ini kita tidak memerlukan perintah `{echo}`.
        4:
            header: Banyak variabel
            text: Sekarang kita menggunakan variabel, kita bisa menggunakan beberapa variabel, bukan hanya satu perintah `{echo}`.
        5:
            header: Tidur
            text: Anda juga dapat menggunakan perintah `{sleep}` untuk menjeda kode untuk sementara waktu.
        6:
            header: Tidur 5
            text: |-
                Anda dapat menambahkan nomor setelah perintah `{sleep}` jika ingin jeda lebih lama.

                Jika mau, Anda bahkan bisa menggunakan variabel alih-alih angka untuk menentukan durasi perintah sleep.
        8:
            header: Biarkan kesenangan pemrograman dimulai!
            text: Nikmati petualangan di level 2!
    3:
        1:
            header: Selamat datang di level 3
            text: Di level ini Anda akan belajar cara membuat daftar, menambah dan menghapus item dari daftar Anda, dan memilih item acak dari daftar itu.
        2:
            header: Membuat daftar
            text: |-
                Anda membuat daftar dengan `{is}`.

                Pisahkan item di daftar Anda dengan koma.
        3:
            header: Secara acak
            text: |-
                Anda dapat menggunakan daftar dengan perintah `{at}` `{random}`.
                Komputer akan secara acak memilih satu item dari daftar.
                Setiap kali Anda menjalankan kode ini, hasilnya akan berbeda.
        4:
            header: Secara acak dalam sebuah kalimat
            text: Anda juga dapat menggunakan perintah `{at}` `{random}` dalam sebuah kalimat.
        5:
            header: Tambahkan ke
            text: |-
                Anda dapat menambahkan item ke daftar dengan perintah `{add}` `{to}`.

                Anda dapat memilih apa yang ingin ditambahkan ke daftar atau Anda dapat menggunakan perintah `{add}` `{to}` yang dikombinasikan dengan perintah `{ask}`.
                Dengan cara ini Anda dapat membiarkan pemain memutuskan apa yang akan ditambahkan ke daftar.
        6:
            header: Hapus dari
            text: |-
                Kebalikan dari perintah `{add}` `{to}` adalah perintah `{remove}` `{from}`.
                Perintah ini menghapus item dari daftar.
        8:
            header: Ayo mulai bekerja!
            text: Nikmati petualangan di level 3!
    4:
        1:
            header: Selamat datang di level 4
            text: Di level ini Anda akan belajar cara menggunakan tanda kutip.
        2:
            header: Masalah
            text: 'Di level sebelumnya, Anda mungkin menemukan masalah ini:'
        3:
            header: Memperbaikinya dengan tanda kutip
            text: |-
                Pada level ini kita akan memperbaiki masalah ini dengan menggunakan tanda kutip.

                Ini juga membuat kode kita terlihat lebih mirip kode Python 'asli'.
        4:
            header: Tanda kutip dengan cetakan
            text: Setiap kali Anda menggunakan perintah `{print}` Anda harus meletakkan teks yang ingin Anda tampilkan di layar dalam tanda kutip.
        5:
            header: Tanda kutip dengan tanya
            text: Ini juga berlaku untuk perintah `{ask}`.
        6:
            header: Tanda kutip dan variabel
            text: |-
                Anda tidak ingin nama variabel tercetak di layar.
                Inilah sebabnya mengapa variabel harus dikeluarkan dari tanda kutip, seperti ini:
        7:
            header: Tanda kutip dan variabel
            text: |-
                Jika nama variabel digunakan di tengah kalimat, variabel tersebut harus dikeluarkan dari tanda kutip.
                Namun sisa kalimatnya memerlukan tanda kutip. Itu terlihat seperti ini:
        8:
            header: Tanda kutip dan kontraksi
            text: |-
                Hati-hati! Sekarang Anda menggunakan tanda kutip, Anda tidak dapat menggunakan tanda kutip dalam kontraksi.

                Silakan coba mencetak kontraksi seperti "Anda" atau "Saya" pada layar di bawah ini dan lihat apa yang terjadi....
        9:
            header: Jelas
            text: |-
                Di level ini Anda juga akan mempelajari perintah {clear}.
                Dengan perintah ini Anda dapat menghapus semua teks dari layar keluaran Anda.

                Berhati-hatilah agar Anda selalu menggunakan perintah tidur juga. Jika tidak, komputer akan menghapus semua teks sebelum Anda dapat membacanya!
        11:
            header: Siap, Bersiap, Ayo!
            text: Nikmati petualangan di level 4!
    5:
        1:
            header: Selamat datang di level 5
            text: 'Di level ini Anda akan belajar menggunakan 3 perintah baru: `{if}`, `{else}` dan `{in}`.'
        2:
            header: jika
            text: |-
                Perintah `{if}` memungkinkan Anda memilih di antara dua opsi.
                Pada contoh ini komputer akan mencetak 'bagus' jika jawaban yang diberikan adalah Hedy.
                Kalau jawabannya bukan Hedy, komputer tidak akan berbuat apa-apa.
        3:
            header: Jangan lupa untuk mencetak
            text: Saat menggunakan perintah `{if}`, jangan lupa untuk menggunakan perintah `{print}`.
        4:
            header: pula
            text: |-
                Saat menggunakan perintah `{if}`, Anda juga dapat menambahkan perintah `{else}`.
                Jika jawabannya Hedy, maka komputer akan mencetak 'bagus'.
                Namun jika jawabannya lain komputer akan mencetak 'boo'
        5:
            header: Garis panjang
            text: |-
                Anda mungkin memperhatikan bahwa baris Anda bisa menjadi sangat panjang ketika Anda memiliki perintah `{if}` dan `{else}` sekaligus.

                Anda dapat memilih untuk memisahkan perintah dan menaruhnya dalam 2 baris, seperti ini:
        6:
            header: Perintah baru lainnya
            text: |-
                Jika Anda sudah berlatih dengan perintah `{if}` dan `{else}`, Anda juga bisa mencoba perintah `{in}`.

                Dengan `{in}` Anda dapat membiarkan komputer memeriksa apakah suatu item ada dalam daftar, misalnya:

                Harap dicatat bahwa Hedy peka terhadap huruf besar-kecil. Artinya jika Anda menjawab "Hijau" dan bukan "hijau", Hedy akan mencetak "meh".
        8:
            header: Ayo pergi!
            text: Nikmati petualangan di level 5!
    6:
        1:
            header: Selamat datang di level 6
            text: Di level ini kami menambahkan matematika ke kode kami.
        2:
            header: Tambahan
            text: Jika ingin menghitung penjumlahan, cukup gunakan tanda tambah.
        3:
            header: Pengurangan
            text: Jika ingin melakukan pengurangan, bisa menggunakan tanda minus.
        4:
            header: Perkalian
            text: Jika ingin melakukan perkalian bisa menggunakan tanda bintang.
        5:
            header: Divisi
            text: Anda dapat menggunakan garis miring untuk pembagian.
        6:
            header: Ringkasan
            text: Singkatnya, Anda dapat menggunakan +, -, * dan / untuk mengerjakan matematika.
        7:
            header: Simbol =
            text: |-
                Mulai sekarang Anda juga dapat menggunakan simbol = sebagai ganti perintah `{is}`.
                Ini berlaku untuk angka dan kata, dan juga setelah perintah `{if}` atau `{else}`.
        8:
            header: Perhitungan dengan variabel
            text: 'Anda bisa menggunakan penghitungan dengan angka, namun Anda juga bisa menggunakan variabel untuk melakukan penghitungan, seperti ini:'
        10:
            header: Ayo mulai bekerja!
            text: Nikmati petualangan di level 6!
    7:
        1:
            header: Selamat datang di tingkat 7
            text: Di level ini Anda akan belajar cara mengulang sebaris kode sebanyak yang Anda mau.
        2:
            header: ulangi 3 kali
            text: |-
                Jika Anda ingin mengulang satu baris kode, Anda dapat menggunakan kode `{repeat}` 3 `{times}`.
                Jika Anda ingin mengulangi baris tersebut lebih sering, cukup ubah nomornya.

                Misalnya: Jika Anda memprogram cerita di mana karakter Anda berteriak minta tolong sebanyak 5 kali, tampilannya akan seperti ini:
        3:
            header: Jangan lupa print command
            text: Saat menggunakan perintah ulangi, jangan lupa perintah `{print}`.
        4:
            header: Ulangi perintah tanya
            text: Anda juga dapat mengulangi perintah `{ask}`, `{if}`, atau `{else}` beberapa kali.
        6:
            header: Siap Berangkat!
            text: Nikmati petualangan di level 7!
    8:
        1:
            header: Selamat datang di level 8
            text: Di level ini Anda akan belajar menggunakan indentasi agar perintah `{repeat}`, `{if}` dan `{else}` berfungsi untuk beberapa baris kode.
        2:
            header: '{repeat} perintah sebelumnya'
            text: |-
                Pada level sebelumnya, perintah `{repeat}` terlihat seperti ini:

                Anda hanya dapat mengulang satu baris kode.
        3:
            header: '{repeat} perintah sebelumnya'
            text: |-
                Di level ini Anda dapat mengulang beberapa baris kode. Untuk melakukan ini, Anda harus memberi tahu komputer jalur mana yang termasuk dan harus diulang.
                Caranya dengan menggunakan indentasi.

                Gunakan 4 spasi (atau satu tab) di awal setiap baris yang ingin Anda ulangi, seperti ini:
        4:
            header: '{repeat} perintah sekarang'
            text: |-
                Jika mau, Anda dapat melanjutkan setelah perintah `{repeat}` tanpa lekukan.
                Garis yang tidak dimulai dengan lekukan tidak akan terulang.
        5:
            header: jika dan yang lain sebelumnya
            text: |-
                Hal yang sama berlaku untuk perintah `{if}` dan `{else}`.
                Ini adalah perintah sebelumnya:
        6:
            header: jika dan yang lain sekarang
            text: |-
                Ini adalah perintah `{if}` dan `{else}` sekarang.
                Setiap baris setelah perintah `{if}` dan `{else}` dimulai dengan indentasi.
        7:
            header: menghentikan lekukan
            text: Sama seperti perintah `{repeat}`, Anda dapat berhenti menggunakan indentasi dan garis akan selalu ditampilkan. Bukan hanya jika pernyataan itu benar.
        8:
            header: pernyataan if di dalam pernyataan if
            text: |-
                Anda mungkin berpikir untuk mencoba memasukkan perintah if ke dalam perintah repeat, atau ke dalam perintah if yang lain.
                Untuk saat ini, hal tersebut belum memungkinkan. Di level yang lebih tinggi akan diperbolehkan, namun untuk saat ini mari kita fokus melatih perintah `{if}` `{else}` dan `{repeat}` dengan indentasi yang benar terlebih dahulu.
        10:
            header: Mari kita lihat petualangannya!
            text: Nikmati petualangan di level 8!
    9:
        1:
            header: Selamat datang di level 9
            text: |-
                Di level ini Anda dapat menggunakan beberapa baris kode setelah perintah `{if}` atau setelah perintah `{repeat}`.

                Anda bahkan dapat memasukkan perintah `{repeat}` ke dalam perintah `{repeat}` lainnya.
        2:
            header: Beberapa baris setelah `{repeat}`
            text: Anda diperbolehkan menggunakan beberapa baris setelah `{repeat}`.
        3:
            header: Indentasi itu penting!
            text: Indentasi sangat penting untuk memberitahu komputer jalur mana yang harus diulang dan jalur mana yang hanya boleh dijalankan satu kali.
        4:
            header: Beberapa baris setelah `{if}`
            text: Anda juga dapat menggunakan beberapa baris setelah `{if}`
        5:
            header: Indentasi penting
            text: Sekali lagi, indentasi masih sangat penting dan dapat membuat perbedaan besar pada kode.
        6:
            header: Sebuah `{if}` di dalam `{repeat}`
            text: |-
                Sekarang Anda dapat menggunakan beberapa baris kode setelah perintah ini, Anda juga dapat menempatkannya di dalam satu sama lain.
                Coba lihat:
        7:
            header: Perhatikan lekukannya
            text: Ingatlah bahwa baris keempat dan keenam kode ini dimulai dengan 8 spasi indentasi.
        9:
            header: Ayo pergi!
            text: Nikmati petualangan di level 9!
    10:
        1:
            header: Selamat datang di level 10
            text: 'Di level ini Anda akan mempelajari perintah baru: `{for}`.'
        2:
            header: Perintah untuk
            text: Dengan for Anda dapat membuat daftar dan menggunakan semua item dalam daftar itu. `{for}` membuat blok, seperti pengulangan dan jika demikian, semua baris dalam blok harus diawali dengan indentasi (4 spasi).
        3:
            header: Perintah untuk
            text: 'Di sini Anda melihat contoh lain dari perintah `{for}`:'
        5:
            header: Saatnya memprogram!
            text: Nikmati petualangan di level 10!
    11:
        1:
            header: Selamat datang di level 11
            text: |-
                Di level ini, kita menambahkan bentuk baru dari perintah `{for}`. Di level sebelumnya, kita menggunakan for dengan daftar, namun kita juga bisa menggunakan for dengan angka.

                Dengan cara ini kita tidak memerlukan perintah `{repeat}` lagi.
        2:
            header: Perintah untuk
            text: 'Seperti inilah tampilan perintah for yang baru:'
        3:
            header: variabel i
            text: |-
                Pada slide sebelumnya variabel tersebut diberi nama 'counter' karena menghitung mundur.
                Tentu saja Anda dapat menggunakan nama apa pun untuk variabel yang Anda inginkan.
                Nama standar untuk variabel dalam situasi ini yang digunakan dalam bahasa pemrograman seperti Python adalah 'i'.
                Itu terlihat seperti ini:
        5:
            header: Mari kita mulai pemrograman!
            text: Nikmati petualangan di level 11!
    12:
        1:
            header: Selamat datang di tingkat 12
            text: |-
                Mulai level ini Anda diperbolehkan menggunakan angka desimal dan ada beberapa perubahan pada tanda kutip.
                Anda juga dapat menggunakan fungsi mulai level ini!
        2:
            header: Tanda kutip
            text: |-
                Level ini membuat beberapa perubahan pada penggunaan tanda kutip.
                Mulai sekarang, **semua teks** harus dalam tanda kutip. Ini termasuk nilai variabel, item pada daftar dan teks setelah perintah {if}.
        3:
            header: Angka desimal
            text: |-
                Mulai level ini Anda juga diperbolehkan menggunakan angka desimal. Ini dapat membuat program seperti restoran Anda menjadi lebih baik!

                Angka tidak diberi tanda petik.
        4:
            header: Fungsi!
            text: |-
                Di level ini Anda akan mempelajari cara menggunakan fungsi. Fungsi adalah blok kode yang dapat Anda gunakan berkali-kali dengan mudah. Menggunakan fungsi membantu kita mengatur potongan kode yang dapat kita gunakan berulang kali. Untuk membuat suatu fungsi, gunakan definisikan dan beri nama fungsi tersebut. Kemudian letakkan semua baris yang Anda inginkan dalam fungsi tersebut dalam blok menjorok di bawah garis definisikan. Biarkan satu baris kosong di kode Anda agar terlihat bagus dan rapi. Kerja bagus! Anda telah membuat sebuah fungsi!

                Sekarang, kapan pun kita membutuhkan blok kode itu, kita cukup menggunakan call dengan nama fungsi untuk memanggilnya! Kita tidak perlu mengetikkan blok kode itu lagi.
        5:
            text: |-
                Dalam program ini Anda melihat contoh suatu fungsi.
                Mari kita lihat apa yang terjadi jika Anda mengisi sisa lagunya!
        6:
            header: Fungsi
            text: Seperti yang Anda lihat pada contoh, fungsi adalah blok kode yang dapat dipanggil kapan saja. Anda menggunakan `{define}` untuk menyetel fungsi dan `{call}` untuk menggunakannya.
        8:
            header: Siap mencobanya?
            text: Nikmati petualangan di level 12!
    13:
        1:
            header: Selamat datang di level 13
            text: |-
                Kita sekarang akan mempelajari `{and}` dan `{or}`! Jika Anda ingin memeriksa dua pernyataan, Anda tidak harus menggunakan dua if tetapi dapat menggunakan dan dan atau.
                Mulai sekarang Anda juga bisa menggunakan argumen dalam fungsi Anda.
        2:
            header: Perintah dan
            text: |-
                Perintah `{and}` selalu digunakan bersama dengan perintah {if}.
                Dengan cara ini Anda dapat memeriksa apakah 2 pernyataan benar. Misalnya:
        3:
            header: Perintah atau
            text: |-
                Perintah `{or}` bekerja dengan cara yang sama seperti perintah `{and}`, namun hanya 1 dari dua pernyataan yang harus benar.

                Mari kita lihat apa yang terjadi jika Anda mengubah `{and}` menjadi `{or}`.
        4:
            header: Fungsi dengan argumen
            text: Sekarang setelah Anda mempelajari cara menggunakan fungsi, Anda akan mempelajari cara menggunakan fungsi dengan **argumen**. Argumen adalah variabel yang digunakan dalam suatu fungsi. Itu tidak digunakan di luar fungsi.
        5:
            header: Contoh
            text: |-
                Dalam contoh ini Anda melihat bagaimana argumen 'tempat' digunakan dalam fungsi.
                Jalankan kode dan ubah 'ocean' dan 'sea' menjadi sesuatu yang lain, dan lihat apa yang terjadi.
        6:
            header: Contoh dengan variabel
            text: |-
                Sekarang Anda telah memahami cara kerja argumen, Anda juga dapat menggabungkan fungsi dengan pertanyaan.

                Apa yang terjadi jika Anda melakukan perubahan berikut:
                ```
                tentukan lagu dengan tempatnya
                    cetak tempat 'Bonnie saya adalah'

                jawabannya adalah bertanya 'Di mana Bonnie saya?'
                panggilan lagu dengan jawaban
                ```
        7:
            header: Lebih banyak pertanyaan lagi!
            text: |-
                Sekarang kami telah menggabungkan lebih banyak pertanyaan dengan fungsinya. Ketik kode ini dan lihat apa yang terjadi.

                Perhatikan bagaimana variabel dan argumen memiliki nama yang sama. Ini diperbolehkan.
                Apakah itu membingungkanmu? Gunakan saja nama yang berbeda, itu diperbolehkan juga.
                ```
                tentukan lagu dengan nama, tempat
                    print 'Nama' saya adalah 'tempat

                namanya bertanya 'Siapa?'
                tempat bertanya 'Di mana mereka?'
                panggil lagu dengan nama, tempat
                ```
        9:
            header: Ayo!
            text: Nikmati petualangan di level 13!
    14:
        1:
            header: Selamat datang di level 14
            text: Di level ini Anda akan mempelajari beberapa simbol baru yang dapat membantu Anda meningkatkan program Anda, seperti >. Anda juga akan belajar bekerja dengan nilai kembalian suatu fungsi.
        2:
            header: Simbol
            text: |-
                Ini adalah simbol baru yang dapat Anda gunakan:

                  Tanda > berarti lebih besar dari...

                  Tanda >= berarti lebih besar atau sama dengan...

                  < berarti lebih kecil dari...

                  <= berarti lebih kecil dari atau sama dengan...

                Anda dapat menggunakannya seperti ini:
        3:
            header: Simbol
            text: |-
                Anda juga bisa menggunakan:

                == sama dengan.

                != tidak

                == digunakan dalam pernyataan `{if}`.
        4:
            header: Nilai kembalian
            text: Pada level sebelumnya Anda telah belajar membuat fungsi dan menggunakan argumen dengannya. Kegunaan hebat lainnya dari suatu fungsi adalah membiarkannya menghitung sesuatu untuk Anda. Anda dapat memberikan fungsi perhitungan dan itu akan memberi Anda jawaban perhitungannya. Jawaban ini disebut **nilai kembalian**.
        5:
            header: Nilai kembalian
            text: Misalnya, dalam kode ini fungsi hitung_harga_baru akan menghitung harga baru suatu barang. Ini akan memberi Anda harga baru sebagai nilai pengembalian.
        7:
            header: Ayo mulai bekerja!
            text: Nikmati petualangan di level 14!
    15:
        1:
            header: Selamat datang di level 15
            text: Di level ini Anda akan mempelajari tentang perulangan `{ while}`.
        2:
            text: |-
                Kita akan mempelajari perulangan baru, perulangan while! Perulangan akan terus berlanjut selama pernyataan tersebut benar. Jadi jangan lupa untuk mengubah nilai dalam loop.

                Dalam kode contoh, kami melanjutkan hingga jawaban yang benar diberikan. Jika jawaban yang benar tidak pernah diberikan, perulangan tidak akan pernah berakhir!
        4:
            header: Mari kita mencobanya!
            text: Nikmati petualangan di level 15!
    16:
        1:
            header: Selamat datang di level 16
            text: Di level ini Anda akan belajar tentang [tanda kurung siku] dan cara menggunakannya.
        2:
            header: Tanda kurung siku
            text: Kita akan membuat daftar dengan cara Python, dengan tanda kurung siku di sekeliling daftar! Kami juga menyimpan tanda kutip di sekitar setiap item seperti yang telah kami pelajari di level sebelumnya. Kami menggunakan tanda kurung siku untuk menunjukkan suatu tempat dalam daftar. Perintah secara acak tidak dapat digunakan lagi.
        4:
            header: Mari kita mencobanya!
            text: Nikmati petualangan di level 16!
    17:
        1:
            header: Selamat datang di level 17
            text: di level ini Anda akan belajar cara menggunakan titik dua dan Anda akan mempelajari perintah elif.
        2:
            header: Tanda titik dua
            text: 'Sekarang kita akan mengubah indentasinya sedikit. Setiap kali kita memerlukan indentasi, kita memerlukan : pada baris sebelum indentasi.'
        3:
            text: 'Di level ini Anda juga bisa menggunakan perintah baru: elif. elif adalah kependekan dari else if dan Anda membutuhkannya ketika Anda ingin membuat 3 opsi (atau lebih!). Coba lihat!'
        5:
            header: Mari kita coba!
            text: Nikmati petualangan di level 17!
    18:
        1:
            header: Selamat datang di level 18
            text: Selamat! Anda telah mencapai level terakhir Hedy! Kode yang Anda buat di sini dapat disalin ke lingkungan Python nyata seperti replit atau PyCharm, dan Anda dapat terus belajar di sana! Namun perlu diingat bahwa Python hanya dapat membaca perintah bahasa Inggris, jadi jika Anda selama ini menggunakan bahasa lain, Anda harus beralih ke bahasa Inggris sekarang.
        2:
            header: Cara Python
            text: |-
                Kita sampai pada kode Python yang sebenarnya! Itu berarti kita perlu menggunakan tanda kurung dengan print dan range mulai sekarang.

                Selain itu, jika Anda ingin mencetak lebih dari satu item, Anda perlu memisahkannya dengan koma.

                Perubahan terakhir yang perlu kita lakukan untuk mendapatkan kode Python adalah mengubah permintaan menjadi input.

                Klik pada tab 'cetak' untuk semua contoh.
        3:
            header: Petualangan terakhir!
            text: Nikmati petualangan terakhir di level 18!
