1:
-   name: '{print}'
    explanation: Izpi≈°ite nekaj z `{print}`.
    demo_code: '{print} Dobrodo≈°li v Hedy!'
-   name: '{ask}'
    explanation: Vpra≈°ajte kaj z `{ask}`.
    demo_code: '{ask} Katero barvo imate najraj≈°i?'
-   name: '{echo}'
    explanation: Ponovite nekaj z `{echo}`.
    demo_code: "{ask} Katero barvo imate najraj≈°i?\n{echo} torej je va≈°a najljub≈°a barva"
-   name: '{print} emoji-ji'
    explanation: Izpi≈°i emoji z `{print}`.
    demo_code: '{print} üôã üåç ‚ùó'
-   name: '{forward}'
    explanation: Naredite ƒçrto z `{forward}`.
    demo_code: '{forward} 100'
-   name: '{turn}'
    explanation: Obrnite ≈æelvo za risanje z `{turn}`.
    demo_code: "{forward} 25\n{turn} {left}\n{forward} 25\n{turn} {right}"
2:
-   name: '{is}'
    explanation: Poimenujte besedo, ki jo boste uporabili v programu z uporabo `{is}`. Ime si lahko izberete sami.
    demo_code: "ime {is} Hedy\n{print} dobrodo≈°li ime"
-   name: '{ask}'
    explanation: Vpra≈°ajte nekaj z `{ask}`. Pozor! Odgovoru morate podati ime z `{is}`.
    demo_code: "barva {is} {ask} Katera je va≈°a najljub≈°a barva?\n{print} barva je va≈°a najljub≈°a barva!"
-   name: '{sleep}'
    explanation: S `{sleep}`, lahko Hedy zaustavite za sekundo (ali veƒç).
    demo_code: "{print} Naj malo razmislim...\n{sleep}\n{print} Hmm.. Potrebujem ≈°e par sekund...\n{sleep} 2\n{print} Eureka, imam re≈°itev!"
-   name: '{is} z ≈æelvo'
    explanation: ≈†tevilki dajte ime z `{is}`. Izberete lahko poljubno ime.
    demo_code: "kot {is} 90\n{turn} kot\n{forward} 100"
3:
-   name: Izberite nakljuƒçno
    explanation: Izberite nakljuƒçno besedo iz skupine z `{at}` in `{random}`.
    demo_code: "≈æivali {is} pes, maƒçka, kenguru\n{print} ≈æivali {at} {random}"
-   name: '{add}'
    explanation: '`{add}` element `{to_list}` v seznam.'
    demo_code: "≈æivali {is} krava, maƒçka\n{add} pes {to_list} ≈æivali"
-   name: '{remove}'
    explanation: '`{remove}` element `{from}` seznama.'
    demo_code: "≈æivali {is} maƒçka, pes, krava\n{remove} pes {from} ≈æivali"
4:
-   name: '{print}'
    explanation: Izpi≈°ite natanƒçno z uporabno navednic.
    demo_code: "{print} 'Pozdravljeni in dobrodo≈°li v Hedy.'"
-   name: '{is}'
    explanation: Dajte nekemu besedilu ime in uporabite ukaz `{print}` brez narekovajev.
    demo_code: "ime {is} Hedy\n{print} 'moje ime je ' ime"
-   name: '{ask}'
    explanation: Vpra≈°ajte nekaj z `{ask}`.
    demo_code: "barva {is} {ask} 'Katera je va≈°a najljub≈°a barva?'\n{print} barva ' je va≈°a najljub≈°a barva!'"
5:
-   name: '{print}'
    explanation: Izpi≈°ite natanƒçno z uporabo narekovajev.
    demo_code: "{print} 'Pozdravljeni, dobrodo≈°li v Hedy.'"
-   name: '{ask}'
    explanation: Vpra≈°ajte nekaj z ukazom `{ask}`.
    demo_code: "barva {is} {ask} 'Katera je va≈°a najljub≈°a barva?'\n{print} barva ' je va≈°a najljub≈°a barva!'"
-   name: '{if}'
    explanation: Naredite izbiro z ukazom `{if}`.
    demo_code: "barva {is} {ask} 'Katera je va≈°a najljub≈°a barva?'\n{if} barva {is} zlena {print} 'lepo!' {else} {print} 'eh...'"
-   name: '{if} z ≈æelvo'
    explanation: Naredite izbiro z ukazom `{if}`.
    demo_code: "odgovor {is} {ask} ' Kako daleƒç naj hodim?'\n{if} odgovor {is} daleƒç {forward} 100 {else} {forward} 5"
-   name: '{in}'
    explanation: Elemente preverite z ukazom `{in}`.
    demo_code: "lepe_barve {is} zelena, rumena\nbarva {is} {ask} 'Katera je va≈°a najljub≈°a barva?'\n{if} barva {in} lepe_barve  {print} 'Lepo!' {else} {print} 'eh...'"
-   name: '{pressed}'
    explanation: Preverite ƒçe je dana tipka pritisnjena na tipkovnici `{pressed}`.
    demo_code: "{if} a {is} {pressed} {print} 'Pritisnili ste A!' {else} {print} 'Pritisnili ste neko drugo tipko!'"
6:
-   name: '{print}'
    explanation: Natanƒçno natisnite z narekovaji.
    demo_code: "{print} '5 krat 5 je ' 5 * 5"
-   name: '{ask}'
    explanation: Zahtevajte izraƒçun in preverite, ali je pravilen.
    demo_code: "odgovor = {ask} 'Koliko je 10 plus 10?'\n{if} odgovor {is} 20 {print} 'Pravilno!' {else} {print} 'Ups...'"
-   name: '`{ask}` in `{if}` z ≈æelvo'
    explanation: Uporabnike vpra≈°ajte, koliko kotov ≈æelijo.
    demo_code: "koti = {ask} 'Koliko kotov?'\nkot = 360 / koti\n{forward} 50"
7:
-   name: '{print}'
    explanation: Izpi≈°ite natanƒçno z narekovaji.
    demo_code: "{print} 'Pozdravljeni, dobrodo≈°li v Hedy.'"
-   name: '{ask}'
    explanation: Vpra≈°ajte nekaj z ukazom `{ask}`.
    demo_code: "barva = {ask} 'Katera je va≈°a najljub≈°a barva?'\n{print} barva ' je va≈°a najljub≈°a barva!'"
-   name: '{if}'
    explanation: Izberite z ukazom `{if}`.
    demo_code: "barva = {ask} 'Katera je va≈°a najljub≈°a barva?'\n{if} barva {is} zelena {print} 'Lepo!' {else} {print} 'Eh...'"
-   name: '{repeat} z ≈æelvo'
    explanation: Ponovite vrstico kode z ukazom `{repeat}`.
    demo_code: '{repeat} 3 {times} {forward} 10'
8:
-   name: '{print}'
    explanation: Nekaj izpi≈°ite. Pri dobesednem izpisovanju ne pozabite uporabiti narekovajev.
    demo_code: "{print} '5 krat 5 je ' 5 * 5"
-   name: '{ask}'
    explanation: Vpra≈°ajte za odgovor na vsoto izraƒçuna in preverite, ali je pravilen. Zdaj lahko natisnemo 2 vrstici.
    demo_code: "answer = {ask} 'What is 5 plus 5?'\n{if} answer {is} 10\n    {print} 'Well done!'\n    {print} 'Indeed, the answer was ' answer\n{else}\n    {print} 'Oops!'\n    {print} 'The answer is 10'"
-   name: '{repeat} z ≈æelvo'
    explanation: Ponovite veƒç vrstic.
    demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
-   name: '{pressed}'
    explanation: Preveri, ali je dana tipka na tipkovnici `{pressed}`.
    demo_code: "{if} a {is} {pressed}\n    {print} 'Pritisnili ste A!'\n{else}\n    {print} 'Pritisnili ste drugo tipko!'"
9:
-   name: '{if} z veƒç vrsticami'
    explanation: Odgovor na vsoto vpra≈°anj z `{ask}` in preverite, ali je pravilen. Zdaj izpi≈°emo dve vrstici.
    demo_code: "answer = {ask} 'What is 10 plus 10?'\n{if} answer {is} 20\n    {print} 'Well done!!'\n    {print} 'The answer is indeed' answer\n{else}\n    {print} 'Wrong'\n    {print} 'The answer is 20'"
-   name: '{repeat} z ≈æelvo'
    explanation: Ponovite veƒç vrstic.
    demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
10:
-   name: '{print}'
    explanation: Nekaj natisnite. Pri dobesednem tiskanju ne pozabite uporabiti narekovajev.
    demo_code: "{print} '5 krat 5 je ' 5 * 5"
-   name: '{for} s seznamom'
    explanation: Izpi≈°ite vse stvari na seznamu.
    demo_code: "≈æivali {is} pes, maƒçka, ribica\n{for} ≈æival {in} ≈æivali\n  {print} 'I love ' ≈æival"
11:
-   name: '{for} zanka'
    explanation: Zanko `{for}` lahko uporabimo skupaj z `{range}`.
    demo_code: "{for} ≈°tevec {in} {range} 1 {to} 5\n    {print} ≈°tevec"
-   name: '{ask}'
    explanation: Vpra≈°ajte za odgovor na vsoto in preverite, ali je pravilen. Zdaj lahko natisnemo 2 vrstici.
    demo_code: "answer = {ask} 'What is 5 plus 5?'\n{if} answer {is} 10\n    {print} 'Well done!'\n    {print} 'Indeed, the answer was ' answer\n{else}\n    {print} 'Oops!'\n    {print} 'The answer is 10'"
12:
-   name: plavajoƒçe neposredno
    explanation: Decimalne ≈°tevilke.
    demo_code: "{print} 'Calculate away!'\n{print} 'Two and a half plus two and a half is...'\n{print} 2.5 + 2.5"
-   name: doloƒçi besedilo
    explanation: Besedilo z narekovaji za `=`
    demo_code: "ime = 'Hedy Robot'\n{print} 'Pozdravljen ' ime"
-   name: narekovaji za primerjavo `{if}`
    explanation: Besedilo v narekovajih za `{if}`.
    demo_code: "ime = {ask} 'Kdo si ti?'\n{if} ime= 'Hedy'\n    {print} '≈Ωivijo!'"
-   name: narekovaji na seznamu
    explanation: Seznam z narekovaji.
    demo_code: "superjunaki = 'Iron Man', 'Batman', 'Superman'\n{print} superjunaki {at} {random}"
13:
-   name: '{and}'
    explanation: Oba dela morata biti praivlna.
    demo_code: "odgovor1 = {ask} 'Koliko je 3+2?'\nodgovor2 = {ask} 'Koliko je 2+2?'\n{if} odgovor1 {is} 5 {and} odgovor2 {is} 4\n     {print} 'Oba odgovora sta pravilna!'\n{else}\n     {print} 'Vsaj en odgovor je napaƒçen!'"
-   name: '{or}'
    explanation: Vsaj 1 od obeh delov mora biti pravilen. ƒåe je oboje pravilno, je tudi v redu.
    demo_code: "odgovor1 = {ask} 'Koliko is 3+2?'\nodgovor2 = {ask} 'Koliko is 2+2?'\n{if} odgovor1 {is} 5 {or} odgovor2 {is} 4\n    {print} 'Vsaj en odgovor je pravilen!'\n{else}\n    {print} 'Oba odgovora sta nepravilna!'"
14:
-   name: Manj≈°i
    explanation: Za preverjanje, ali je prvo ≈°tevilo manj≈°e od drugega, uporabimo `<`.
    demo_code: "starost = {ask} 'Koliko ste stari?'\n{if} starost < 13\n    {print} 'Mlaj≈°i ste od mene!'"
-   name: Veƒçje
    explanation: Za preverjanje, ali je prvo ≈°tevilo veƒçje od drugega, uporabimo `>`.
    demo_code: "starost = {ask} 'Koliko ste stari?'\n{if} starost > 13\n    {print} 'Starej≈°i ste od mene!'"
-   name: Je enako
    explanation: Za preverjanje, ali sta dve vrednosti enaki, uporabljamo `==`.
    demo_code: "odgovor = {ask} 'Koliko je 5 * 5?'\n{if} odgovor == 25\n    {print} 'Pravilno!'"
-   name: Ni enako
    explanation: Za preverjanje, ali dve vrednosti nista enaki, uporabljamo `!=`.
    demo_code: "odgovor = {ask} 'Koliko je 5 * 5?'\n{if} odgovor != 25\n    {print} 'To ni pravilno!'"
-   name: Manj ali enako
    explanation: Ali je prva vrednost manj≈°a ali enaka drugi preverimo z izrazom `<=`.
    demo_code: "starost = {ask} 'Koliko ste stari?'\n{if} starost <= 12\n    {print} 'Mlaj≈°i ste od mene!'"
-   name: Enako ali veƒç
    explanation: Ali je prva vrednost veƒçja ali enaka drugi preverimo z izrazom `>=`.
    demo_code: "starost = {ask} 'Koliko ste stari?'\n{if} starost >= 14\n    {print} 'Starej≈°i ste od mene!'"
15:
-   name: '{while}'
    explanation: Zanko `{while}` lahko uporabimo skupaj z ni enako.
    demo_code: "odgovor = 0\n{while} odgovor != 25\n    odgovor = {ask} 'Koliko je 5 x 5?'\n{print} 'Podan je bil nepravilen odgovor'"
-   name: Manj≈°i {while}
    explanation: Zanko `{while}` lahko uporabimo tudi z `<` ali `>`.
    demo_code: "≈°tevec = 1\n{while} ≈°tevec < 3\n    {print} 'Ponovimo to ≈°e ' 3 - ≈°tevec '-krat'\n    ≈°tevec = ≈°tevec + 1\n{print} 'Pa smo opravili'"
16:
-   name: oglati oklepaji
    explanation: Seznami z oglatimi oklepaji.
    demo_code: "sadje = ['jabolko', 'banana', 'ƒçe≈°nja']\n{print} sadje"
-   name: Pridobite predmet s seznama
    explanation: Za pridobitev predmeta s seznama uporabimo [≈°tevilo], tako da sadje[1] pomeni, da dobimo prvo sadje s seznama!
    demo_code: "sadje = ['banana', 'jabolko', 'ƒçe≈°nja']\nprvo_sadje = sadje[1]\n{print} prvo_sadje"
-   name: Izbrite nakljuƒçni predmet s seznama
    explanation: Za izbiro nakljuƒçnega predmeta s seznama uporabimo [{random}]. Torej, sadje[{random}] pomeni, da izberete nakljuƒçno sadje s seznama!
    demo_code: "sadje = ['banana', 'jabolko', 'ƒçe≈°nja']\nnakljuƒçno_sadje = sadje[{random}]\n{print} nakljuƒçno_sadje"
17:
-   name: '{elif}'
    explanation: '`{elif}`'
    demo_code: "a = 2\n{if} a == 1:\n    {print} 'a je 1'\n{elif} a == 2:\n    {print} 'a je 2'\n{else}:\n    {print} 'a ni ne 1, ne 2'"
-   name: '{print}'
    explanation: Ko uporabimo zanko `{for}`, moramo za ukazom `{for}` postaviti `:`!
    demo_code: "{for} i {in} {range} 1 {to} 12:\n    {print} i\n{print} 'Pripravljeni ali ne, prihajam!'"
-   name: '{if}'
    explanation: Enako moramo storiti z vsemi na≈°imi `{if}` stavki .
    demo_code: "barva = {ask} 'Katera je va≈°a najljub≈°a barva?'\n{if} barva == 'zelena':\n     {print} 'Va≈°a najljub≈°a barva je zelena'\n{else}:\n     {print} 'Tvoja najljub≈°a barva ni zelena'"
18:
-   name: '{print}'
    explanation: Za ukazom `{print}` morate uporabiti oklepaje.
    demo_code: "{print}('hi!')"
-   name: '{range}'
    explanation: Za ukazom `{range}` morate uporabiti oklepaje.
    demo_code: "{for} i {in} {range} (1,10):\n    {print}('≈Ωivijo, krat ', i)"
-   name: '{print} s spremenljivko'
    explanation: Pri ukazu `{print}` morate uporabiti oklepaje in vejice, ƒçe natisnete veƒç elementov.
    demo_code: "ime = 'Hedy'\n{print}('Moje ime je ', ime)"
-   name: vpra≈°ajte nekaj z ukazom {input}
    explanation: Uporabi `{input}` namesto `{ask}` da nekaj vpra≈°ate.
    demo_code: "ime = {input}('Kako vam je ime?')\n{print}('Torej, ime vam je ', ime)"
