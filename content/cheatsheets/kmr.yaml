8:
-   name: '{print}'
    explanation: Print something. Remember to use a quotation mark for literal printing.
    demo_code: "{print} '5 times 5 is ' 5 * 5"
-   name: '{ask}'
    explanation: Ask for the answer to a sum and check if it is correct. We can now print 2 lines.
    demo_code: "answer = {ask} 'What is 5 plus 5?'\n{if} answer {is} 10\n    {print} 'Well done!'\n    {print} 'Indeed, the answer was ' answer\n{else}\n    {print} 'Oops!'\n    {print} 'The answer is 10'"
-   name: '{repeat} with turtle'
    explanation: Repeat multiple lines.
    demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
-   name: '{pressed}'
    explanation: Check whether a given key on the keyboard is `{pressed}`.
    demo_code: "{if} a {is} {pressed}\n    {print} 'You pressed A!'\n{else}\n    {print} 'You pressed another key!'"
17:
-   name: '{elif}'
    explanation: '`{elif}`'
    demo_code: "a = 2\n{if} a == 1:\n    {print} 'a is 1'\n{elif} a == 2:\n    {print} 'a is 2'\n{else}:\n    {print} 'a is not 1 or 2'"
-   demo_code: "{for} i {in} {range} 1 {to} 12:\n    {print} i\n{print} 'Ready or not, here I come!'"
    name: '{print}'
    explanation: When we use a `{for}`, we need to put a `:` behind the `{for}` statement!
-   name: '{if}'
    explanation: We need to do the same with all of our `{if}` statements.
    demo_code: "color = {ask} 'What is your favorite color?'\n{if} color == 'green':\n    {print} 'Your favorite color is green'\n{else}:\n    {print} 'Your favorite color is not green'"
18:
-   name: '{print}'
    explanation: After `{print}` you need to use parentheses.
    demo_code: "{print}('hi!')"
-   name: '{range}'
    explanation: After `{range}` you need to use parentheses.
    demo_code: "{for} i {in} {range} (1,10):\n    {print}('Hello, times ', i)"
-   name: '{print} with var'
    explanation: With `{print}` you need to use parentheses and commas if you print more items.
    demo_code: "name = 'Hedy'\n{print}('my name is ', name)"
-   name: ask something with {input}
    explanation: Use `{input}` instead of `{ask}` to ask something.
    demo_code: "name = {input}('What is your name?')\n{print}('So your name is ', name)"
1:
-   name: '{√ßap}'
    explanation: Ti≈ütek√Æ bi `{print}` √ßap bike.
    demo_code: '{print} Silav bi x√™r hat√Æ Hedy!'
-   name: '{pirs√Æn}'
    explanation: Ti≈ütek√Æ bi `{ask}` bipirse.
    demo_code: '{ask} Reng√™ te y√™ bijarte √ßi ye?'
-   name: '{dengveger√Æn}'
    explanation: Ti≈ütek√Æ bi bikaran√Æna `{dengveger√Æn}` dubare bike.
    demo_code: "{ask} Reng√™ te y√™ bijarte √ßi ye?\n{echo} ji ber v√™ yek√™ reng√™ te √™ bijare ye"
-   name: '{print} emojiyan'
    explanation: Emojiyek√™ bi `{print}` √ßap bike.
    demo_code: '{print} üôã üåç ‚ùó'
-   name: '{p√™≈üve}'
    explanation: Bi `{p√™≈üve}` x√™zek√™ x√™z bike.
    demo_code: '{forward} 100'
-   name: '{biz√Ævire}'
    explanation: Kos√Æya x√™zkir√Æ bi `{biz√Ævire}` bizivir√Æne.
    demo_code: "{forward} 25\n{turn} {left}\n{forward} 25\n{turn} {right}"
2:
-   name: '{is}'
    explanation: Give a word a name to use in the program using `{is}`. You can choose the name yourself.
    demo_code: "name {is} Hedy\n{print} welcome name"
-   name: '{ask}'
    explanation: Ask something with `{ask}`. Beware! You need to give the answer a name with `{is}`.
    demo_code: "color {is} {ask} What is your favorite color?\n{print} color is your favorite!"
-   name: '{sleep}'
    explanation: '`{sleep}` let Hedy pause for a (couple of) second(s).'
    demo_code: "{print} Let me think for one second...\n{sleep}\n{print} Hmm.. I need 3 more seconds...\n{sleep} 3\n{print} Eureka! Ive got it!"
-   demo_code: "angle {is} 90\n{turn} angle\n{forward} 100"
    name: '{is} with turtle'
    explanation: Give a number a name using `{is}`. You can choose the name yourself.
3:
-   name: Choose random
    explanation: Choose a random word from a group with `{at}` and `{random}`.
    demo_code: "animals {is} dog, cat, kangaroo\n{print} animals {at} {random}"
-   name: '{add}'
    explanation: '`{add}` an item `{to_list}` a list.'
    demo_code: "animals {is} cow, cat\n{add} dog {to_list} animals"
-   name: '{remove}'
    explanation: '`{remove}` an item `{from}` a list.'
    demo_code: "animals {is} cat, dog, cow\n{remove} dog {from} animals"
4:
-   name: '{print}'
    explanation: Print exactly using quotation marks.
    demo_code: "{print} 'Hello welcome to Hedy.'"
-   name: '{is}'
    explanation: Give a name to some text and `{print}` without quotation marks.
    demo_code: "name {is} Hedy\n{print} 'my name is ' name"
-   name: '{ask}'
    explanation: Ask something with `{ask}`.
    demo_code: "color {is} {ask} 'What is your favorite color?'\n{print} color ' is your favorite!'"
5:
-   name: '{print}'
    explanation: Print exactly using quotation marks.
    demo_code: "{print} 'Hello welcome to Hedy.'"
-   name: '{ask}'
    explanation: Ask something with `{ask}`.
    demo_code: "color {is} {ask} 'What is your favorite color?'\n{print} color ' is your favorite!'"
-   name: '{if}'
    explanation: Make a choice with `{if}`.
    demo_code: "color {is} {ask} 'What is your favorite color?'\n{if} color {is} green {print} 'pretty!' {else} {print} 'meh'"
-   name: '{if} with turtle'
    explanation: Make a choice with `{if}`.
    demo_code: "answer {is} {ask} 'How far should I walk?'\n{if} answer {is} far {forward} 100 {else} {forward} 5"
-   name: '{in}'
    explanation: Check elements with `{in}`.
    demo_code: "pretty_colors {is} green, yellow\ncolor {is} {ask} 'What {is} your favorite color?'\n{if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'"
-   name: '{pressed}'
    explanation: Check whether a given key on the keyboard is `{pressed}`.
    demo_code: "{if} a {is} {pressed} {print} 'You pressed A!' {else} {print} 'You pressed another key!'"
6:
-   name: '{print}'
    explanation: Print exactly using quotation marks.
    demo_code: "{print} '5 times 5 is ' 5 * 5"
-   name: '{ask}'
    explanation: Ask for a calculation and check whether it is correct.
    demo_code: "answer = {ask} 'What is 10 plus 10?'\n{if} answer {is} 20 {print} 'Yes!' {else} {print} 'Oops'"
-   name: '{ask} and {if} with turtle'
    explanation: Ask the user how many angles they want.
    demo_code: "angles = {ask} 'How many angles?'\nangle = 360 / angles\n{forward} 50"
7:
-   name: '{print}'
    explanation: Print exactly using quotation marks.
    demo_code: "{print} 'Hello welcome to Hedy.'"
-   name: '{ask}'
    explanation: Ask something with `{ask}`.
    demo_code: "color = {ask} 'What is your favorite color?'\n{print} color ' is your favorite!'"
-   name: '{if}'
    explanation: Make a choice with `{if}`.
    demo_code: "color = {ask} 'What is your favorite color?'\n{if} color {is} green {print} 'pretty!' {else} {print} 'meh'"
-   name: '{repeat} with turtle'
    explanation: Repeat a line of code with `{repeat}`.
    demo_code: '{repeat} 3 {times} {forward} 10'
9:
-   name: '{if} with multiple lines'
    explanation: The answer of a sum of questions with `{ask}` and see if it is correct. Now we print out two lines.
    demo_code: "answer = {ask} 'What is 10 plus 10?'\n{if} answer {is} 20\n    {print} 'Well done!!'\n    {print} 'The answer is indeed' answer\n{else}\n    {print} 'Wrong'\n    {print} 'The answer is 20'"
-   name: '{repeat} with turtle'
    explanation: Repeat multiple lines.
    demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
10:
-   name: '{print}'
    explanation: Print something. Remember to use a quotation mark for literal printing.
    demo_code: "{print} '5 times 5 is ' 5 * 5"
-   name: '{for} with a list'
    explanation: Print all things in a list.
    demo_code: "animals {is} dog, cat, blobfish\n{for} animal {in} animals\n  {print} 'I love ' animal"
11:
-   name: '{for} loop'
    explanation: We can use `{for}` with a `{range}`.
    demo_code: "{for} counter {in} {range} 1 {to} 5\n    {print} counter"
-   name: '{ask}'
    explanation: Ask for the answer to a sum and check if it is correct. We can now print 2 lines.
    demo_code: "answer = {ask} 'What is 5 plus 5?'\n{if} answer {is} 10\n    {print} 'Well done!'\n    {print} 'Indeed, the answer was ' answer\n{else}\n    {print} 'Oops!'\n    {print} 'The answer is 10'"
12:
-   name: float directly
    explanation: Decimal numbers.
    demo_code: "{print} 'Calculate away!'\n{print} 'Two and a half plus two and a half is...'\n{print} 2.5 + 2.5"
-   name: assign text
    explanation: Text with quotation marks after `=`
    demo_code: "name = 'Hedy the Robot'\n{print} 'Hello ' name"
-   name: quotes after {if} comparison
    explanation: Text with quotation marks after `{if}`.
    demo_code: "name = {ask} 'Who are you?'\n{if} name = 'Hedy'\n    {print} 'Hi there!'"
-   name: quotes in list
    explanation: A list with quotation marks.
    demo_code: "superheroes = 'Iron Man', 'Batman', 'Superman'\n{print} superheroes {at} {random}"
13:
-   name: '{and}'
    explanation: Two parts both need to be correct.
    demo_code: "answer1 = {ask} 'What is 3+2?'\nanswer2 = {ask} 'What is 2+2?'\n{if} answer1 {is} 5 {and} answer2 {is} 4\n    {print} 'Both answers are correct!'\n{else}\n    {print} 'At least one answer is wrong!'"
-   demo_code: "answer1 = {ask} 'What is 3+2?'\nanswer2 = {ask} 'What is 2+2?'\n{if} answer1 {is} 5 {or} answer2 {is} 4\n    {print} 'At least one answer is correct!'\n{else}\n    {print} 'Both answers are wrong!'"
    name: '{or}'
    explanation: At least 1 of the two parts need to be correct. If both are correct, it is also fine.
14:
-   name: Smaller
    explanation: We use the `<` to check if the first number is smaller than the second number.
    demo_code: "age = {ask} 'How old are you?'\n{if} age < 13\n    {print} 'You are younger than me!'"
-   name: Bigger
    explanation: We use the `>` to check if the first number is bigger than the second number.
    demo_code: "age = {ask} 'How old are you?'\n{if} age > 13\n    {print} 'You are older than me!'"
-   name: Equal
    explanation: We use the `==` to check if two things are the same.
    demo_code: "answer = {ask} 'What is 5 * 5?'\n{if} answer == 25\n    {print} 'That is correct!'"
-   name: Not equal
    explanation: We use the `!=` to check if two things are not the same.
    demo_code: "answer = {ask} 'What is 5 * 5?'\n{if} answer != 25\n    {print} 'That is not correct!'"
-   name: Smaller or equal
    explanation: We use the `<=` to check if the first number is smaller than or equal to the second number.
    demo_code: "age = {ask} 'How old are you?'\n{if} age <= 12\n    {print} 'You are younger than me!'"
-   name: Bigger or equal
    explanation: We use the `>=` to check if the first number is bigger than or equal to the second number.
    demo_code: "age = {ask} 'How old are you?'\n{if} age >= 14\n    {print} 'You are older than me!'"
15:
-   name: '{while}'
    explanation: We can use the `{while}` loop with not equal.
    demo_code: "answer = 0\n{while} answer != 25\n    answer = {ask} 'What is 5 times 5?'\n{print} 'A correct answer has been given'"
-   name: Smaller {while}
    explanation: We can also use the `{while}` loop with `<` and `>`.
    demo_code: "count = 1\n{while} count < 3\n    {print} 'We do this ' 3 - count ' more times'\n    count = count + 1\n{print} 'We are done'"
16:
-   name: square brackets
    explanation: Lists with square brackets.
    demo_code: "fruit = ['apple', 'banana', 'cherry']\n{print} fruit"
-   name: Get an item from a list
    explanation: To get an item from a list we use [number] so fruit[1] means, get the first fruit from the list!
    demo_code: "fruit = ['banana', 'apple', 'cherry']\nfirstfruit = fruit[1]\n{print} firstfruit"
-   name: Get a random item from a list
    explanation: To get a random item from a list we use [random] so fruit[random] means, get a random fruit from the list!
    demo_code: "fruit = ['banana', 'apple', 'cherry']\nrandom_fruit = fruit[{random}]\n{print} random_fruit"
