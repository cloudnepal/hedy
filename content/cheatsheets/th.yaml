1:
-   name: '{print}'
    explanation: Print something with `{print}`.
    demo_code: '{print} Hello welcome to Hedy!'
-   name: '{ask}'
    explanation: Ask something with `{ask}`.
    demo_code: '{ask} ‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏≠‡∏ö‡∏™‡∏µ‡∏≠‡∏∞‡πÑ‡∏£?'
-   name: '{echo}'
    explanation: Repeat something using `{echo}`.
    demo_code: |-
        {ask} ‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏≠‡∏ö‡∏™‡∏µ‡∏≠‡∏∞‡πÑ‡∏£?
        {echo} ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠
-   name: '{print} ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥'
    explanation: Print an emoji with `{print}`.
    demo_code: '{print} üôã üåç ‚ùó'
-   name: '{forward}'
    explanation: ‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `{forward}`.
    demo_code: '{forward} 100'
-   name: '{turn}'
    explanation: Turn the drawing turtle with `{turn}`.
    demo_code: |-
        {forward} 25
        {turn} {left}
        {forward} 25
        {turn} {right}
2:
-   name: '{is}'
    explanation: Give a word a name to use in the program using `{is}`. You can choose the name yourself.
    demo_code: |-
        name {is} Hedy
        {print} welcome name
-   name: '{ask}'
    explanation: Ask something with `{ask}`. Beware! You need to give the answer a name with `{is}`.
    demo_code: |-
        color {is} {ask} What is your favorite color?
        {print} color is your favorite!
-   name: '{sleep}'
    explanation: '`{sleep}` let Hedy pause for a (couple of) second(s).'
    demo_code: |-
        {print} Let me think for one second...
        {sleep}
        {print} Hmm.. I need 3 more seconds...
        {sleep} 3
        {print} Eureka! Ive got it!
-   name: ‡πÉ‡∏ä‡πâ {is} ‡∏Å‡∏±‡∏ö‡πÄ‡∏ï‡πà‡∏≤
    explanation: Give a number a name using `{is}`. You can choose the name yourself.
    demo_code: |-
        ‡∏°‡∏∏‡∏° {is} 90
        {turn} ‡∏°‡∏∏‡∏°
        {forward} 100
3:
-   name: Choose random
    explanation: ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `{at}` ‡πÅ‡∏•‡∏∞ `{random}`.
    demo_code: |-
        animals {is} dog, cat, kangaroo
        {print} animals {at} {random}
-   name: '{add}'
    explanation: '`{add}` an item `{to_list}` a list.'
    demo_code: |-
        animals {is} cow, cat
        {add} dog {to_list} animals
-   name: '{remove}'
    explanation: '`{remove}` ‡∏Ç‡∏≠‡∏á `{from}` ‡∏•‡∏¥‡∏™‡∏ó‡πå'
    demo_code: |-
        animals {is} cat, dog, cow
        {remove} dog {from} animals
5:
-   name: '{print}'
    explanation: Print exactly using quotation marks.
    demo_code: '{print} ''Hello welcome to Hedy.'''
-   name: '{ask}'
    explanation: Ask something with `{ask}`.
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {print} color ' is your favorite!'
-   name: '{if}'
    explanation: Make a choice with `{if}`.
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {if} color {is} green {print} 'pretty!' {else} {print} 'meh'
-   name: '{if} with turtle'
    explanation: Make a choice with `{if}`.
    demo_code: |-
        answer {is} {ask} 'How far should I walk?'
        {if} answer {is} far {forward} 100 {else} {forward} 5
-   name: '{in}'
    explanation: Check elements with `{in}`.
    demo_code: |-
        pretty_colors {is} green, yellow
        color {is} {ask} 'What {is} your favorite color?'
        {if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'
-   name: '{pressed}'
    explanation: ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏±‡πâ‡∏ô‡πÜ‡∏ö‡∏ô‡∏Ñ‡∏µ‡∏ö‡∏≠‡∏£‡πå‡∏î `{pressed}` ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤
    demo_code: '{if} a {is} {pressed} {print} ''‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î A!'' {else} {print} ''‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏∑‡πà‡∏ô!'''
6:
-   name: '{print}'
    explanation: Print exactly using quotation marks.
    demo_code: '{print} ''5 times 5 is '' 5 * 5'
-   name: '{ask}'
    explanation: Ask for a calculation and check whether it is correct.
    demo_code: |-
        answer = {ask} 'What is 10 plus 10?'
        {if} answer {is} 20 {print} 'Yes!' {else} {print} 'Oops'
-   name: '{ask} and {if} with turtle'
    explanation: Ask the user how many angles they want.
    demo_code: |-
        angles = {ask} 'How many angles?'
        angle = 360 / angles
        {forward} 50
8:
-   name: '{print}'
    explanation: Print something. Remember to use a quotation mark for literal printing.
    demo_code: '{print} ''5 times 5 is '' 5 * 5'
-   name: '{ask}'
    explanation: Ask for the answer to a sum and check if it is correct. We can now print 2 lines.
    demo_code: |-
        answer = {ask} 'What is 5 plus 5?'
        {if} answer {is} 10
            {print} 'Well done!'
            {print} 'Indeed, the answer was ' answer
        {else}
            {print} 'Oops!'
            {print} 'The answer is 10'
-   name: '{repeat} with turtle'
    explanation: Repeat multiple lines.
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
-   name: '{pressed}'
    explanation: ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏±‡πâ‡∏ô‡πÜ‡∏ö‡∏ô‡∏Ñ‡∏µ‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏Ñ‡∏∑‡∏≠ `{pressed}` ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤
    demo_code: |-
        {if} a {is} {pressed}
            {print} '‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î A!'
        {else}
            {print} '‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏∑‡πà‡∏ô!'
12:
-   name: float directly
    explanation: Decimal numbers.
    demo_code: |-
        {print} '‡∏Ñ‡∏¥‡∏î‡πÄ‡∏•‡∏Ç‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞!'
        {print} '‡∏™‡∏≠‡∏á ‡∏Å‡∏±‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ô‡∏∂‡∏á ‡∏ö‡∏ß‡∏Å‡∏î‡πâ‡∏ß‡∏¢ ‡∏™‡∏≠‡∏á ‡∏Å‡∏±‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ô‡∏∂‡∏á ‡∏Ñ‡∏∑‡∏≠'
        {print} 2.5 + 2.5
-   name: assign text
    explanation: Text with quotation marks after `=`
    demo_code: |-
        ‡∏ä‡∏∑‡πà‡∏≠ = '‡πÄ‡∏Æ‡∏î‡∏µ‡πâ'
        {print} '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ' ‡∏ä‡∏∑‡πà‡∏≠
-   name: quotes after {if} comparison
    explanation: Text with quotation marks after `{if}`.
    demo_code: |-
        name = {ask} 'Who are you?'
        {if} name = 'Hedy'
            {print} 'Hi there!'
-   name: quotes in list
    explanation: A list with quotation marks.
    demo_code: |-
        ‡∏Æ‡∏µ‡πÇ‡∏£‡πà = '‡πÑ‡∏≠‡∏£‡πà‡∏≠‡∏ô‡πÅ‡∏°‡∏ô', '‡πÅ‡∏ö‡∏ó‡πÅ‡∏°‡∏ô', '‡∏ã‡∏π‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ô'
        {print} ‡∏Æ‡∏µ‡πÇ‡∏£‡πà {at} {random}
16:
-   name: ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡πÅ‡∏ö‡∏ö‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
    explanation: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏™‡∏ó‡πå‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡πÅ‡∏ö‡∏ö‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
    demo_code: |-
        fruit = ['apple', 'banana', 'cherry']
        {print} fruit
-   name: Get an item from a list
    explanation: To get an item from a list we use [number] so fruit[1] means, get the first fruit from the list!
    demo_code: |-
        fruit = ['banana', 'apple', 'cherry']
        firstfruit = fruit[1]
        {print} firstfruit
-   name: Get a random item from a list
    explanation: To get a random item from a list we use [random] so fruit[random] means, get a random fruit from the list!
    demo_code: |-
        ‡∏ú‡∏•‡πÑ‡∏°‡πâ = ['‡∏Å‡∏•‡πâ‡∏ß‡∏¢', '‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡πâ‡∏•', '‡πÄ‡∏ä‡∏≠‡∏£‡∏£‡∏µ‡πà']
        ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡∏ú‡∏•‡πÑ‡∏°‡πâ = ‡∏ú‡∏•‡πÑ‡∏°‡πâ[{random}]
        {print} ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡∏ú‡∏•‡πÑ‡∏°‡πâ
17:
-   name: '{elif}'
    explanation: '`{elif}`'
    demo_code: |-
        a = 2
        {if} a == 1:
            {print} 'a ‡∏Ñ‡∏∑‡∏≠ 1'
        {elif} a == 2:
            {print} 'a ‡∏Ñ‡∏∑‡∏≠ 2'
        {else}:
            {print} 'a ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 1 ‡∏´‡∏£‡∏∑‡∏≠ 2'
-   name: '{print}'
    explanation: When we use a `{for}`, we need to put a `:` behind the `{for}` statement!
    demo_code: |-
        {for} i {in} {range} 1 {to} 12:
            {print} i
        {print} '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ!'
-   name: '{if}'
    explanation: We need to do the same with all of our `{if}` statements.
    demo_code: |-
        color = {ask} 'What is your favorite color?'
        {if} color == 'green':
            {print} 'Your favorite color is green'
        {else}:
            {print} 'Your favorite color is not green'
18:
-   name: '{print}'
    explanation: After `{print}` you need to use parentheses.
    demo_code: '{print}(''‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ!'')'
-   name: '{range}'
    explanation: After `{range}` you need to use parentheses.
    demo_code: |-
        {for} i {in} {range} (1,10):
            {print}('Hello, times ', i)
-   name: '{print} with var'
    explanation: With `{print}` you need to use parentheses and commas if you print more items.
    demo_code: |-
        name = 'Hedy'
        {print}('my name is ', name)
-   name: ask something with {input}
    explanation: Use `{input}` instead of `{ask}` to ask something.
    demo_code: |-
        name = {input}('What is your name?')
        {print}('So your name is ', name)
