1:
-   name: '{print}'
    explanation: نطبع شيئاً على الشاشة باستخدام `{print}`.
    demo_code: '{print} أهلا ومرحبا بكم في هيدي!'
-   name: '{ask}'
    explanation: نسأل عن شيء ما باستخدام `{ask}`.
    demo_code: '{ask} ما لونك المفضل؟'
-   name: '{echo}'
    explanation: نعيد ترديد اجابة المستخدم عن سؤال باستخدام `{echo}`.
    demo_code: |-
        {ask} ما لونك المفضل؟
        {echo} اها لونك المفضل هو
-   name: '{print} رمزاً تعبيرياً (ايموجي)'
    explanation: نطبع رمزاً تعبيرياً (ايموجي) على الشاشة باستخدام `{print}`.
    demo_code: '{print} 🙋‍ 🌍❗'
-   name: '{forward}'
    explanation: ارسم خطاً مستقيماً باستخدام `{forward}`.
    demo_code: |-
        {forward} ١٠٠
-   demo_code: "{forward} ٢٥\n{turn} {left}\n{forward} ٢٥\n{turn} {right}"
    explanation: قم بالاستدارة و تحويل اتجاه الرسام باستخدام `{turn}`.
    name: '{turn}'
2:
-   name: '{is}'
    explanation: نعطي اسماً لأي كلمة نريد استخدامها في الكود من خلال الأمر `{is}`. بامكانك اختيار الاسم بنفسك.
    demo_code: |-
        الاسم {is} هيدي
        {print} مرحبا الاسم
-   name: '{ask}'
    explanation: نسأل عن شيء ما باستخدام `{ask}`. انتبه! يجب علينا أن نعطي الاجابة اسماً باستخدام `{is}`.
    demo_code: |-
        اللون {is} {ask} ما لونك المفضل؟
        {print} اللون هو المفضل لديك!
-   explanation: نستطيع أن نعلق تنفيذ هيدي (نجعلها تنتظر) عدد معين من الثواني.
    demo_code: |-
        {print} دعني أفكر للحظة...
        {sleep}
        {print} ممم.. أنا أحتاج الى ٣ ثواني أخرى
        {sleep} ٣
        {print} لقد وجدتها الآن!
    name: '{sleep}'
-   name: هو - الرسام
    explanation: نعطي اسماً لأي رقم من خلال الأمر `هو` أو `هي`. بامكانك اختيار الاسم بنفسك.
    demo_code: "الزاوية هي ٩٠\n{turn} الزاوية\n{forward} ١٠٠"
3:
-   name: بشكل عشوائي
    explanation: 'نختار كلمة من مجموعة كلمات او قائمة بشكل عشوائي باستخدام `{at}` و `{random}`'
    demo_code: |-
        الحيوانات هي كلب، قطة، جمل
        {print} الحيوانات {at} {random}
-   name: '{add}'
    explanation: نضيف عنصراً الى قائمة
    demo_code: "الحيوانات هي بقرة، قطة\n{add} أفعى {to_list} الحيوانات"
-   demo_code: "الحيوانات هي بقرة، أفعى، قطة\n{remove} أفعى {from} الحيوانات"
    name: '{remove}'
    explanation: نزيل عنصراً من قائمة
4:
-   name: '{print}'
    explanation: نطبع النص ما بين علامات الاقتباس حرفياً
    demo_code: '{print} "أهلاً بكم ومرحباً في هيدي"'
-   name: '{is}'
    explanation: نعطي اسماً لكلمة أو رقم معين ونطبع على الشاشة باستخدام الأمر `{print}`محتوى هذا الاسم بدون الحاجة الى علامات الاقتباس
    demo_code: |-
        الاسم {is} هيدي
        {print} "أنا اسمي " الاسم
-   name: '{ask}'
    explanation: نسأل عن شيء ما من خلال الأمر `{ask}`. يجب أن نضع نص السؤال ما بين علامات الاقتباس.
    demo_code: |-
        اللون {is} {ask} "ما هو لونك المفضل؟"
        {print} اللون "هو لونك لمفضل!"
5:
-   name: "{print}"
    explanation: "نطبع النص ما بين علامات الاقتباس حرفياً"
    demo_code: "{print} \"أهلاً بكم ومرحباً في هيدي\""
-   name: "{ask}"
    explanation: "نسأل عن شيء ما من خلال الأمر `{ask}`. نضع نص السؤال ما بين علامات الاقتباس."
    demo_code: |-
        اللون {is} {ask} "ما هو لونك المفضل؟"
        {print} اللون "هو لونك لمفضل!"
-   name: "{if}"
    explanation: "باستخدام الأمر `{if}` يمكننا أن نفحص شيئاً ما وتقوم بالاختيار بناء على نتيجة ذلك الفحص"
    demo_code: |-
        اللون {is} {ask} "ما لونك المفضل؟"
        {if} اللون {is} وردي {print} "هذا رائع!" {else} {print} "يا خسارة!"
-   name: "{if} مع الرسام"
    explanation: "باستخدام الأمر `{if}` يمكننا أن نفحص شيئاً ما وتقوم بالاختيار بناء على نتيجة ذلك الفحص"
    demo_code: |-
        الجواب {is} {ask} "كم يجب علي أن امشي؟"
        {if} الجواب {is} كثيرا {forward} ١٠٠ {else} {forward} ٥
-   name: "{in}"
    explanation: "نستطيع أن نفحص العناصر الموجودة في قائمة معينة من خلال الأمر `{in}`"
    demo_code: |-
        الالوان_الجميلة {is} اخضر، اصفر، وردي
        لوني_المفضل {is} {ask} "ما لونك المفضل؟"
        {if} لوني_المفضل {in} الالوان_الجميلة {print} "هذا رائع!" {else} {print} "يا خسارة!"
-   name: '{pressed}'
    explanation: Check whether a given key on the keyboard is `{pressed}`.
    demo_code: "{if} a {is} {pressed} {print} 'You pressed A!' {else} {print} 'You pressed another key!'"
6:
-   name: "{print}"
    explanation: "نطبع على الشاشة النص ما بين علامات الاقتباس حرفياً"
    demo_code: "{print} \" ٥ ضرب ٥ تساوي \" ٥*٥"
-   name: "{ask}"
    explanation: "من خلال الأمر`{ask}` نسأل عن ناتج عملية حسابية ونفحص بعدها ما اذا كان الجواب صحيحاً."
    demo_code: |-
        الجواب = {ask} "ما حاصل ١٠ زائد ١٠؟"
        {if} الجواب {is} ٢٠ {print} "نعم صحيح!" {else} {print} "للأسف! اجابة خاطئة.."
-   name: "`{ask}` و `{if}` مع الرسام"
    explanation: "{ask} المستخدم عن عدد الزوايا التي يريد أن يستعمل للدوران"
    demo_code: |-
        عدد_الزوايا = {ask} "كم عدد الزوايا؟"
        زاوية_الحركة = ٣٦٠/عدد_الزوايا
        {forward} ٥٠
7:
-   name: "{print}"
    explanation: "نطبع على الشاشة النص ما بين علامات الاقتباس حرفياً"
    demo_code: "{print} \"مرحباً وأهلاً بكم في هيدي!\""
-   name: "{ask}"
    explanation: "نسأل عن شيء ما باستخدام `{ask}`."
    demo_code: |-
        اللون = {ask} "ما لونك المفضل؟"
        {print} اللون"هو لونك المفضل!!"
-   name: "{if}"
    explanation: "باستخدام الأمر `{if}` يمكننا أن نفحص شيئاً ما وتقوم بالاختيار بناء على نتيجة ذلك الفحص"
    demo_code: |-
        اللون = {ask} "ما لونك المفضل؟"
        {if} اللون {is} وردي {print} "هذا رائع!" {else} {print} "يا خسارة!"
-   name: "{repeat} - مع الرسام"
    explanation: "نكرر تنفيذ جزء من الكود باستخدام الأمر `{repeat}`."
    demo_code: |-
        {repeat} ٣ {times} {forward} ١٠
8:
-   name: "{print}"
    explanation: "نطبع شيئاً على الشاشة. لا ننسى أن نستخدم علامات الاقتباس \"\" لكي نطبع النص المراد حرفياً."
    demo_code: "{print} \"٥ ضرب ٥ تساوي \" ٥*٥"
-   name: "{ask}"
    explanation: "نسأل عن ناتج عملية حسابية ونفحص بعدها ما اذا كان الجواب صحيحاً. بامكاننا الآن أن نطبع على سطرين اثنين."
    demo_code: |-
        الجواب = {ask} "ما ناتج ٥ زائد ٥؟"
        {if} الجواب {is} ١٠
            {print} "أحسنت!"
            {print} "بالفعل، الإجابة الصحيحة هي: " الجواب
        {else}
            {print} "لا للأسف!"
            {print} "الاجابة الصحيحة هي ١٠"
-   name: "`{repeat}` مع الرسام"
    explanation: "{repeat} أكثر من سطر برمجي"
    demo_code: |-
        {repeat} ٤ {times}
            {turn} ٩٠
            {forward} ٥٠
-   name: '{pressed}'
    explanation: Check whether a given key on the keyboard is `{pressed}`.
    demo_code: "{if} a {is} {pressed}\n    {print} 'You pressed A!'\n{else}\n    {print} 'You pressed another key!'"
9:
-   name: "`{if}` مع أكثر من سطر برمجي"
    explanation: "نجيب على سؤال ما باستخدام الأمر {ask} و نفحص بعدها ما اذا كانت الاجابة صحيحة. يمكننا الان طباعة اكثر من سطر على الشاشة."
    demo_code: |-
        اجابتك= {ask} "ما ناتج ٢٠ زائد٢٠؟"
        {if} اجابتك هي ٢٠
            {print} "أحسنت!"
            {print} "بالفعل، الاجابة الصحيحة هي " اجابتك
        {else}
            {print} "الاجابة خاطئة!"
            {print} "الاجابة الصحيحة هي ٢٠"
-   name: "`{repeat}` مع الرسام"
    explanation: "{repeat} أكثر من سطر برمجي"
    demo_code: |-
        {repeat} ٤ {times}
            {turn} ٩٠
            {forward} ٥٠
10:
-   name: "{print}"
    explanation: "نطبع شيئاً ما على الشاشة.يجب أن نستخدم علامات الاقتباس ليظهر النص حرفياً كما نريد."
    demo_code: "{print} \"٥ ضرب ٥ تساوي \" ٥*٥"
-   name: "{for} العناصر في قائمة"
    explanation: "نطبع على الشاشة كل العناصر الموجودة في قائمة "
    demo_code: |-
        حيواناتي_المفضلة {is} الكلب، الزرافة، السلحفاة
        {for} حيوان {in} حيواناتي_المفضلة
            {print} "أنا أحب " حيوان
11:
-   name: "دورة التكرار باستخدام {for}"
    explanation: "يمكننا ان نستخدم الأمر `{for}` مع الأمر {range}"
    demo_code: |-
        {for} دورة {in} {range} ١ {to} ٥
            {print} دورة
-   name: "{ask}"
    explanation: "نسأل عن نتيجة عملية حسابية ونفحص بعدها ما اذا كانت الاجابة صحيحة. يمكننا أن نطبع أكثر من سطر على الشاشة."
    demo_code: |-
        اجابتك= {ask} "ما ناتج ٥ زائد٥؟"
        {if} اجابتك هي ١٠
            {print} "أحسنت!"
            {print} "بالفعل، الاجابة الصحيحة هي " اجابتك
        {else}
            {print} "الاجابة خاطئة!"
            {print} "الاجابة الصحيحة هي ١٠"
12:
-   name: "الأرقام العشرية"
    explanation: "الأرقام العشرية"
    demo_code: |
        {print} "احسب بسرعة!"
        {print} "اثنان ونصف زائد اثنان ونصف يساوي ..."
        {print} ٢.٥ + ٢.٥
-   name: "تخزين النصوص"
    explanation: "النص بين علامات الاقتباس بعد ="
    demo_code: |
        الاسم = "الآلية هيدي"
        {print} "مرحباً " الاسم
-   name: "علامات الاقتباس بعد الفحص عند استخدام {if}"
    explanation: "النص داخل علامات الاقتباس بعد {if}"
    demo_code: |
        اسمك = {ask} "من أنت؟"
        {if} اسمك = "هيدي"
            {print} "مرحباً بك!"
-   name: "نصوص مع علامات الاقتباس داخل قائمة"
    explanation: "قائمة تحتوي على نصوص مع علامات الاقتباس"
    demo_code: |
        الابطال_الخارقون = "سبايدرمان"، "باتمان"، "الرجل الحديدي"
        {print} الابطال_الخارقون {at} {random}
13:
-   name: "{and}"
    explanation: "يجب أن يكون كلا الفحصين صحيحين"
    demo_code: |-
        اجابتك١ = {ask} "ما ناتج ٣+٢؟"
        اجابتك٢ ={ask} "ما ناتج ٢+٢؟"
        {if} اجابتك١ هي ٥ {and} اجابتك٢ هي ٤
            {print} "الإجابتان صحيحتان!"
        {else}
            {print} "اجابة واحدة على الأقل خاطئة!"
-   name: "{or}"
    explanation: "فحص واحد على الأقل من الفحصين يجب أن يكون صحيحاً. اذا كان الفحصان صحيحين هذا أيضا مقبول."
    demo_code: |-
        اجابتك١ = {ask} "ما ناتج ٣+٢؟"
        اجابتك٢ ={ask} "ما ناتج ٢+٢؟"
        {if} اجابتك١ هي ٥ {or} اجابتك٢ هي ٤
            {print} "اجابة واحدة على الأقل صحيحة!!"
        {else}
            {print} "الإجابتان خاطئتان!"
14:
-   name: "أصغر"
    explanation: "نستعمل الاشارة `<` لفحص ما اذا كان الرقم الأول أصغر من الرقم الثاني."
    demo_code: |-
        عمرك = {ask} "ما عمرك؟"
        {if} عمرك < ١٣
            {print} "أنت أصغر مني!"
-   name: "أكبر"
    explanation: "نستعمل الاشارة `>` لفحص ما اذا كان الرقم الأول أكبر من الرقم الثاني."
    demo_code: |-
        عمرك = {ask} "ما عمرك؟"
        {if} عمرك > ١٣
            {print} "أنت أكبر مني!"
-   name: "التساوي"
    explanation: "نستخدم علامتين مساواة متلاحقتين `==` عند فحص اذا ما كان شيئان متساويين."
    demo_code: |-
        اجابتك = {ask} "ما ناتج ٥ ضرب ٥؟"
        {if} اجابتك == ٢٥
            {print} "الجواب صحيح!"
-   name: "عدم التساوي"
    explanation: "نستعمل العلامة `!=` لفحص ما اذا كان شيء ما *لا يساوي* شيء اخر. "
    demo_code: |-
        اجابتك = {ask} "ما ناتج ٥ ضرب ٥؟"
        {if} اجابتك != ٢٥
            {print} "الجواب غير صحيح!"

-   name: "أصغر أو يساوي"
    explanation: "نستعمل العلامة `<=` عندما نريد فحص ما اذا كان الرقم الأول أصغر من أو مساوياً للرقم الثاني."
    demo_code: |-
        عمرك = {ask} "ما عمرك؟"
        {if} عمرك <= ١٢
            {print} "أنت أصغر مني!"

-   name: "أكبر أو يساوي"
    explanation: "نستعمل علامة `>=` عندما نريد فحص ما اذا كان الرقم الأول أكبر من أو مساوياً للرقم الثاني."
    demo_code: |-
        عمرك = {ask} "ما عمرك؟"
        {if} عمرك >= ١٤
            {print} "أنت أكبر مني!"
15:
-   name: "{while}"
    explanation: "نستطيع استعمال دورة التكرار `{while}` مع علامة عدم التساوي !="
    demo_code: |-
        الاجابة = ٠
        {while} الاجابة != ٢٥
            الاجابة = {ask} "ما ناتج ٥ ضرب ٥؟"
        {print} "تم الاجابة بشكل صحيح"
-   name: "{while} مع علامة الأصغر"
    explanation: "يمكننا أن ندمج استعمال الأمر `{while}` مع علامتي الأصغر `<` والأكبر `>`. "
    demo_code: |-
        العدد = ١
        {while} العدد < ٣
            {print} "سنقوم بهذا " ٣-العدد " مرة أخرى"
            العدد = العدد + ١
        {print} "لقد انتهينا!"
16:
-   name: "الأقواس المربعة"
    explanation: "القوائم مع الأقواس المربعة"
    demo_code: |-
        الفاكهة = ["تفاح"، "موز"، "كرز"]
        {print} الفاكهة
-   name: "استرجع عنصراً من القائمة"
    explanation: "لنسترجع عنصراً من القائمة نستخدم اسم القائمة و الرقم الذي يعبر عن ترتيب العنصر في القائمة ما بين الأقواس المربعة. مثلاً الفاكهة[١] تعني أننا نريد الحصول على العنصر الأول في القائمة!"
    demo_code: |-
        الفاكهة = ["تفاح"، "موز"، "كرز"]
        اول_فاكهة = الفاكهة[١]
        {print} اول_فاكهة
-   name: "نسترجع عنصرا من القائمة بشكل عشوائي"
    explanation: "لنسترجع عنصراً من القائمة بشكل عشوائي نستخدم [عشوائي]. مثلاً الفاكهة[عشوائي] تعني أننا نريد استرجاع عنصراً من القائمة الفاكهة بشكل عشوائي!"
    demo_code: |-
        الفاكهة = ["تفاح"، "موز"، "كرز"]
        فاكهة_عشوائية = الفاكهة[عشوائي]
        {print} فاكهة_عشوائية
17:
-   name: "{elif}"
    explanation: "`{elif}`."
    demo_code: |-
        أ = ٢
        {if} أ == ١:
            {print} "أ تساوي ١"
        {elif} أ ==٢:
            {print} "أ تساوي ٢"
        {else}: 
            {print} "أ لا تساوي ١ ولا ٢"
-   name: "{print}"
    explanation: "عندما نستعمل `{for}` يجب علينا أن نضع `:` في نهاية السطر البرمجي الذي يبدأ ب `{for}`!"
    demo_code: |-
        {for} دورة {in} {range} ١ {to} ١٢:
            {print} دورة
        {print} "سواء كنت مستعداً أم لا، أنا قاااادم!"
-   name: "{if}"
    explanation: "يجب علينا أن نقوم بنفس الشيء عند استعمال الأمر `{if}`"
    demo_code: |-
        اللون = {ask} "ما لونك المفضل؟"
        {if} اللون == "وردي":
            {print} "لونك المفضل هو الوردي!"
        {else}:
            {print} "لونك المفضل ليس الوردي!"
18:
-   name: "{print}"
    explanation: "علينا أن نضع الأقواس الدائرية بعد استعمال الأمر `{print}`"
    demo_code: |-
        {print} ("مرحبــــــاً")
-   name: "{range}"
    explanation: "بعد استعمال الأمر `{range}` يجب أن نضع الأقواس الدائرية"
    demo_code: |-
        {for} ن {in} {range} (١، ١٠):
            {print} ("مرحباً للمرة "، ن)
-   name: '{print} مع متغير'
    explanation: مع الأمر `{print}` اذا كنا نريد أن نطبع عدة أشياء على الشاشة في نفس السطر يجب أن نستخدم الأقواس الدائرية بعد{print} و الفاصلة ما بين الأشياء التي سنطبعها
    demo_code: "الاسم = \"هيدي\"\n{print} (\"أنا اسمي هو \"، الاسم)"
-   name: نطلب من المستخدم ادخال نص من خلال الأمر {input}
    explanation: يجب أن نستعمل الأمر `{input}` بدلاً من الأمر `{ask}` لنطلب من المستخدم ادخال نص
    demo_code: "الاسم = {input} (\"ما اسمك؟\")\n{print} (\"اذا اسمك هو \"، الاسم)"
