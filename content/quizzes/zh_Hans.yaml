levels:
    1:
        1:
            question_text: 这门编程语言叫什么？
            mp_choice_options:
            -   option: 海蒂
                feedback: 做得好！
            -   option: 海蒂
                feedback: 不是这个！
            -   option: 海蒂
                feedback: 不是这个！
            -   option: 海蒂
                feedback: 不是这个！
            hint: 它是以海蒂-拉玛的名字命名的。
            correct_answer: A
            question_score: '10'
        2:
            question_text: 哪些需要在空白处填写才能使文字你好！出现？
            code: ___ 你好！
            mp_choice_options:
            -   option: '`{echo}`'
                feedback: '`{echo}` 会复述你给出答案。'
            -   option: '`{print}`'
                feedback: 正确！
            -   option: '`hello`'
                feedback: “你好”不是一个命令。
            -   option: '`{ask}`'
                feedback: 你可以使用 `{ask}` 来提问。
            hint: _你好世界！
            correct_answer: B
            question_score: '10'
        3:
            question_text: 如何询问某个人最喜欢的颜色是什么？
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 你最喜欢的颜色是什么？
                    ```
                feedback: '`{print}`能打印出文字，但是不能用来提问。'
            -   option: |-
                    ```
                    {ask} {print} 你最喜欢的颜色是什么？
                    ```
                feedback: 你只需要一个命令，不需要两个。
            -   option: |-
                    ```
                    {ask} 你最喜欢的颜色是什么？
                    ```
                feedback: 太棒了！
            -   option: |-
                    ```
                    {echo} 你最喜欢的颜色是什么？
                    ```
                feedback: '`{echo}` 会对你复述你的回答。'
            hint: 你可以用`{ask}`命令提问
            correct_answer: C
            question_score: '10'
        4:
            question_text: 这段代码哪里错了？
            code: |-
                你好，我是海蒂！
                {ask} 你是谁？
                {echo} 你好……
            mp_choice_options:
            -   option: 第一行缺少了`{print}`。
                feedback: 正确！
            -   option: 第 2 行中的命令拼写错误。
                feedback: 该命令的拼写是正确的。
            -   option: '`{echo}`不是一个命令。'
                feedback: '`{echo}`是一个命令。错的是别的地方。'
            -   option: 没有错！这代码很完美！
                feedback: 错了，仔细看！
            hint: 第一行看上去不对
            question_score: '10'
            correct_answer: A
        5:
            question_text: 第二行缺少了哪个命令？
            code: |-
                {ask} 你最喜欢的宠物是什么？
                _所以你最喜欢的宠物是...
            mp_choice_options:
            -   option: '`{print}`'
                feedback: 不，你想要的是复述你的回答。
            -   option: '`Hedy`'
                feedback: “海蒂”不是一个命令。
            -   option: '`{ask}`'
                feedback: 你可以用`{ask}`提出一个问题。
            -   option: '`{echo}`'
                feedback: 马上！
            hint: 你想要在第二行的最后看到回答……
            correct_answer: D
            question_score: '10'
        6:
            question_text: 这段代码哪里错了？
            code: |-
                {print} 你好，我是海蒂！
                {print} 你支持哪支足球队？
                {echo} 你支持……
                {print} 酷！我也一样！
            mp_choice_options:
            -   option: In line 1 `{print}` should be replaced with `{ask}`.
                feedback: 第一行的`{print}`是正确的。
            -   option: In line 2, `{print}` should be replaced with `{ask}`.
                feedback: 很好！你注意到了！
            -   option: 第三行必须以`{print}`，而不是`{echo}`开头。
                feedback: '`{echo}`是正确的。'
            -   option: 第四行的`{print}`写错了。
                feedback: 不，其他地方有错误
            hint: 检查`{print}`命令。
            correct_answer: B
            question_score: '10'
        7:
            question_text: 这段代码哪里错了？
            code: |-
                {print} 欢迎来到海蒂餐厅！
                {ask} 你想吃什么？
                {echo} 所以你想点...
                {print} 马上就来！好好享受！
            mp_choice_options:
            -   option: In line 1 `{print}` needs to be replaced with `{ask}`
                feedback: 你确定有哪里错误吗？
            -   option: In line 1 `{print}` needs to be replaced with `{echo}`
                feedback: 你确定有哪里错误吗？
            -   option: In line 3 `{echo}` needs to be replaced with `{print}`
                feedback: 你确定有哪里错误吗？
            -   option: 没有！这代码很完美！
                feedback: 正确！
            hint: 逐行检查代码
            correct_answer: D
            question_score: '10'
        8:
            question_text: 如何使用`{echo}`命令？
            mp_choice_options:
            -   option: 你可以用它来`{ask}` 一个问题。
                feedback: 这是`{ask}`的作用！
            -   option: 您可以像 `{print}` 一样使用它。
                feedback: 这是`{print}`的作用！
            -   option: 你可以用它复述一个答案。
                feedback: 做得好！
            -   option: 你可以用它让文本消失。
                feedback: 不对……
            hint: '`{echo}`必须在`{ask}`命令之后使用。'
            correct_answer: C
            question_score: '10'
        9:
            question_text: 这段代码有什么错误？
            code: |-
                {print} 你好！
                {print} 你好吗？
                {echo} 所以你……
            mp_choice_options:
            -   option: 第1行的`{print}`应该改成`{ask}`
                feedback: 不，`{print}`是对的。哪一句是在提出问题？
            -   option: 第2行的`{print}`应该改成`{ask}`
                feedback: 厉害！
            -   option: 第3行的`{echo}`应该改成`{ask}`
                feedback: 不，`{echo}`是对的。哪一句是在提出问题？
            -   option: 没有。这代码很完美！
                feedback: 仔细观察错误的地方……
            hint: '`{ask}`让你能提出一个问题'
            correct_answer: B
            question_score: '10'
        10:
            question_text: 运行此代码后，输出屏幕中将显示哪个输出？
            mp_choice_options:
            -   option: Are you ready to go to level 2?
                feedback: 这里有两个`{echo}`命令
            -   option: |-
                    Yes!
                    Yes!
                feedback: Great job!
            -   option: Yes!
                feedback: 这里有两个`{echo}`命令
            -   option: |-
                    Are you ready to go to level 2?
                    Yes!
                feedback: 这里有两个`{echo}`命令
            hint: 走起!
            code: "{ask} 准备好进入级别2了?\n{echo}\n{echo}"
            question_score: '10'
            correct_answer: B
    2:
        1:
            question_text: 哪一句话是对的？
            mp_choice_options:
            -   option: 你可以用`{print}`命令来提问。
                feedback: 这是`{ask}`的作用
            -   option: 你可以用`{ask}`命令来复述答案。
                feedback: 不是的
            -   option: 你可以用`{print}`命令显示文本
                feedback: 不错
            -   option: 你可以用 `{sleep}` 命令清除屏幕上的文本。
                feedback: 这不是`{sleep}`的作用。
            hint: '`{print}`的作用仍然和第1关中一样'
            question_score: '10'
            correct_answer: C
        2:
            question_text: 哪段代码是正确的？
            mp_choice_options:
            -   option: |-
                    ```
                    名字 {is} {ask} 你叫什么？
                    ```
                feedback: 厉害！
            -   option: |-
                    ```
                    {ask} {is} 名字 你叫什么？
                    ```
                feedback: 用词对了，但是顺序不对！
            -   option: |-
                    ```
                    {ask} 你叫什么？
                    ```
                feedback: 这在第1关里是对的，但是第2关里用法变了。
            -   option: |-
                    ```
                    {ask} 你叫什么？ {is} 名字
                    ```
                feedback: 用词对了，但是顺序不对！
            hint: '`{ask}`和第一关里用法不一样了'
            correct_answer: A
            question_score: '10'
        3:
            question_text: 如果你运行这段代码，它会输出什么？
            code: |-
                名字 {is} 马琳
                {print} 名字 去了市场，她买了一个苹果。
            mp_choice_options:
            -   option: 名字 去了市场，她买了一个苹果。
                feedback: “名字”会被替换成马琳
            -   option: 马琳 去市场。
                feedback: 后半句怎么不见了！
            -   option: 马琳 去了市场，她买了一个苹果。
                feedback: 对了！
            -   option: 马琳 去了市场，马琳 买了一个苹果。
                feedback: “她”不会被替换成名字
            hint: “名字”会被替换成马琳
            correct_answer: C
            question_score: '10'
        4:
            question_text: 如果你运行这段代码，它会输出什么？
            code: |-
                名字 {is} 海蒂
                {print} 你好，我的 名字 是 名字
            mp_choice_options:
            -   option: 你好，我的 名字 是 名字
                feedback: 变量“名字”会被替换成海蒂
            -   option: 你好，我的 名字 是 海蒂
                feedback: 变量“名字”会被替换成海蒂
            -   option: 你好，我的 海蒂 是 名字
                feedback: 变量“名字”会被替换成海蒂
            -   option: 你好，我的 海蒂 是 海蒂
                feedback: 正确，这个问题会在第四关解决！
            hint: 两个“名字”都会被替换成“海蒂”
            correct_answer: D
            question_score: '10'
        5:
            question_text: 当你使用 `{sleep}` 命令时会发生什么？
            mp_choice_options:
            -   option: 它会让电脑变慢
                feedback: 幸好不会！
            -   option: 它会关闭海蒂
                feedback: 幸好不会！
            -   option: 程序会暂停一下，然后继续
                feedback: 对！
            -   option: 它用在程序结尾，让海蒂知道程序结束了
                feedback: 不，它在代码结尾不会有任何用处
            hint: 电脑会在`{sleep}`命令处等待一秒
            question_score: '10'
            correct_answer: C
        6:
            question_text: 空白的一行应该填什么？
            code: |-
                {print} 最佳编程语言奖属于……
                _
                {print} 海蒂！
            mp_choice_options:
            -   option: '`{sleep}`'
                feedback: 太棒了！
            -   option: '`{echo}`'
                feedback: 这里没有东西需要复述
            -   option: '`{print}`'
                feedback: 这里没有东西需要`{print}`
            -   option: '`{ask}`'
                feedback: 这里没有问题需要问
            hint: 通过停顿制造紧张感……
            question_score: '10'
            correct_answer: A
        7:
            question_text: 第2行应该用什么命令？
            code: |-
                {print} 我会在3秒后爆炸！
                _
                {print} 砰！
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 3
                    ```
                feedback: 你不需要`{print}`
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: 太棒了！
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: 这就变成1秒后爆炸了
            -   option: |-
                    ```
                    {sleep} {sleep} {sleep}
                    ```
                feedback: 可以简单点，直接写数字3
            hint: 你需要让电脑等待3秒
            correct_answer: B
            question_score: '10'
        8:
            question_text: 如何改正第一行的代码？
            code: |-
                {ask} {is} 你多大了？
                {print} 年龄
            mp_choice_options:
            -   option: |-
                    ```
                    年龄 {ask} {is} 你多大了？
                    ```
                feedback: 顺序错了
            -   option: |-
                    ```
                    {ask} {is} 年龄 你多大了？
                    ```
                feedback: 顺序错了
            -   option: |-
                    ```
                    年龄 {is} {ask} 你多大了？
                    ```
                feedback: 对了！
            -   option: |-
                    ```
                    年龄 {is} 你多大了？
                    ```
                feedback: '`{ask}`命令呢？'
            hint: 变量名需要放在最前面
            correct_answer: C
            question_score: '10'
        9:
            question_text: 这段代码有什么错误？
            code: |-
                狗 {is} 某动物
                {print} 我 喜欢 某动物
            mp_choice_options:
            -   option: 第1行应该是：狗 `{is}` 动物
                feedback: “某动物”是变量名
            -   option: 第1行应该是：某动物 `{is}` 狗
                feedback: 很好！
            -   option: 第2行应该是：`{print}` 我 喜欢 动物
                feedback: “某动物”是变量名
            -   option: 第2行应该是：`{sleep}` 我 喜欢 动物
                feedback: 睡眠并非用来 `{print}` 文字
            hint: 你需要`{print}`“我 喜欢 狗”
            correct_answer: B
            question_score: '10'
        10:
            question_text: 第1行应该用什么命令？
            code: |-
                口味 {is} _
                {print} 你最喜欢的冰淇淋是……
                {sleep}
                {print} 口味
            mp_choice_options:
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: 你需要问出最喜欢的口味！
            -   option: |-
                    ```
                    {print} 草莓味
                    ```
                feedback: 你不应该在一行的中间用`{print}`命令……
            -   option: |-
                    ```
                    草莓味，巧克力味，香草味
                    ```
                feedback: 你这是在写列表。你现在还不需要列表。
            -   option: |-
                    ```
                    {ask} 你喜欢什么口味的冰淇淋？
                    ```
                feedback: 对！
            hint: 你需要`{ask}`一个问题
            correct_answer: D
            question_score: '10'
    3:
        1:
            question_text: 你需要使用哪一个指令才能让海蒂随机选择东西呢?
            mp_choice_options:
            -   option: '`{print}`'
                feedback: '`{print}` 用来打印文字'
            -   option: '`{ask}`'
                feedback: '`{ask}` 用来问一个问题'
            -   option: '`{is}`'
                feedback: '`{is}` 用于制作列表'
            -   option: '`{at} {random}`'
                feedback: 正确!
            hint: 任意表示没有计划的，随机性的。
            correct_answer: D
            question_score: '10'
        2:
            question_text: 这个程序有什么问题呢?
            code: |-
                动物 {is} 狗 猫 牛
                {print} 动物 {at} {random}
            mp_choice_options:
            -   option: '你需要在第一行加入逗号: 狗, 猫, 牛.'
                feedback: 干的好!
            -   option: 第一行需要以 `{print}`为开头.
                feedback: 不，你不许要`{print}`
            -   option: 第二行需要放 '动物', 而非 '动物们'
                feedback: 动物是正确的。
            -   option: '`{at} {random}` 的拼法不正确'
                feedback: '`{at} {random}` 是正确的拼法'
            hint: 第一行似乎有什么问题
            question_score: '10'
            correct_answer: A
        3:
            question_text: 你该如何修复第二行的问题呢?
            code: |-
                选项 {is} 石头, 布, 剪刀
                {print} 石头, 布, 剪刀 {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    {at} {random} {print} options
                    ```
                feedback: 你快到了。单词的顺序还不正确。
            -   option: |-
                    ```
                    {print} 石头 {at} {random}
                    ```
                feedback: 你或许不想要海蒂每一次都 {print} 石头, 有时候你或许想要剪刀或布.
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: 非常棒!
            -   option: 没事，这个代码是正确的!
                feedback: 小心注意任何失误
            hint: 变数 (the list) 称作选项.
            question_score: '10'
            correct_answer: C
        4:
            question_text: 为了打印一个随机价格，第2行应该怎么改？
            code: |-
                价格 {is} 1美元，100美元，100万美元
                {print} 价格 {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    {print} price
                    ```
                feedback: 你不想要 `{print}` 价格这个词, 但是你想要 `{print}` 你清单中的一个价格 `{at} {random}`
            -   option: |-
                    ```
                    {print} prices {at} {random}
                    ```
                feedback: 太棒了! 你真的注意了。
            -   option: |-
                    ```
                    {print} {at} {random} price
                    ```
                feedback: '`{at} {random}` 放在了变数后.'
            -   option: 没事， 这代码没问题.
                feedback: 注意任何你错过的失误!
            hint: 变数的名字是价格
            correct_answer: B
            question_score: '10'
        5:
            question_text: 这代码有什么问题呢?
            code: |-
                问题 {is} {ask} 你想要知道什么？
                {print} 问题
                回答{is} 是, 不，可能
                {print} 回答{at} {random}
            mp_choice_options:
            -   option: 第一行需要说`{print}` 而不是`{ask}`
                feedback: 不，这并没有错。
            -   option: 第2行需要说`{ask}`而不是`{print}`
                feedback: 不，这并没有错。
            -   option: 第二行需要说回答 `{at} {random}` `{is}` 是, 不, 可能
                feedback: 不，这并没有错。
            -   option: 没事， 这个代码很完美
                feedback: 没错！
            hint: 这段代码甚至有错误吗？
            correct_answer: D
            question_score: '10'
        6:
            question_text: 这段代码有什么错误？
            code: |-
                问题 {is} {ask} 你想知道什么？
                回答是，不，可能
                {print} 回答 {at} {random}
            mp_choice_options:
            -   option: 第二行需要说问题而不是回答
                feedback: 不那不是对的
            -   option: 第二行需要 `{is}` 命令
                feedback: 正确
            -   option: 第三行需要说回答而不是回答
                feedback: 否变量的调用答案
            -   option: 没什么！这个代码很好！
                feedback: 事实上，第二行有一个错误。
            hint: 第二行有一些问题。
            question_score: '10'
            correct_answer: B
        7:
            question_text: '`{add}`命令有什么作用？'
            mp_choice_options:
            -   option: '`{add}`命令从列表中删除随机书籍'
                feedback: 删除命令删除，添加命令添加
            -   option: '`{add}`命令将随机书籍添加到列表中'
                feedback: 其实不然。它会将您的答案添加到列表中！
            -   option: '`{add}` 命令将您喜爱的书籍添加到列表中'
                feedback: 正确！
            -   option: '`{add}` 命令打印你最喜欢的书。'
                feedback: 不，它会将您最喜欢的书添加到列表中
            hint: '`{add}` 命令添加一本书，但哪一本书？'
            correct_answer: C
            question_score: '10'
            code: "books {is} 哈利波特,霍比特人,绿鸡蛋和火腿\nyour_book {is} {ask} 你最喜欢的书是什么?\n{add} your_book {to} books\n{print} books {at} {random}"
        8:
            question_text: 这段代码的输出是什么？
            code: |-
                薯片 {is} 海盐、辣椒粉、酸奶油
                {from} 薯片中 {remove} 海盐
                {from} 薯片中 {remove} 辣椒粉
                {print} 薯片 {at} {random}
            mp_choice_options:
            -   option: 你无法分辨，因为 海蒂 会 `{print}` 3 种口味 `{at} {random}`之一
                feedback: 看一下 `{remove}`命令
            -   option: sea salt
                feedback: 海盐已从列表中删除
            -   option: 辣椒粉
                feedback: 辣椒粉已从列表中删除
            -   option: 酸奶油
                feedback: 这是正确的！
            hint: 有 3 种口味，第 2 位被删除。 还剩下哪一个？
            correct_answer: D
            question_score: '10'
        9:
            question_text: 这段代码有什么问题？
            code: |-
                颜色 {is} 蓝色、紫色、绿色
                chosen_color {is} {ask} 你不喜欢哪种发色？
                {from} 种颜色中 {remove} chosen_color
                {print}我将 {at} {random} 染发颜色
            mp_choice_options:
            -   option: 第 3 行应该显示：`{remove}` 蓝色`{from}`颜色
                feedback: 也许你想要蓝色头发！
            -   option: 第 3 行应该有一个 `{add}` ”命令，而不是 `{remove}`命令
                feedback: 你想要删除所选颜色，因此 `{remove}`是正确的。
            -   option: 在第 4 行中，变量应该称为 colors 而不是 color
                feedback: 做得好！
            -   option: 没什么，这是正确的代码！
                feedback: 找出错误！
            hint: 看第4行
            question_score: '10'
            correct_answer: C
        10:
            question_text: _ 上应该写什么？
            code: |-
                walkers {is} 爸爸、妈妈、山姆、佩特拉
                walked_yesterday {is} {ask} 昨天谁遛狗了？
                {print} walked_yesterday 今天不应该再去遛狗
                _
                {print} walkers {at} {random}，轮到你遛狗了！
            mp_choice_options:
            -   option: |-
                    ```
                    {remove} walked_yesterday {from} walkers
                    ```
                feedback: 赞！
            -   option: |-
                    ```
                    {remove} walked_yesterday {to} walkers
                    ```
                feedback: '`{remove} {from}` or `{add} {to}`, not `{remove} {to}`'
            -   option: |-
                    ```
                    {remove} walkers {from} yesterday
                    ```
                feedback: yesterday不是变量
            -   option: |-
                    ```
                    {add} walked_yesterday {to} walkers
                    ```
                feedback: 这意味着增加了昨天走路的人现在必须再走一次的变化。
            hint: 昨天遛狗的人应该从名单中删除。
            correct_answer: A
            question_score: '10'
    4:
        1:
            question_text: 这些代码中哪一个是正确的？
            mp_choice_options:
            -   option: |-
                    ```
                    {print} ‘我很高兴参加这次测验！’
                    ```
                feedback: 这是正确的
            -   option: |-
                    ```
                    {print} ‘我很高兴参加这次测验！’
                    ```
                feedback: '{print} 现在需要引号！'
            -   option: |-
                    ```
                    {print} ‘我很高兴参加这次测验！’
                    ```
                feedback: 不要使用撇号或使用反引号代替
            -   option: |-
                    ```
                    {print} ‘我很高兴参加这次测验！’
                    ```
                feedback: 使用引号和撇号时要小心
            hint: 在第 4 级中，你需要用引号来表示 2 个命令。
            correct_answer: A
            question_score: '10'
        2:
            question_text: 哪个代码使用了正确的引号？
            mp_choice_options:
            -   option: |-
                    ```
                    {print} `hello`
                    ```
                feedback: 这个引号是歪斜的，你需要一个直的。
            -   option: |-
                    ```
                    {print} 'hello'
                    ```
                feedback: 正确的
            -   option: |-
                    ```
                    {print} hello
                    ```
                feedback: 这里没有引号！
            -   option: |-
                    ```
                    {print} ,hello,
                    ```
                feedback: 这是一个逗号，你需要引号。
            hint: 选择正确的引号。
            correct_answer: B
            question_score: '10'
        3:
            question_text: 引号在哪儿使用正确？
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Hi Im Hedy
                    ```
                feedback: 请加引号！
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy
                    ```
                feedback: 要打印的单词之前和之后都应该加引号。
            -   option: |-
                    ```
                    '{print} Hi Im Hedy'
                    ```
                feedback: 第一个引号应位于单词 `{print}` 后面
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy'
                    ```
                feedback: 完美！
            hint: 要打印的单词之前和之后都应该加引号。
            correct_answer: D
            question_score: '10'
        4:
            question_text: 哪个论述是对的？
            mp_choice_options:
            -   option: 你需要在单词`{print}`两边加上引号，如下所示：`'{print}'`。
                feedback: 命令本身不应包含引号。
            -   option: 你需要在要打印的单词两边加上引号。
                feedback: 赞!
            -   option: 使用 `{ask}`命令时不需要引号
                feedback: '`{print}` 和 `{ask}` 都需要引号'
            -   option: 你可以自行选择是否使用引号。
                feedback: 不幸的是，海蒂 比这更严格。
            hint: 从第 4 级开始，需要使用引号。
            correct_answer: B
            question_score: '10'
        5:
            question_text: 为了让游戏正常运行，必须改变什么？
            code: |-
                选项 {is} 石头、剪刀、布
                {print} '选项 {at} {random}'
            mp_choice_options:
            -   option: |-
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: 千万不要把引号放在`{print}` 命令的前面。
            -   option: |-
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: 选项是一个变量。 你实际上并不想打印 '选项 {at} {random}'。
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: 这就对了
            -   option: 没什么，游戏已经可以玩了！
                feedback: 仔细看。 还有错误。
            hint: 不希望 海蒂 按字面意思打印'选项 {at} {random}'，你是想它打印'rock'或'paper'或'scissors'。
            correct_answer: C
            question_score: '10'
        6:
            question_text: 这段代码中的下一行应该是什么？
            code: 价格 {is} 1 美元、100 美元、100 万美元
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'You win...' prices {at} {random}
                    ```
                feedback: 赞！ 你懂了！
            -   option: |-
                    ```
                    {print} You win... 'prices {at} {random}'
                    ```
                feedback: 海蒂 会逐字打印'prices {at} {random}'
            -   option: |-
                    ```
                    {print} You win... prices {at} {random}
                    ```
                feedback: 您需要一些引号！
            -   option: |-
                    ```
                    {print} 'You win... prices {at} {random}'
                    ```
                feedback: 海蒂 会逐字打印 "prices {at} {random}"
            hint: 仔细想想：什么是变量？我们应该把它放在引号外吗？放在引号里面的普通的词汇有哪些？
            question_score: '10'
            correct_answer: A
        7:
            question_text: 这段代码有什么问题？
            code: |-
                问题 {is} {ask} 你想知道什么？
                答案{is} 是，不是，也许
                {print}回答{at} {random}
            mp_choice_options:
            -   option: 第 1 行缺少引号
                feedback: 正确!
            -   option: 第 2 行缺少引号
                feedback: 变量不需要引号
            -   option: 第 3 行缺少引号
                feedback: 您不希望 海蒂 按字面意思打印 'answers {at} {random}'，因此此处不需要引号！
            -   option: 没什么，这段代码本来就很好！
                feedback: 仔细地看。 你错过了一个错误！
            hint: 检查每一行是否需要引号。
            correct_answer: A
            question_score: '10'
        8:
            question_text: 这段代码的下一行应该是什么？
            code: |-
                {print} '欢迎来到金钱秀！'
                {print} '在你面前有三扇门'
                门{is} {ask}“你选择哪扇门？”
            mp_choice_options:
            -   option: |-
                    ```
                    {print} So you pick door door
                    ```
                feedback: 我们需要引号
            -   option: |-
                    ```
                    {print} 'So you pick ' door door
                    ```
                feedback: 如果玩家选择 3 号门，海蒂会说 所以你选择 3 3
            -   option: |-
                    ```
                    {print} 'So you pick door ' door
                    ```
                feedback: 超赞!
            -   option: |-
                    ```
                    {print} 'So you pick door door'
                    ```
                feedback: 海蒂 会直接打印 '所以你选择门'
            hint: 第二个“门”字应该换成数字，第一个应该还是“门”字……
            correct_answer: C
            question_score: '10'
        9:
            question_text: 什么永远不会出现在你的输出屏幕上？
            code: |-
                俱乐部 {is} 皇家马德里、拜仁慕尼黑、曼联、阿贾克斯
                {print} 俱乐部 {at} {random} '将赢得冠军联赛'
            mp_choice_options:
            -   option: 阿贾克斯将赢得冠军联赛
                feedback: 海蒂 可以`{print}` 那些
            -   option: 皇马将赢得欧冠冠军
                feedback: 海蒂可以 `{print}` 那些
            -   option: 拜仁慕尼黑将赢得欧冠冠军
                feedback: 海蒂可以 `{print}` 那些
            -   option: 巴塞罗那足球俱乐部将赢得冠军联赛
                feedback: 这是正确的。 它不在列表中
            hint: 海蒂 可以随机选择哪些选项？
            correct_answer: D
            question_score: '10'
        10:
            question_text: 哪个论述是对的？
            code: |-
                人们{is}妈妈、爸爸、艾玛、苏菲
                {print} 菜肴是由...做的
                {print}人们{at} {random}
            mp_choice_options:
            -   option: 第 1 行缺少引号
                feedback: 列表不需要引号
            -   option: 第 2 行缺少引号
                feedback: 正确
            -   option: 第 2 行和第 3 行都缺少引号
                feedback: 第 3 行不需要引号，因为它不是按字面打印的
            -   option: 没什么，这段代码没有错误
                feedback: 你错过了一个！
            hint: 有一行需要引号，因为您希望它按字面意思打印。
            correct_answer: B
            question_score: '10'
    5:
        1:
            question_text: 应该在_上填写哪个命令？
            code: |-
                数字 {is} {ask} '你的幸运数字是多少？'
                {if} 数字 {is} 5 {print} '我也是！'
                _{print} '我的幸运数字是 5！'
            mp_choice_options:
            -   option: '`{print}`'
                feedback: 已经有一个 `{print}` 命令了。
            -   option: '`{if}`'
                feedback: 在上面一行里使用了 `{if}` 命令。
            -   option: '`{sleep}`'
                feedback: 不是这个！
            -   option: '`{else}`'
                feedback: 这就对了!
            hint: 哪一个可以与`{if}`命令一起使用？
            question_score: '10'
            correct_answer: D
        2:
            question_text: 当您输入 海蒂 名字时，输出屏幕上会出现什么？
            code: |-
                name {is} {ask} '你叫什么名字？
                {if} name {is} 海蒂 {print} '有趣' {else} {print} '没那么有趣'
            mp_choice_options:
            -   option: 有点意思
                feedback: 这是正确的！
            -   option: 不太有趣
                feedback: 如果名字是 海蒂，它会说'有趣'
            -   option: Hedy
                feedback: 不，它不打印名字
            -   option: Error
                feedback: 幸好没有！
            hint: '`{if}` name `{is}` Hedy `{print}` ...?'
            question_score: '10'
            correct_answer: A
        3:
            question_text: 正确的密码是什么？
            code: |-
                密码 {is} {ask} '密码是什么？'
                {if} 密码 {is} SECRET {print} '正确！'
                {else} {print} '警报！ 入侵者！'
            mp_choice_options:
            -   option: 正确!
                feedback: 当输入正确的密码时会打印此信息
            -   option: SECRET
                feedback: 对啦!'
            -   option: password
                feedback: 密码不是password...
            -   option: ALARM INTRUDER
                feedback: 当输入错误的密码时会打印此信息！
            hint: '`{if}` 密码 `{is}` ... `{print}` ''正确！''！'''
            correct_answer: B
            question_score: '10'
        4:
            question_text: 输入错误密码时 海蒂 会打印什么？
            code: |-
                密码 {is} {ask} '密码是什么？'
                {if} 密码 {is} SECRET {print} '正确！'
                {else} {print} '警报！ 入侵者！'
            mp_choice_options:
            -   option: 正确
                feedback: 如果给出正确答案，就会打印出来，而不是错误答案......
            -   option: SECRET
                feedback: 这不是正确的答案
            -   option: 错了！
                feedback: 不，这不是 海蒂 将打印的内容
            -   option: ALARM! INTRUDER!
                feedback: 干的好!
            hint: 你计算机将对入侵者发出警报！
            question_score: '10'
            correct_answer: D
        5:
            question_text: 为什么当你输入'secret' 时，海蒂会说 '警报！入侵者'？
            code: |-
                密码 {is} {ask} '密码是什么？'
                {if} 密码 {is} SECRET {print} '正确！'
                {else} {print} '警报！ 入侵者！'
            mp_choice_options:
            -   option: 因为SECRET需要大写
                feedback: 的确！
            -   option: 因为密码是alarm
                feedback: 不，这不是密码。
            -   option: 因为写错了。
                feedback: 这不是你拼写秘密的方式
            -   option: 因为海蒂犯了一个错误
                feedback: No, Hedy is right
            hint: 该单词的拼写必须完全相同。
            correct_answer: A
            question_score: '10'
        6:
            question_text: 最后一行问号处应该用哪个词？
            code: |-
                {print}'我是足球算命师 海蒂!'
                {print} '我会预测你的球队最终会取得什么名次!'
                俱乐部{ask}'你最喜欢哪个俱乐部?'
                {if} 俱乐部 {is} 阿贾克斯 {print} '阿贾克斯当然会赢!'
                _ {print} '抱歉，你的俱乐部将排在最后......'
            mp_choice_options:
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: '`{if}` 已经在上面的行中'
            -   option: |-
                    ```
                    {at} {random}
                    ```
                feedback: 不，你需要`{else}`。
            -   option: |-
                    ```
                    {else}
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` 已经存在，我们需要在它之前添加一个单词！'
            hint: '`{if}` 与...一起使用？'
            question_score: '10'
            correct_answer: C
        7:
            question_text: 问号的位置应该用哪个词？
            code: |-
                {print} '我可以预测你是否会成为百万富翁！'
                name {is} {ask} '你叫什么名字？'
                {if} name {is} 海蒂 {print} '你将成为百万富翁！'
                {else} _'不幸的是……你没有多少钱。'
            mp_choice_options:
            -   option: '`{if}`'
                feedback: '`{if}` 在上面的行中。'
            -   option: '`{at} {random}`'
                feedback: 不，你不需要`{at} {random}`。
            -   option: '`{else}`'
                feedback: 已经有一个 `{else}` 命令
            -   option: '`{print}`'
                feedback: 超赞!
            hint: 在`{else}`之后是`{print}`命令
            question_score: '10'
            correct_answer: D
        8:
            question_text: 问号处应该填哪个词？
            code: |-
                动物 {is} {ask} '你最喜欢的动物是什么？'
                {if} _ {is} 企鹅 {print} '那也是我最喜欢的动物！'
                {else} {print} '酷！ 我喜欢企鹅。'
            mp_choice_options:
            -   option: |-
                    ```
                    favorite animal
                    ```
                feedback: 那不是变量名。
            -   option: |-
                    ```
                    animal
                    ```
                feedback: 干得好!
            -   option: '`{if}`'
                feedback: '`{if}` 已经存在'
            -   option: '`{print}`'
                feedback: 不，不是这样。
            hint: 变量名是什么？
            question_score: '10'
            correct_answer: B
        9:
            question_text: 你应该选择哪扇门逃生？
            code: |-
                {print} '逃离鬼屋！'
                {print} '你面前有 3 扇门'
                门{is} {ask} '你选择哪扇门？'
                怪物{is}吸血鬼、狼人、巨型蜘蛛
                {if} 门 {is} 2 {print} '耶，你可以逃脱了！'
                {else} {print}'你正在被......'怪物吞噬{at} {random}
            mp_choice_options:
            -   option: '1'
                feedback: 糟糕的选择！ 你正在被吃掉
            -   option: '2'
                feedback: 赞！ 你逃掉了！
            -   option: '3'
                feedback: 糟糕的选择！ 你正在被吃掉。
            -   option: 这是一个陷阱，你永远都会被吃掉！
                feedback: 幸运的是没有！
            hint: 其中一扇门将保证您的安全。
            question_score: '10'
            correct_answer: B
        10:
            question_text: 哪个怪物站在 1 号门后面？
            code: |-
                {print} '逃离鬼屋！'
                {print} '你面前有 3 扇门'
                门 {is} {ask} '你选择哪扇门？'
                怪物{is}吸血鬼、狼人、巨型蜘蛛
                {if} 门 {is} 2 {print} '耶，你可以逃脱了！'
                {else} {print} '你正在被......' 怪物吞噬{at} {random}
            mp_choice_options:
            -   option: 海蒂每次都会随机选择一个怪物。
                feedback: 超赞!
            -   option: 吸血鬼
                feedback: 不总是...
            -   option: 狼人
                feedback: 不总是...
            -   option: 巨型蜘蛛
                feedback: 不总是...
            hint: 注意最后 3 个词...怪物`{at} {random}`...
            correct_answer: A
            question_score: '10'
    6:
        1:
            question_text: 运行这段代码时 海蒂 的输出是什么？
            mp_choice_options:
            -   option: '20'
                feedback: 对了!
            -   option: '12'
                feedback: 不，加号是另外使用的
            -   option: 2*10
                feedback: 不，海蒂 会计算出答案
            -   option: '210'
                feedback: 请注意，这是一个计算。
            hint: '`*` 用作乘号'
            correct_answer: A
            code: '{print} 2*10'
            question_score: '10'
        2:
            question_text: 使用哪个符号进行添加？
            mp_choice_options:
            -   option: '`-`'
                feedback: 不是这个
            -   option: plus
                feedback: 不是这个
            -   option: '`*`'
                feedback: 不是这个
            -   option: '`+`'
                feedback: 正确!
            question_score: '10'
            correct_answer: D
            hint: 这是加号.
        3:
            question_text: 运行这段代码时 海蒂 的输出是什么？
            mp_choice_options:
            -   option: '30'
                feedback: 如果没有引号，这将是正确的答案。
            -   option: '13'
                feedback: 再试一次吧..
            -   option: 3*10
                feedback: 正确的！ 因为有引号，所以 海蒂和 会按字面意思打印出来。
            -   option: 没什么，海蒂 会给出错误信息。
                feedback: 不，海蒂 会逐字打印。
            hint: 注意引号！！
            code: "{print} '3*10'"
            question_score: '10'
            correct_answer: C
        4:
            question_text: 金今年10岁了。 海蒂会为她打印什么？
            code: |-
                name = {ask} '你的名字中有多少个字母？
                年龄 = {ask} '你多大了？
                幸运数字=姓名*年龄
                {print} '你的幸运数字是...' luckynumber
            mp_choice_options:
            -   option: '30'
                feedback: 请注意，海蒂 还打印出 '你的幸运数字是……'
            -   option: '10'
                feedback: 请再试一次。
            -   option: 你的幸运数字是... 30
                feedback: 这就对了！
            -   option: 你的幸运数字是... 10
                feedback: 她的幸运数字是名字乘年龄……
            hint: Kim 有 3 个字母，她今年 10 岁，所以：字母乘以年龄 = 3*10 = 30。
            correct_answer: C
            question_score: '10'
        5:
            question_text: 如果5个人在这家餐厅吃饭，总共要付多少钱？
            code: |-
                {print} '欢迎来到 海蒂！'
                people = {ask} '今晚有多少人和我们一起吃饭？'
                price =人数*10
                {print} '这将是 ' 价格 '请付美元'
            mp_choice_options:
            -   option: 5美元
                feedback: 不幸的是，它并不便宜。
            -   option: 10 美元
                feedback: 不，每个 10 美元。
            -   option: 15美元
                feedback: '* 表示乘法。'
            -   option: 50 美元
                feedback: Great!
            question_score: '10'
            hint: '`price` `is` `people` `times` 10'
            correct_answer: D
        6:
            question_text: 这家虚拟餐厅一个汉堡要多少钱？
            code: |-
                {print} '欢迎来到 海蒂 餐厅'
                food = {ask} '你想吃什么？'
                price = 0
                {if} food {is} 汉堡price = 15
                {if} food {is} 薯条price = 6
            mp_choice_options:
            -   option: 15美元
                feedback: 赞!
            -   option: 6 美元
                feedback: 薯条6块钱
            -   option: 0 美元
                feedback: 汉堡不是免费的！
            -   option: 21 美元
                feedback: 这是一个汉堡和薯条的价格！
            hint: 注意第四行。
            correct_answer: A
            question_score: '10'
        7:
            question_text: 为什么第 7 行显示“价格是价格 + 3”而不是“价格是 3”？
            code: |-
                {print} '欢迎来到 海蒂 餐厅'
                food = {ask} '你想吃什么？'
                price = 0
                {if} food {is} 汉堡 price = price + 15
                {if} food {is} 薯条 price = price + 6
                drinks is{ask} '你想喝什么？'
                {if} drinks {is} 可乐 price = price + 3
                {if}drinks{is}水 price=price+1
                {print} price '请付美元'
            mp_choice_options:
            -   option: 也可以是 `price = 3`。
                feedback: 不，那不是真的。 海蒂 需要在总数中添加 3 美元。
            -   option: 因为 海蒂 不明白 `price = 3`。
                feedback: 海蒂会理解，但这是不对的。
            -   option: 因为否则 海蒂 就会忘记之前的订单。 价格总共是3美元。
                feedback: 这是正确的！
            -   option: 因为一开始的价格是0美元。
                feedback: 确实如此，但不是原因
            hint: 价格不应该是3，而是比原来多了3美元
            question_score: '10'
            correct_answer: C
        8:
            question_text: 为什么这段代码不正确？
            code: |-
                正确答案 = 3*12
                答案 = {ask} '3 乘以 12 是多少？'
                {if} 回答 {is} 正确答案 {print} '干得好！'
                {else} {print} '不...这是'正确答案
            mp_choice_options:
            -   option: 第 2 行不应有引号
                feedback: 不，应该有！
            -   option: 该变量称为正确答案，但变量的名称只能是 1 个单词。 所以应该是correct_answer
                feedback: 对了!
            -   option: '`{if}` 和 `{else}` 命令应该在同一行。'
                feedback: 不，那不是真的。
            -   option: 第2行中的变量不能称为答案，因为它与变量正确答案太相似。
                feedback: 变量名可以相似，但不能是两个单词......
            hint: 检查变量的名称。
            correct_answer: B
            question_score: '10'
        9:
            question_text: 想象一下，你10分热爱足球，今天吃了 2 根香蕉并且洗手了 3 次。 那个愚蠢的算命先生认为你有多聪明？
            code: |-
                {print}'我是糊涂的算命师海蒂'
                {print} '我会预测你有多聪明！'
                Football = {ask} '按 0 到 10 分，你有多热爱足球？'
                bananas = {ask} '这周你吃了多少根香蕉？'
                hygiene = {ask} '你今天洗了多少次手？？'
                result = bananas + hygiene
                result = result * football
                {print} '你' result' 的确聪明。'
            mp_choice_options:
            -   option: 10%
                feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            -   option: 32%
                feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            -   option: 50%
                feedback: 极好！ 你是百分百聪明的！
            -   option: 100%
                feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            hint: (2 根香蕉 + 3 条卫生纸)* 10 个足球 = 5*10 =？
            question_score: '10'
            correct_answer: C
        10:
            question_text: 哪个论述是对的？
            code: |-
                名字_海蒂
                {print} name '正在穿过森林'
            mp_choice_options:
            -   option: 您只能在`_`上填写单词
                feedback: 也可以使用`=`符号
            -   option: 您可以在 `_` 上填写单词 ' is ' 或 `=` 符号
                feedback: 赞哪！
            -   option: 你必须在 `_` 上填写 =是=
                feedback: 不，一个 `=` 符号就足够了
            -   option: 在处理数字时只能使用 `=` 符号，而不能在处理单词时使用。
                feedback: 还可以将 `=` 与单词一起使用。
            hint: '`{is}` 和 `=` 都是允许的'
            question_score: '10'
            correct_answer: B
    7:
        1:
            question_text: 使用这一关的repeat命令可以一次重复多少行？
            mp_choice_options:
            -   option: '0'
                feedback: 不，您可以重复一行。
            -   option: '1'
                feedback: 正确，一次一行
            -   option: '3'
                feedback: 在这个级别中一次只有一行
            -   option: 无穷
                feedback: 在此级别中，一次只能重复一行
            hint: 一次只能重复 1 行
            correct_answer: B
            question_score: '10'
        2:
            question_text: 哪个代码是正确的？
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 100 {times} 'hello'
                    ```
                feedback: '`{repeat}` 100 `{times}` `{print}` ''hello'''
            -   option: |-
                    ```
                    {print} {repeat} 100 {times} 'hello'
                    ```
                feedback: '{repeat} 100 {times} {print} ''hello'''
            -   option: |-
                    ```
                    {repeat} 'hello' 100 {times}
                    ```
                feedback: '{repeat} 100 {times} {print} ''hello'''
            -   option: |-
                    ```
                    {repeat} 100 {times} {print} 'hello'
                    ```
                feedback: 这是正确的！
            hint: 首先是`{repeat}`命令，然后是`{print}`命令
            question_score: '10'
            correct_answer: D
        3:
            question_text: 这段代码是对还是错？
            mp_choice_options:
            -   option: Right
                feedback: 不，少了一个字
            -   option: 错误，缺少`{repeat}`一词
                feedback: 单词`{repeat}`存在，另一个单词缺失
            -   option: 错误，缺少`{times}`一词
                feedback: 这里有`{times}`这个词，但缺少另一个词。
            -   option: 错误，缺少`{print}`一词
                feedback: 对了
            hint: 应该是： `{repeat}` 100 `{times}` `{print}` 'Hello'
            correct_answer: D
            code: "{repeat} 100 {times} 'Hello!'"
            question_score: '10'
        4:
            question_text: 代码中哪个单词是错误的？
            code: |-
                {print}'我很忧郁'
                {repeat} 7 {times} {print} 'da ba dee, da ba da'
            mp_choice_options:
            -   option: '`I''m`'
                feedback: 这是正确的！
            -   option: '`{print}`'
                feedback: '`{print}` 拼写正确'
            -   option: '`{repeat}`'
                feedback: '`{repeat}` 拼写正确'
            -   option: '`{times}`'
                feedback: '`{times}` 拼写正确'
            hint: 我错了，你不能在句子中使用撇号
            correct_answer: A
            question_score: '10'
        5:
            question_text: 这段代码是对还是错？
            code: '{repeat} 100 {times} {print} ''海蒂太棒了！'''
            mp_choice_options:
            -   option: 对了
                feedback: 这是正确的！
            -   option: 警告
                feedback: 不是这个
            hint: 代码是正确的！
            correct_answer: A
            question_score: '10'
        6:
            question_text: 这段代码的输出是什么？
            code: |-
                {print} '公共汽车上的轮子开始运转'
                {repeat} 3{times}{print}' 一轮又一轮'
            mp_choice_options:
            -   option: |-
                    ```
                    公共汽车上的轮子走起来
                    一遍又一遍
                    ```
                feedback: 仅第二行重复3次
            -   option: |-
                    ```
                    公共汽车上的轮子走起来
                    公共汽车上的轮子走起来
                    公共汽车上的轮子走起来
                    一遍又一遍
                    ```
                feedback: 仅第二行重复3次
            -   option: |-
                    ```
                    公共汽车上的轮子走起来
                    一遍又一遍
                    公共汽车上的轮子走起来
                    一遍又一遍
                    公共汽车上的轮子走起来
                    一遍又一遍
                    ```
                feedback: 仅第二行重复3次
            -   option: |-
                    ```
                    公共汽车上的轮子走起来
                    一遍又一遍
                    一遍又一遍
                    一遍又一遍
                    ```
                feedback: 遍布整个城镇！ 完美的！
            hint: 只‘round and round'重复了3次。
            question_score: '10'
            correct_answer: D
        7:
            question_text: 这段代码的输出是什么？
            mp_choice_options:
            -   option: |-
                    ```
                    我们会 我们会
                    摇滚你！
                    ```
                feedback: '''We will''不会在同一行中出现两次'
            -   option: |-
                    ```
                    我们将
                    我们将
                    摇滚你！
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    我们将
                    摇滚你！
                    我们将
                    摇滚你！
                    ```
                feedback: ROCK YOU! 不会重复
            -   option: |-
                    ```
                    我们将
                    摇滚你！
                feedback: 注意 `{repeat}`命令
            hint: 注意`{repeat}`命令。
            correct_answer: B
            question_score: '10'
            code: "{repeat} 2 {times} {print} 'We will'\n{print} 'ROCK YOU!'"
        8:
            question_text: 哪个海蒂代码会输出这个？
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: 太棒了，你不能在这里使用 `{repeat}` 命令。
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} '太阳来了'
                    {print} '我说'
                    {print}“没关系”
                feedback: 你把“Do do do do”留在哪里了？
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: 这不是正确的顺序.
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {repeat} 2 {times} {print} 'Do do'
                    {print} 'And I say'
                    {print} 'Its alright'"
                    ```
                feedback: 这不是正确的顺序.
            hint: 仅当您想连续多次执行同一行时才可以使用`{repeat}`。
            correct_answer: A
            code: "Here comes the sun\nDo do do do\nHere comes the sun\nAnd I say\nIts alright"
            question_score: '10'
        9:
            question_text: 该输出属于什么 海蒂 代码？
            code: |-
                蝙蝠侠正在高谭市上空飞行。
                当他突然听到有人在尖叫...
                救命啊!
                救命啊！
                救命啊！
                请帮助我！
            mp_choice_options:
            -   option: |-
                    ```
                    {print} '蝙蝠侠正在飞过哥谭。'
                    {print}“突然他听到有人尖叫……”
                    {print} '救命！'
                    {repeat} 3 {times} {print} '请帮助我！'
                    ```
                feedback: 你重复的行不正确。
            -   option: |-
                    ```
                    {print}'蝙蝠侠正在飞过哥谭。'
                    {print}'突然他听到有人尖叫……'
                    {repeat} 3 {times}'救命！'
                    {print} '请帮助我！'
                    ```
                feedback: 第三行缺少了`{print}`命令。
            -   option: |-
                    ```
                    {print} 蝙蝠侠正在飞过哥谭。
                    {print} 突然他听到有人尖叫……
                    {repeat} 3 {times} {print} 救命!
                    {print} 快来救我!
                    ```
                feedback: 你漏掉了引号
            -   option: |-
                    ```
                    {print} '蝙蝠侠正在飞过哥谭。'
                    {print} '突然他听到有人尖叫！'
                    {repeat} 3 {times} {print} '救命！'
                    {print} '帮帮我！'
                    ```
                feedback: 完美
            hint: '''Help！'' 重复3次。'
            correct_answer: D
            question_score: '10'
        10:
            question_text: 哪个代码属于这个输出？
            mp_choice_options:
            -   option: |-
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: 几乎！ 第一行需要一个额外的单词
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
                feedback: 这顺序不正确。
            -   option: |-
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 {times} 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
                feedback: 这顺序不正确。
            hint: 注意句子的顺序。
            code: "如果感到开心你就拍拍手\n如果感到开心你就拍拍手\n如果感到开心你就拍拍手哪拍拍手\n如果感到开心你就拍拍手"
            question_score: '10'
            correct_answer: B
    8:
        1:
            question_text: 这段代码会产生什么输出？
            code: |-
                {repeat} 2 {times}
                     {print}“你好”
                     {print}“我是海蒂！”
            mp_choice_options:
            -   option: |-
                    你好
                    我是海蒂！
                feedback: 所有内容都打印两次。
            -   option: |-
                    你好
                    你好
                    我是海蒂
                feedback: 第二行也重复两次。
            -   option: |-
                    你好
                    我是海蒂！
                    你好
                    我是海蒂！
                feedback: 极好的！
            -   option: "你好 \n你好 \n我是海蒂！\n我是海蒂！"
                feedback: 所有内容都打印两次
            hint: 这两行都重复两次。
            correct_answer: C
            question_score: '10'
        2:
            question_text: 这段代码有什么问题？
            code: |-
                {repeat} 5 {times}
                {print} '海蒂很酷！'
            mp_choice_options:
            -   option: 这里应该只有一行代码，不是两行。
                feedback: 不，应该有两行。
            -   option: 必须去掉`{print}`命令。
                feedback: 不，你需要它。
            -   option: '`{repeat}`命令打错了。'
                feedback: 不，`{repeat}`是正确的拼写
            -   option: 第二行开头需要缩进四个空格。
                feedback: 正确！
            hint: 第二行缺了什么？
            question_score: '10'
            correct_answer: D
        3:
            question_text: 运行该程序时会产生什么输出？
            code: |-
                {repeat} 3 {times}
                    {print} '小鲨鱼 tututudutudu'
                {print} '小鲨鱼'
            mp_choice_options:
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                feedback: 注意 `{repeat}`命令！
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                feedback: 最后一行没有缩进，因此不再重复。
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark
                feedback: 对了！
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark
                    Baby shark
                feedback: 什么是重复的，什么不是？
            hint: 什么是重复的，什么不是？
            correct_answer: C
            question_score: '10'
        4:
            question_text: 哪个输出是正确的？
            code: |-
                {print} '孩子们去了：'
                {repeat} 2 {times}
                     {print}“耶！”
                     {print} '我们要去度假了！'
            mp_choice_options:
            -   option: "孩子们去了： \n耶！ \n要去度假了！"
                feedback: 注意`{repeat}`命令！
            -   option: "孩子们去了： \n耶! \n我们要去度假了! \n耶! \n我们要去度假了!"
                feedback: 正确!
            -   option: "孩子们去了： \n耶！ \n耶！ \n我们要去度假了！ \n我们要去度假了！"
                feedback: 这个顺序是不正确的。
            -   option: "孩子们去了：\n耶！ \n耶！  \n我们要去度假了!"
                feedback: 最后一行也重复。
            hint: '`{repeat}`命令下的块重复两次。'
            correct_answer: B
            question_score: '10'
        5:
            question_text: 这段代码有什么问题？
            code: |-
                end = {ask} '你想要一个快乐的结局还是悲伤的结局？
                {if} end {is} 欢乐 {print} '他们从此过上了幸福的生活'a
                {else} {print} '世界爆炸了。 结束。'
            mp_choice_options:
            -   option: 最后两行的`{print}`命令应换行并以 4 个空格开头。
                feedback: 这是正确的！
            -   option: '`{else}` is not a command!'
                feedback: 正是！
            -   option: 以 `{if}` 开头的行应以 4 个空格开头
                feedback: 这不是真的
            -   option: '`{ask}` 不再是一个命令'
                feedback: 这不是真的
            hint: 缩进有问题
            correct_answer: A
            question_score: '10'
        7:
            question_text: 这段代码哪里错了？
            code: |-
                food = {ask} '你想吃什么？'
                {if} food {is} 薯条
                sauce= {ask} '你想要什么酱？'
                    {print} '一份薯条配' 酱汁
                {if} food {is} 披萨
                    topping = {ask} '你想要什么配料？'
                    {print} '一份披萨配' 配料
                {print} '这些是你点的'
            mp_choice_options:
            -   option: 没错。这段代码是正确的！
                feedback: 有地方出错了！
            -   option: '`{ask}`命令后面不能用`{if}`命令。'
                feedback: 可以用！
            -   option: 不需要缩进两次。只有第一个`{if}`命令需要缩进。
                feedback: 每一行都要缩进。
            -   option: 第一个`{if}`命令的缩进错了。
                feedback: 是的。
            hint: 注意观察缩进。
            question_score: '10'
            correct_answer: D
        8:
            question_text: 哪段代码中的缩进正确嘛？
            mp_choice_options:
            -   option: |-
                    ```
                    {if} 答案{is} 32
                       {print} '你是......'
                          {sleep}
                              {print} '对！'
                          {else}
                              {print} '你错了！'
                    ```
                feedback: 您错了！
            -   option: |-
                    ```
                    {if} 答案{is} 32
                    {print} '你是......'
                    {sleep}
                    {print} '对！'
                    {else}
                    {print} '你错了！'
                    ```
                feedback: 您错了！
            -   option: |-
                    ```
                    {if} 答案{is} 32
                        {print} '你是......'
                        {sleep}
                        {print} '对！'
                    {else}
                        {print} '你错了！'
                    ```
                feedback: 你...对了！
            -   option: |-
                    ```
                    {if} 答案{is} 32
                        {print} '你是......'
                        {sleep}
                    {print} '对！'
                    {else}
                        {print} '你错了！'
                    ```
                feedback: 您错了！
            hint: 如果这个人是对的，会发生什么？ 还有什么？
            correct_answer: C
            question_score: '10'
        9:
            question_text: 此代码中的哪一行应以 4 个空格开头？
            code: |-
                1 音乐 = {ask} '你最喜欢的音乐类型是什么？'
                2{if} 音乐{is} 摇滚
                3{print} '🤘'
                4{else}
                5{print} '👎'
            mp_choice_options:
            -   option: 第 2 和 第4行
                feedback: '`{if}` 和 `{else}` 命令后面的行应以 4 个空格开头'
            -   option: 仅第3行
                feedback: 不仅第3行...
            -   option: 第 3,4 和 第5行
                feedback: 不应该是第 4 行
            -   option: 第 3 和 第5行
                feedback: 干的好!
            hint: '`{if}` 或 `{else}` 命令后面的行应以 4 个空格开头。'
            question_score: '10'
            correct_answer: D
        10:
            question_text: 哪个论述是对的？
            code: |-
                1 级别 ={ask} '你学到哪一级了？'
                2 {if} 级别{is} 8
                3 {print} '干得好！'
            mp_choice_options:
            -   option: 所有行都应以 4 个空格开头
                feedback: 这不是真的
            -   option: 第 2 行和第 3 行应以 4 个空格开头
                feedback: 这不是真的
            -   option: 第 2 行应以 4 个空格开头
                feedback: 这不是真的
            -   option: 第 3行应以 4 个空格开头
                feedback: 你是对的！
            hint: 只有一行以 4 个空格开头，但是哪一行...？
            question_score: '10'
            correct_answer: D
        6:
            question_score: '10'
            code: "{print} \"欢迎来到 Hedy 餐厅\"\n{repeat} 2 {times}\n    food {is} {ask} \"你想吃什么?\"\n    {print} food"
            question_text: 当我们输入 pancakes 时，这段代码会输出什么?
            mp_choice_options:
            -   feedback: 此答案无重复.
                option: "欢迎来到 Hedy \n煎饼餐厅"
            -   feedback: 这个答案也重复了欢迎信息
                option: "欢迎来到 Hedy \n欢迎来到 Hedy \n煎饼餐厅\n煎饼餐厅"
            -   feedback: 差不多了！不过看题目，应该不重复.
                option: "欢迎来到 Hedy 餐厅\n你想吃什么?\n你想吃什么?\n煎饼\n煎饼"
            -   feedback: 干的好!
                option: "欢迎来到 Hedy 餐厅\n煎饼\n煎饼"
            hint: 第一句话和问题不再重复
            correct_answer: D
    9:
        1:
            question_text: 这段代码有什么问题？
            code: |-
                {repeat} 3 {times}
                    food = {ask} '你想吃什么？'
                    {if}食物{is}薯条
                        sauce = {ask} '你想要什么酱汁？'
                        {print} '一份薯条配'酱汁
                    {if}食物{is}披萨
                        topping = {ask} '您想要什么配料？'
                        {print} '一份带有 ' 配料的披萨
                {print} '感谢您的订单'
            mp_choice_options:
            -   option: 没什么, 这段代码是正确的！
                feedback: 这是正确的！
            -   option: 您不能在`{ask}`命令之后使用`{if}`命令。
                feedback: 可以用！
            -   option: 您不必使用缩进两次。
                feedback: 你总是必须使用缩进。
            -   option: 最后一个`{if}`命令中的缩进是错误的。
                feedback: 这不是缩进。
            hint: 所有缩进均正确完成。
            question_score: '10'
            correct_answer: A
        2:
            question_text: 输入正确的密码后会显示什么？
            code: |-
                密码 = {ask} '密码是什么？'
                正确密码 = '海蒂'
                {if} 密码 {is} 正确密码
                    {repeat} 2 {times}
                        {print} '做得好！'
                        {print} '你可以用电脑了！'
                {else}
                    {print} '电脑即将爆炸。倒计时，5... 4... 3... 2... 1...'
            mp_choice_options:
            -   option: |-
                    ```
                    做得好！
                    做得好！
                    ```
                feedback: 不是这个！
            -   option: |-
                    ```
                    电脑即将爆炸。倒计时，5... 4... 3... 2... 1...
                    ```
                feedback: 不是这个！
            -   option: |-
                    ```
                    做得好！
                    做得好！
                    你可以用电脑了！
                    ```
                feedback: 不是这个！
            -   option: |-
                    ```
                    做得好！
                    你可以用电脑了！
                    做得好！
                    你可以用电脑了！
                    ```
                feedback: 正确！
            hint: '`{repeat}`命令下的所有东西都会重复两次。'
            question_score: '10'
            correct_answer: D
        3:
            question_text: 您应该选择哪个案例来赢得百万美元？
            code: |-
                {print} '选择正确的情况并获胜！'
                case = {ask} '你会选择哪种情况？ 1还是2？
                {if} 情况 {is} 1
                      action = {ask} '打开还是出售？'
                          {if} 行动 {is} 卖出
                              {print} '你以 10 美元的价格出售你的箱子'
                          {if} 操作 {is} 打开
                              {print} '您打开箱子并赢得苹果派'
                {if} 情况 {is} 2
                      action = {ask} '打开还是出售？'
                          {if} 行动 {is} 卖出
                              {print} '你以 500 美元的价格出售这个箱子'
                          {if} 操作 {is} 打开
                              {print} '您打开箱子并赢得一百万美元！'
            mp_choice_options:
            -   option: 情况1,出售
                feedback: 你没能赢得一百万!
            -   option: 情况1，打开
                feedback: 你没能赢得一百万
            -   option: 情况2,出售
                feedback: 你没能赢得一百万
            -   option: 情况2,打开
                feedback: 干得好！ 你赢了！
            hint: 遵循正确的道路
            correct_answer: D
            question_score: '10'
        4:
            question_text: 哪个论述是对的？
            code: |-
                name = {ask} '你叫什么名字？
                size = {ask} '你的鞋码是多少？'
                {if} 尺寸 {is} 38
                     {if} 名字 {is} 灰姑娘
                         {print}'❤️❤️❤️'
                     {else}
                         {print} '你不是那个人！'
                {else}
                     {print} '我会继续寻找'
            mp_choice_options:
            -   option: 鞋号为 38 的睡美人得到输出“我会继续寻找”
                feedback: 不，她得到的是“你不是那个人！”
            -   option: 鞋号为 40 的灰姑娘得到输出“❤️❤️❤️”
                feedback: 不，她得到“我会继续寻找”
            -   option: 鞋号为 40 的睡美人得到输出“我会继续寻找”
                feedback: 这是正确的！
            -   option: 鞋号为 38 的灰姑娘得到的输出是“我会继续寻找”
                feedback: 不，她得到了“❤️❤️❤️”
            hint: 无论你名字是什么，如果你的鞋码为 40，你都会收到“我会继续寻找”的消息。
            correct_answer: C
            question_score: '10'
        5:
            question_text: 哪个代码产生了这个输出？
            output: |-
                冰淇淋是最好的!
                冰淇淋是最好的!
                冰淇淋是最好的!
            mp_choice_options:
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: 不要忘记`{repeat}`命令后面的缩进。
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                    {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: 在 `{if}` 命令后使用缩进
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: 完美
            -   option: |-
                    ```
                    {repeat} 3 {times}
                        desert = {ask} 'What is your favorite type of desert?'
                        {if} desert {is} icecream
                            {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: 此代码中有 2 个`{repeat}`命令。
            hint: 观察缩进
            question_score: '10'
            correct_answer: C
        6:
            question_text: 在哪些命令之后应该使用缩进（下一行以 4 个空格开始）？
            mp_choice_options:
            -   option: '`{if}`'
                feedback: 别忘了其他人
            -   option: '`{if}` `{repeat}`'
                feedback: 不要忘记 `{else}`!
            -   option: '`{if}` `{else}` `{repeat}`'
                feedback: 继续加油！
            -   option: '`{if}` `{else}` `{repeat}` `{print}`'
                feedback: 不使用`{print}`
            hint: 缩进发生在某些命令下方的行上
            correct_answer: C
            question_score: '10'
        7:
            question_text: 如果你点了一个中等大小的比萨和一杯可乐，你会得到5元的折扣。<br>但这段代码中存在一个错误！如何调试这段代码？
            code: |-
                {if}食物 {is} 披萨
                {if} 尺寸 {is} 中号
                {if} 饮料 {is} 可乐
                价格 = 价格 - 5
            mp_choice_options:
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                                price = price - 2
                    ```
                feedback: 令人惊奇！
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                    {if} drink {is} coke
                        price = price - 2
                    ```
                feedback: 第二个`{if}`未命中代码！
            -   option: |-
                    ```
                    {if} food {is} pizza
                    {if} size {is} medium
                    {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: 两个连续的`{if}`永远不正确。
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: 几乎正确。再看最后一行
            hint: 在每个`{if}`命令之后，下面的行应该缩进
            question_score: '10'
            correct_answer: A
        8:
            question_text: 这段代码有什么问题？
            code: "年龄={ask} ‘生日快乐!你多大了？’\n唱歌={ask}‘你想让我们唱歌吗？’\n\t{if} 唱歌{is} 是\n\t\t{repeat}岁{times}\n\t\t\t{print}‘加油’"
            mp_choice_options:
            -   option: 你不能连续提出两个问题
                feedback: 是的你可以。
            -   option: 名为“age”的变量后来被用作“years”
                feedback: 敏锐的眼光！干得好！
            -   option: 您不能像第 5 行那样以 8 个空格开头
                feedback: 你实际上必须这样开始。
            -   option: 代码必须始终以第一行中的`{print}`命令开头
                feedback: 那不是真的。
            hint: 这次缩进是正确的
            correct_answer: B
            question_score: '10'
        9:
            question_text: 在另一个`{if}`命令中可以放置多少个`{if}`命令？
            mp_choice_options:
            -   option: 无，这是不允许的
                feedback: 你被允许
            -   option: 只有1
                feedback: 如果你愿意，你可以使用更多
            -   option: '3'
                feedback: 如果你愿意，你可以使用更多
            -   option: 无限，只要你继续正确使用缩进
                feedback: 这是真的
            hint: 您可以将`{if}`命令放在`{if}`命令中。
            question_score: '10'
            correct_answer: D
        10:
            question_text: 哪种说法是正确的？
            code: |-
                1 {repeat} 2 {times}
                2 {if} level{is} 9
                3 {print} '干得好!'
            mp_choice_options:
            -   option: 所有行都应以 4 个空格开头
                feedback: 只有第 2 行和第 3 行以空格开头
            -   option: 第 2 行和第 3 行应以 4 个空格开头
                feedback: 第 3 行应以 8 开头
            -   option: 第 2 行和第 3 行应以 8 个空格开头
                feedback: 第 2 行应以 4 开头
            -   option: 第 2 行应以 4 个空格开头，第 3 行应以 8 开头
                feedback: 你是对的!
            hint: 第一行不以任何空格开头
            question_score: '10'
            correct_answer: D
    10:
        1:
            question_text: 如果我们想打印每份贺词，我们需要在 `_` 上填写什么？
            mp_choice_options:
            -   option: |-
                    ```
                    {for} each compliment
                    ```
                feedback: 不是这个
            -   option: |-
                    ```
                    {for} compliment {in} compliments
                    ```
                feedback: 你值得所有这些赞美!
            -   option: |-
                    ```
                    {if} compliment {in} compliments
                    ```
                feedback: 不是这个
            -   option: |-
                    ```
                    {for} compliments {in} compliment
                    ```
                feedback: 差不多了!
            hint: 恭维列表中的每条恭维都是`{for}`...
            code: "compliments = perfect, great job, amazing\n_\n    {print} compliment"
            correct_answer: B
            question_score: '10'
        2:
            question_text: 哪个输出是正确的?
            code: |-
                meals = pizza, pasta, pancakes
                {for} meal {in} meals
                    {print} '我喜欢' meal
            mp_choice_options:
            -   option: 我喜欢披萨
                feedback: 第 2 行用`{for}`显示膳食列表中的每顿饭。 所以每顿饭都会被打印出来。
            -   option: 我喜欢意面
                feedback: 第 2 行用`{for}`显示膳食列表中的每顿饭。 所以每顿饭都会被打印出来。
            -   option: 我喜欢煎饼
                feedback: 第 2 行用`{for}`显示膳食列表中的每顿饭。 所以每顿饭都会被打印出来。
            -   option: |-
                    我喜欢披萨
                    我喜欢意面
                    我喜欢煎饼
                feedback: Great!
            hint: 第 2 行表示餐食列表中的每餐。 所以每顿饭都会被打印出来。
            correct_answer: D
            question_score: '10'
        3:
            question_text: 哪个输出是正确的?
            code: |-
                animals = dogs, cats, hamsters, chickens
                {for} animal {in} animals
                    {print} animal ' 是可爱的宠物'
            mp_choice_options:
            -   option: 狗狗是可爱的宠物
                feedback: 第 2 行{for}表示动物列表中的每个动物。 所以每只动物都被{print}了。
            -   option: 狗、猫、仓鼠、鸡都是可爱的宠物
                feedback: 每只动物在输出中都有自己的行。
            -   option: |-
                    狗狗是可爱的宠物
                    猫猫是可爱的宠物
                    仓鼠是可爱的宠物
                    小鸡是可爱的宠物
                feedback: Great!
            -   option: 你还不知道。 因为{at}{random}选择其中一种动物。
                feedback: 第 2 行{for}表示动物列表中的每个动物。 所以每只动物都被{print}了。
            hint: 第 2 行{for}表示动物列表中的每个动物。 所以每只动物都被打印了
            correct_answer: C
            question_score: '10'
        4:
            question_text: 这段代码有什么问题？
            code: |-
                groceries = apples, bread, milk
                {for} item {in} groceries
                    {print} '我们需要 ' groceries
            mp_choice_options:
            -   option: 第2行需要以4个空格开头作为缩进
                feedback: 不，没有。 只有第 3 行也需要缩进。
            -   option: 第3行不需要以4个空格开头作为缩进
                feedback: 第 2 行是一个`{for}`命令，因此第 3 行确实需要以缩进开头。
            -   option: 第 3 行应该显示 item 而不是grocery
                feedback: 干得好!
            -   option: 第 2 行应显示杂货而不是商品
                feedback: 不，不是的。
            hint: 第 2 行显示杂货列表中的每一项  `{for}`
            question_score: '10'
            correct_answer: C
        5:
            question_text: 这些数字骰子的 `_` 上应该写什么字？
            mp_choice_options:
            -   option: 玩家
                feedback: 它会说'Ann throws Jesse'，而不是“'nn throws 6'。
            -   option: 选择
                feedback: 这就对了！
            -   option: 选择
                feedback: 你已非常接近。 但需要海蒂从名为'choices'而不是'choice'列表中进行选择......
            -   option: 骰子
                feedback: 查看变量的名称。
            hint: 海蒂需要选择一个数字 `{at} {random}`
            question_score: '10'
            correct_answer: B
            code: "{print} '欢迎来到数字骰子!'\nplayers = Ann、John、Jesse\nchoices = 1、2、3、4、5、6\n{for} player {in} players\n{print} player '掷骰子' _ {at} {random}"
        6:
            question_text: 当您运行代码时，以下哪个答案是可能的结果？
            code: |-
                choices = rock, paper, scissors
                players = Kelly, Meredith
                {for} 玩家 {in} players
                    {print} 玩家选择 ' chooses '  {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    凯莉选择石头
                    ```
                feedback: 梅雷迪思也想玩！
            -   option: |-
                    ```
                    梅雷迪思选择剪刀
                    凯莉选择石头
                    ```
                feedback: 很近！ 但凯莉在名单上排在第一位，所以她先走
            -   option: |-
                    ```
                    梅雷迪思选择纸
                    ```
                feedback: 凯莉也想玩!
            -   option: |-
                    ```
                    凯利选择纸
                    梅雷迪思选择剪刀
                    ```
                feedback: 惊人!
            hint: 每个玩家都会选择一个选项。 列表中第一个的玩家将先进行。
            correct_answer: D
            question_score: '10'
        7:
            question_text: 代码中的`_`应该是哪一行来决定这些人晚餐吃什么?
            code: |-
                name = 罗恩、莱斯利、阿普丽尔、安迪
                food=意大利面、薯条、沙拉
                _
                     {print} name ' 晚餐必须吃 ' food {at} {random} '
            mp_choice_options:
            -   option: |-
                    ```
                    {for} name {in} names
                    ```
                feedback: 你要火了！
            -   option: |-
                    ```
                    {for} names {in} name
                    ```
                feedback: 不，它应该适用于列表 names 中的每个名称，所以反过来
            -   option: |-
                    ```
                    {for} food {in} food
                    ```
                feedback: 每个name都应该被告知他们晚餐吃什么。
            -   option: |-
                    ```
                    {for} name {in} food
                    ```
                feedback: 每个name都应该被告知他们晚餐吃什么。
            hint: 每个name都应该被告知他们晚餐吃什么。
            correct_answer: A
            question_score: '10'
        8:
            question_text: 这段代码中的`_`应该写什么，来决定你得到哪种颜色的衬衫？
            mp_choice_options:
            -   option: |-
                    ```
                    'name gets a color shirt'
                    ```
                feedback: 不是这个！
            -   option: |-
                    ```
                    name 'gets a ' colors {at} {random} ' shirt'
                    ```
                feedback: 做得好！ 这个可难了！
            -   option: |-
                    ```
                    names 'gets a ' color {at} {random} ' shirt'
                    ```
                feedback: 你想要打印每个 name. 所以第一个词不应该是 names ，而是......
            -   option: |-
                    ```
                    'people gets a colors shirt'
                    ```
                feedback: 没有名为 people 的变量..
            hint: 注意引号和变量名称
            code: "names = Donna, Tommy, Ben\ncolors = blue, red, purple\n{for} name {in} names\n    {print} _"
            correct_answer: B
            question_score: '10'
        9:
            question_text: 当你运行程序时海蒂会问你的第一个问题是什么？
            code: |-
                courses = 开胃菜,主菜,甜点
                names = 丁满, 小野
                {for} name {in} names
                     {for} course{in} courses
                         food = {ask} name '，想吃什么作为您的'course'？'
                         {print} name '点'food'作为他们的'course
            mp_choice_options:
            -   option: 丁满，你想吃什么作为开胃菜？
                feedback: 完美!
            -   option: 小野，你想吃什么作为开胃菜？
                feedback: 丁满是列表中上的第一个！
            -   option: 丁满，你想吃什么作为甜点？
                feedback: 开胃菜排在第一位
            -   option: 你不知道这一点。 海蒂 将选择`{at} {random}`.
                feedback: 此代码中没有`{at} {random}`...
            hint: 从两个列表中选择第一个选项。
            correct_answer: A
            question_score: '10'
        10:
            question_text: 这段代码的真实情况是什么？
            code: |-
                prizes =100万美元,汽车,三明治
                names = Bob, Patrick, Sandy, Larry
                {for} prize {in} names
                     {print} prize'由'names{at} {random}'赢得'
            mp_choice_options:
            -   option: 每个人总会赢得奖品。
                feedback: 事实并非如此，最终你可能没有奖品。
            -   option: 所有奖品始终颁发给一个人。
                feedback: 那不是真的。 所有奖品都是赠送的，但是随机赠送给不同的人
            -   option: Larry 永远不会获奖
                feedback: 那不是真的。 Larry 和其他人的赔率相同
            -   option: 有人可能赢得两个奖品
                feedback: 你懂了！
            hint: 尝试想象这段代码的输出。
            correct_answer: D
            question_score: '10'
    11:
        1:
            question_text: 空格处应该填什么？
            mp_choice_options:
            -   option: '`counter`'
                feedback: 不是
            -   option: '`{range}`'
                feedback: 正确
            -   option: '`{if}`'
                feedback: 不是
            -   option: '`{for}`'
                feedback: 不是
            hint: 你学了什么？
            code: "{for} i {in} _ 1 {to} 10\n    {print} i"
            correct_answer: B
            question_score: '10'
        2:
            question_text: 这段代码会输出什么？
            mp_choice_options:
            -   option: |-
                    ```
                    1
                    2
                    3
                    ```
                feedback: 正确！
            -   option: |-
                    ```
                    1 2 3
                    ```
                feedback: 不是这个
            -   option: |-
                    ```
                    1, 2, 3
                    ```
                feedback: 不是这个
            -   option: |-
                    ```
                    123
                    ```
                feedback: 不是这个
            hint: 这些数字会如何显示在屏幕上？
            correct_answer: A
            question_score: '10'
            code: "{for} i {in} {range} 1 {to} 3\n    {print} i"
        3:
            question_text: 哪段代码可以输出这个？
            output: |-
                1
                2
                3
                4
                5
                我曾经抓住一条活鱼！
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                    {print} '我曾经抓住一条活鱼！'
                    ```
                feedback: 完美
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                    {print} '我曾经抓住一条活鱼！'
                    ```
                feedback: 这段代码无法运行。你需要在 {for} 后面缩进。
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                        {print} '我曾经抓住一条活鱼！'
                    ```
                feedback: 那么海蒂会说“1 我曾经抓住一条活鱼！2 我曾经抓住一条活鱼！”……等等。
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} 'i'
                    {print} '我曾经抓住一条活鱼！'
                    ```
                feedback: i 是一个变量，不应该加引号
            hint: 先输出所有数字，再输出那句话
            question_score: '10'
            correct_answer: A
        4:
            question_text: 哪段代码可以输出这个？
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: 这样海蒂会打印0到10，而不是10到0。
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} - 1 * i
                    ```
                feedback: 这样海蒂会打印负数。
            -   option: |-
                    ```
                    {for} i {in} {range}10 {to} 0
                        {print} i
                    ```
                feedback: 不幸的是这样并不对。
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: 对！
            hint: 这里需要用到计算…
            question_score: '10'
            correct_answer: D
            output: "10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0"
        5:
            question_text: 这段代码哪里错了？
            mp_choice_options:
            -   option: 最后一行的 i 需要引号
                feedback: 不，它不需要。
            -   option: 不能写`{range}` 1 `{to}` 5，只能写`{range}` 1 `{to}` 10
                feedback: 也可以用1到5！
            -   option: 第1行开头需要缩进。
                feedback: 不是第1行……
            -   option: 第二行开头需要缩进
                feedback: 太棒了！
            hint: 缩进有地方不对
            code: "{for} i {in} {range} 1 {to} 10\n{print} i"
            correct_answer: D
            question_score: '10'
        6:
            question_text: 当运行代码时，“Hello”一词在屏幕上出现了多少次？
            mp_choice_options:
            -   option: 1 次
                feedback: 'No'
            -   option: 2 次
                feedback: 'No'
            -   option: 3 次
                feedback: 对了!
            -   option: 永不
                feedback: 'No'
            hint: 0也算。 所以 0,1,2 是 3 倍。
            question_score: '10'
            correct_answer: C
            code: "{for} i {in} {range} 0 {to} 2\n    {print} 'Hello'"
        7:
            question_text: 空白处应该填什么？
            code: "{print} '欢迎来到海蒂快餐店'\npeople= {ask}'今晚有多少人会在这里吃饭？'\n_\n\tfood= {ask}'你想点些什么？'\n\t{print}food"
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                    ```
                feedback: There's not always 3 people
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} guests
                    ```
                feedback: 该变量未命名为 guest
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} people
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} people
                    ```
                feedback: 这一份订单太多了！
            hint: 使用变量 'people'
            correct_answer: C
            question_score: '10'
        8:
            question_text: 这段代码的输出是什么？
            mp_choice_options:
            -   option: |-
                    ```
                    23
                    24
                    25
                    ```
                feedback: 数字没有出现。 它没有说`{print}`i.
            -   option: |-
                    ```
                    23 hi 24 hi 25 hi
                    ```
                feedback: 数字没有出现。 它没有说`{print}` i
            -   option: |-
                    ```
                    hi
                    hi
                    hi
                    ```
                feedback: 正确
            -   option: '''hi''这个词会连续出现 25 次。'
                feedback: 不，它只会出现 3 次。
            hint: 它并没说 `{print}` i
            code: "{for} i {in} {range} 23 {to} 25\n    {print} 'hi'"
            correct_answer: C
            question_score: '10'
        9:
            question_text: 海蒂 唱了多少遍 Hip Hip Hooray？
            code: |-
                age = {ask} '你多大了'
                {for} 我 {in} {range} 1 {to} 年龄
                    {print} 'Hip Hip Hoorray!'
            mp_choice_options:
            -   option: 一次
                feedback: 再尝试
            -   option: 两次
                feedback: 再尝试
            -   option: 绝不
                feedback: 再尝试
            -   option: 这取决于你的年龄
                feedback: 这是正确的！
            hint: '`{for}` 我 `{in}` `{range}` 1 `{to}` 年龄'
            correct_answer: D
            question_score: '10'
        10:
            question_text: 哪个代码属于这个输出？
            output: |-
                小鲨鱼 tututudutudu
                小鲨鱼 tututudutudu
                小鲨鱼 tututudutudu
                小鲨鱼
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: 注意缩进
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: 这是正确的！
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 是 4 倍.'
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 是 4 倍.'
            hint: 注意缩进
            question_score: '10'
            correct_answer: B
    12:
        1:
            question_text: 哪个输出是正确的？
            code: |-
                {print} ‘三点五加一点五是......’
                {print}3.5 + 1.5
            mp_choice_options:
            -   option: '5'
                feedback: 不要忘记第一行代码！
            -   option: 3.5 + 1.5
                feedback: 不是这个！
            -   option: |-
                    thee and a half plus one and a half is...
                    five
                feedback: 仔细看看第二行...
            -   option: |-
                    three and a half plus one and a half is...
                    5
                feedback: 干的好!
            hint: 两行都打印出来了！
            correct_answer: D
            question_score: '10'
        2:
            question_text: 这些代码中哪一个是正确的？
            mp_choice_options:
            -   option: |-
                    ```
                    口味 {is} 香草、草莓、巧克力
                    {print} '我想要一个 ' 口味 {at} {random} ' 蛋糕。'
                    ```
                feedback: 所有不同的口味值都应该用引号引起来。
            -   option: |-
                    ```
                    口味=香草、草莓、巧克力
                    {print} '我想要一个 ' 口味 {at} {random} ' 蛋糕。'
                    ```
                feedback: 所有不同的口味值都应该用引号引起来。
            -   option: |-
                    ```
                    口味=香草、草莓、巧克力
                    {print} '我想要一个 ' 口味 {at} {random} ' 蛋糕。'
                    ```
                feedback: 好吧！
            -   option: |-
                    ````
                    flavors = '香草,草莓,巧克力'
                    {print} '我想要一个 ' flavors {at} {random} ' 的蛋糕。'
                    ````
                feedback: 所有不同的口味值都应该用引号引起来。
            hint: 每个代码中第二行都是一样的，注意第一行
            question_score: '10'
            correct_answer: C
        3:
            question_text: 这段代码有什么问题？
            code: |-
                favorite_animal = {ask} '最喜欢的动物是什么?'
                {print} '我也喜欢'最喜欢的'动物!'
            mp_choice_options:
            -   option: The name of the variable is different in line 1 than in line 2.
                feedback: 对的！
            -   option: The quotation marks aren't used correctly in line 2
                feedback: 这不是真的
            -   option: 在使用{ask}命令时不能使用=号
                feedback: 这不是真的
            -   option: Nothing is wrong.
                feedback: 这不是真的
            hint: 引号使用正确
            correct_answer: A
            question_score: '10'
        4:
            question_text: 哪些行需要引号才能使代码正常工作？
            code: |-
                {print} 欢迎来到网上鞋店
                category = {ask} 您要找什么类型的鞋子？
                {if} category =高跟鞋
                     {print} 高跟鞋现在打5折！
            mp_choice_options:
            -   option: Line 1 and 2
                feedback: 不
            -   option: Line 1, 2 and 3
                feedback: 不
            -   option: Line 1, 2 and 4
                feedback: 不
            -   option: All of the lines
                feedback: 完美!
            hint: 第3行也需要引号吗？
            correct_answer: D
            question_score: '10'
        5:
            question_text: 当 007 输入正确的密码时，他们会得到什么输出？
            code: |-
                name {is} {ask} '你叫什么名字？
                {if} 名称 {is} 'Agent007'
                     a {is} '去机场 '
                别的
                     a {is} '去火车站 '
                password {is} {ask} '密码是什么？'
                {if} password {is} 'TOPSECRET'
                     b {is} '明天 02:00'
                {else}
                     b {is} '今天 10 点'
                {print} a + b
            mp_choice_options:
            -   option: 今天10点去火车站
                feedback: 特工不会在这里抓到任何坏人
            -   option: 明天 02:00 去机场
                feedback: 你已经破解了密码！
            -   option: 明天 02:00 去火车站
                feedback: 特工不会在这里抓到任何坏人
            -   option: 明天10点去机场
                feedback: 特工不会在这里抓到任何坏人
            hint: 正确的密码是 TOPSECRET
            correct_answer: B
            question_score: '10'
        6:
            question_text: 应该填写哪一行,在`_`?
            code: "{print}‘欢迎来到麦克海蒂！’\norder={ask}‘你想吃汉堡包还是薯条？’\n {if}订单=‘汉堡包’\n\t价格=12\n{if} 订单=‘薯条’\n\t价格=4\n饮料={ask}‘你想用2美元买一杯饮料吗？’\n{if}饮料=‘是的’\n...._\n{print}‘请付’price‘元， 谢谢！’"
            mp_choice_options:
            -   option: |-
                    ```
                    price = 14
                    ```
                feedback: 如果你只点薯条和饮料怎么办？
            -   option: |-
                    ```
                    price = '14'
                    ```
                feedback: 如果你只点薯条和饮料怎么办？
            -   option: |-
                    ```
                    price = price + 2
                    ```
                feedback: 出色!
            -   option: |-
                    ```
                    price = + 2
                    ```
                feedback: 差不多了！
            hint: 如果你只点薯条和饮料怎么办？
            correct_answer: C
            question_score: '10'
        7:
            question_text: 素食主义者会得到什么输出？
            code: |-
                menu = '饼干','奶酪','葡萄'
                {print}“今天是我的生日！我带了一些零食！”
                diet = {ask} '您有饮食限制吗？'
                {if}diet='无麸质'
                     {remove}'饼干'{from} menu
                {if} diet = '素食'
                     {remove}'奶酪'{from} menu
                {print} '我为你带来了：'
                {for}snack{in} menu
                     {print}snack
            mp_choice_options:
            -   option: |-
                    今天是我的生日！ 我带了一些零食来了！
                    我为你带来了：
                    饼干
                    葡萄
                feedback: 了不起！
            -   option: |-
                    今天是我的生日！ 我带了一些零食来了！
                    我为你带来了：
                    葡萄
                feedback: 有更多的选择，而不仅仅是一种
            -   option: |-
                    今天是我的生日！ 我带了一些零食来了！
                    我为你带来了：
                    奶酪
                    葡萄
                feedback: 素食者不能吃奶酪
            -   option: |-
                    今天是我的生日！ 我带了一些零食来了！
                    我为你带来了：
                    葡萄
                    饼干
                feedback: 差不多了，不过看一下列表中零食的顺序
            hint: 当您回答“素食主义者”时，哪些项目将从列表中删除？
            question_score: '10'
            correct_answer: A
        8:
            question_text: 哪些代码用于创建这个输出?
            mp_choice_options:
            -   option: |-
                    ```
                    {print}‘7 / 2’
                    ```
                feedback: 不
            -   option: |-
                    ```
                    {print} 7 / 2
                    ```
                feedback: 对啦!
            -   option: |-
                    ```
                    {print} 7 : 2
                    ```
                feedback: 不
            -   option: |-
                    ```
                    {print} 7 * 2
                    ```
                feedback: 不
            hint: 7 被2除是 3.5
            correct_answer: B
            code: '3.5'
            question_score: '10'
        9:
            question_text: 第1行`_`?处应该填写哪个代码？
            code: |-
                _
                {print} ‘你赢了’奖品{at} {random} ‘！’
            mp_choice_options:
            -   option: |-
                    ```
                    奖励 = 'one' 'million' 'dollars', 'nothing'
                    ```
                feedback: 你什么都没有得到
            -   option: |-
                    ```
                    奖励 = 'one million dollars, nothing'
                    ```
                feedback: 你什么都没有得到
            -   option: |-
                    ```
                    奖励 = 'one million dollars', 'nothing'
                    ```
                feedback: 赢家!
            -   option: |-
                    ```
                    '奖励' = 'one million dollars', 'nothing'
                    ```
                feedback: 你什么都没有得到
            hint: 列表中的项目应该用引号括起来
            correct_answer: C
            question_score: '10'
        10:
            question_text: 在`_`处填上哪一行代码，可以来完成这首歌?
            code: "动作们=‘拍手’， ‘跺脚’，‘喊万岁！’   \n_\n\t{for} i{in} {range}0{to} 1\n\t\t{print} ‘如果你很高兴，你也知道’\n\t\t{print} 动作\n\t{print} ‘如果你很高兴，你也知道，而且你真的想表现出来’\n\t{print} ‘如果你很高兴，你也知道’\n\t{print} 动作"
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                    ```
                feedback: 这个一个困难的问题！列表上的所有动作都必须出现在歌曲中。
            -   option: |-
                    ```
                    {for} 动作 {in} 动作们
                    ```
                feedback: 你太棒啦!
            -   option: |-
                    ```
                    {repeat} 3 {times}
                    ```
                feedback: 这是一个困难的问题! 列表上的所有动作都必须出现在歌曲里。
            -   option: |-
                    ```
                    {print} 动作们 {at} {random}
                    ```
                feedback: 这是一个困难的问题! 列表上的所有动作都必须出现在歌曲里。
            hint: 这是一个困难的问题! 列表上的所有动作都必须出现在歌曲里。
            question_score: '10'
            correct_answer: B
    13:
        1:
            question_text: 在???处应该填上什么代码 ?
            code: "名字 ={ask} '你叫什么名字？'\n歌曲 ={ask} '你想听一首歌吗？'\n生日 ={ask} '今天是你的生日吗？'\n???\n\t{print} '祝你生日快乐！'\n\t{print} '祝你生日快乐！'\n\t{print} '祝亲爱的' 名字 '生日快乐'\n\t{print} '祝你生日快乐！'"
            mp_choice_options:
            -   option: |-
                    ```
                    {if}生日{and} 歌曲= ‘是’
                    ```
                feedback: 快到了
            -   option: |-
                    ```
                    {if} 生日=‘是’{and}名字=‘海蒂’
                    ```
                feedback: 如果你想听一首歌，海蒂只会为你歌唱
            -   option: |-
                    ```
                    {if}歌曲=‘是’ {and}生日= ‘是’
                    ```
                feedback: 超级棒！
            -   option: |-
                    ```
                    {if}歌曲=‘是’ {or}生日= ‘是’
                    ```
                feedback: 海蒂旨在两个答案都是 是 的时候唱歌
            hint: 海蒂只在你想听歌且是你生日那天的时候为你歌唱
            correct_answer: C
            question_score: '10'
        2:
            question_text: 在???的地方你遗漏掉了什么命令?
            code: |-
                菜单 = 'cheese', 'sausage rolls', 'cookies'
                节食 = {ask} 'Do you have any dietary restrictions?'
                {if} 节食 = 'vegan' ??? diet = 'halal'
                    {remove} 'sausage rolls' {from} 菜单
            mp_choice_options:
            -   option: '`{and}`'
                feedback: 你不必成为素食主义者或者穆斯林
            -   option: '`{or}`'
                feedback: 很好的想法!
            -   option: '`+`'
                feedback: 不
            -   option: '`{print}`'
                feedback: 不
            hint: 素食主义者和穆斯林都不能吃香肠卷。
            correct_answer: B
            question_score: '10'
        3:
            question_text: 哪个输出是给没有折扣码的成员?
            code: |-
                会员 = {ask} '您有会员卡吗?'
                折扣 = {ask} '您有折扣码吗?'
                {if} 会员 = '是' {or} 折扣 = '是'
                    {print} '您将得到一个免费的苹果派!'
                {else}
                    {print} '请支付5美元'
            mp_choice_options:
            -   option: 你得到一个免费的苹果派!
                feedback: 干得漂亮!
            -   option: 请支付5美元
                feedback: 这不是真的
            -   option: 代码没起作用，所以这里没有输出
                feedback: 代码没有错
            -   option: 这里没有办法知道
                feedback: 来! 仔细阅读这个问题
            hint: 注意第·3行的 `{or}` 命令
            correct_answer: A
            question_score: '10'
        4:
            question_text: 在石头剪刀布游戏中，哪一行代码应该紧随这一行?
            code: '{if} 电脑的选择 {is} ''石头'' {and} 你的选择 {is} ''布'''
            mp_choice_options:
            -   option: |-
                    ```
                    {print} '您获胜了'
                    ```
                feedback: 你赢了!
            -   option: |-
                    ```
                    {print} '你输了'
                    ```
                feedback: 你输了!
            -   option: |-
                    ```
                    {print} '平局'
                    ```
                feedback: 只有当两个选项相同时才算平局
            -   option: |-
                    ```
                    {print} '再试一次'
                    ```
                feedback: 再试一次！
            hint: 布包住石头
            correct_answer: A
            question_score: '10'
        5:
            question_text: 关于代码的说那，哪个是对的？
            code: |-
                {if} name = 'Cinderella' {and} shoe_size = 38
                    {print} '你是我的真爱!'
            mp_choice_options:
            -   option: 每个穿38号鞋的人都是王子的真爱
                feedback: 王子比这更挑剔一点!
            -   option: 每个叫灰姑娘的人都是王子的真爱
                feedback: 王子比这更挑剔一点!
            -   option: 每个叫灰姑娘，穿38号鞋的人都是王子的真爱
                feedback: 太棒了!
            -   option: 所有不叫灰姑娘，没有38号鞋的人都是王子的真爱
                feedback: 王子比这更挑剔一点!
            hint: 两个表述必须都为真
            question_score: '10'
            correct_answer: C
        6:
            question_text: 关于这段代码的哪个陈述是正确的?
            code: |-
                {print} '让我猜猜你是哪个家庭成员!'
                glasses = {ask} '你戴眼镜吗?'
                female = {ask} '你是女性吗?'
                {if} glasses = 'yes' {and} female = 'yes'
                    {print} '你一定是 Sophie!'
                {if} glasses = 'no' {and} female = 'yes'
                   {print} '你一定是 Marleen!'
                {if} glasses = 'yes' {and} female = 'no'
                    {print} 你一定是 Wouter!'
                {if} glasses = 'no' {and} female = 'no'
                    {print} '你一定是 Michael!'
            mp_choice_options:
            -   option: Michael是个戴眼镜的男孩
                feedback: 再试一次
            -   option: Marleen是个戴眼镜的女孩
                feedback: 再试一次
            -   option: Wouter是个不戴眼镜的男孩
                feedback: 再试一次
            -   option: Sophie是个戴眼镜的女孩
                feedback: 干得漂亮!
            hint: 好好看看!或者你需要眼镜?
            correct_answer: D
            question_score: '10'
        7:
            question_text: 哪个说法是错的?
            code: |-
                {print} '谢谢你帮我照看我的宠物'
                {print} '这有一个喂养它们的程序'
                动物 = {ask} '它们是那种动物?'
                颜色 = {ask} '它们的颜色是神峨眉?'
                {if} 动物 = '猫' {and} 颜色 = '灰色'
                    {print} '那是 Abby. 她吃3勺猫食'
                {if}  动物 = '猫' {and} 颜色 = '桔色'
                    {print} '那是 Milo. 他吃4勺猫食'
                {if} 动物 = '鸟' {or} 颜色 = '黑色'
                    {print} '我今天早上喂过它了! 它们今天不需要喂了'
                {if} 动物 = '仓鼠' {and} 颜色 = '棕色'
                    {print} '你可以唯它一片胡萝卜'
            mp_choice_options:
            -   option: 灰色的猫叫Abby
                feedback: 是这样的!
            -   option: 橘黄色的猫Milo吃4勺猫食
                feedback: 这是真的
            -   option: 黑色的仓鼠需要喂一片胡萝卜
                feedback: 干得漂亮!
            -   option: 黄色的鸟今早喂过了
                feedback: 这是真的
            hint: 仔细阅读最后4行
            correct_answer: C
            question_score: '10'
        8:
            question_text: 如果你点了爆米花但没有饮料，你会怎样?
            code: |-
                {print} '欢迎来到电影院'
                爆米花 = {ask} '你想来点爆米花嘛?'
                饮料 = {ask} '你想喝点什么吗?'
                {if} 爆米花 = '是' {and} 饮料 = '是'
                    {print} '请支付8美元'
                {if} 爆米花 = '不' {and} 饮料 = '是'
                   {print} '请支付3美元'
                {if} 爆米花 = '是' {and} 饮料 = '不'
                    {print} '请支付5美元'
                {if} 爆米花 = '不' {and} 饮料 = '不'
                    {print} '好的'
                {print} '好好享受电影吧'
            mp_choice_options:
            -   option: |-
                    欢迎来到电影院
                    一共是8美元
                    好好享受电影吧
                feedback: 你付的钱太多了!
            -   option: |-
                    欢迎来到电影院
                    一共5美元
                    好好欣赏电影吧
                feedback: 太棒了!
            -   option: |-
                    欢迎来到电影院
                    一共3美元
                    好好欣赏电影吧
                feedback: 钱不够支付!
            -   option: |-
                    欢迎来到电影院
                    好的
                    享受电影吧
                feedback: 你需要为你的爆米花付钱!
            hint: 爆米花 = 是 并且 饮料 = 不
            question_score: '10'
            correct_answer: B
        9:
            question_text: 这个代码哪里出问题了?
            code: |-
                1  chocolate = {ask} '你的冰淇淋上要不要撒巧克力酱?'
                2  sprinkles = {ask} '你要在冰淇淋上撒糖豆吗?'
                3  {if} chocolate {and} sprinkles = 'yes'
                4      {print} '加巧克力酱和糖豆的冰淇淋来啦!'
                5  {if} chocolate = 'yes' {and} sprinkles = 'no'
                6      {print} '加巧克力酱的冰淇淋来啦!'
                7  {if} chocolate = 'no' {and} sprinkles = 'yes'
                8      {print} '加糖豆的冰淇淋来啦'
                9  {if} chocolate = 'no' {and} sprinkles = 'no'
                10     {print} '普通冰激凌来啦!'
            mp_choice_options:
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: 正确!
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'no' {and} sprinkles = 'no'
                    ```
                feedback: 这不是我点的!
            -   option: |-
                    Line 5 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: 这不是我点的!
            -   option: |-
                    Line 7 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'no'
                    ```
                feedback: 这不是我点的!
            hint: 第3行有一个错误
            question_score: '10'
            correct_answer: A
        10:
            question_text: 哪个命令需要出现在第8行???的地方？
            code: "{print} '欢迎来到本超市的商品查找机'\n项目 = {ask} '你来找什么商品?'\n烘焙 = 'bread', 'buns', 'muffins'\n饮料= 'soda', 'water', 'lemonade'\n零食= 'chips', 'nuts', 'dips'\n冷冻= 'fries', 'icecream', 'pizza'\n水果= 'bananas', 'apples', 'oranges'\n{if} 项目 {in} 零食??? 项目 {in} 饮料\n    {print} '在第三通道'\n{if} 项目 {in} 烘焙 {or} 项目  {in} 烘焙 \n    {print} '这件东西放在商店的后面'\n{if} 项目  {in} 水果\n    {print} '水果在收银台附近出售'"
            mp_choice_options:
            -   option: '`{and}`'
                feedback: 没有同时出现在零食清单和饮料清单上的东西
            -   option: '`{or}`'
                feedback: 干的漂亮!
            -   option: '`{in}`'
                feedback: 不
            -   option: '`{if}`'
                feedback: 不
            hint: 这个东西要么在零食清单上，要么在饮料清单上
            correct_answer: B
            question_score: '10'
    14:
        1:
            question_text: 空白处应该用哪个符号?
            mp_choice_options:
            -   option: '`=>`'
                feedback: 这不是一个符号.
            -   option: '`==`'
                feedback: 我们没有比较任何东西，只是询问。
            -   option: '`!=`'
                feedback: 我们没有比较任何东西，只是询问
            -   option: '`=`'
                feedback: 对!
            hint: 我们没有比较任何东西，只是询问一个姓名。
            code: "name _ {ask} '你是谁?'\n{if} name == 'Hedy'\n    {print} '我也是!'"
            correct_answer: D
            question_score: '10'
        2:
            question_text: 下面哪个代码使用了正确的 = 或 == 符号?
            mp_choice_options:
            -   option: '{if} 名字 = Hedy'
                feedback: 不
            -   option: '{if} 年龄= 24'
                feedback: 不
            -   option: 答案= {ask} '你的答案是什么'
                feedback: 对!
            -   option: 答案 == {ask} '你做得怎么样?'
                feedback: 不
            hint: 当你比较两个回答时，你应该使用==
            question_score: '10'
            correct_answer: C
        3:
            question_text: 这两个空格上应该填哪些符号?
            mp_choice_options:
            -   option: '`>` 和 `<`'
                feedback: 不是的
            -   option: '`=` 和 `>=`'
                feedback: 不是的
            -   option: '`<` 和 `>=`'
                feedback: 你是对的
            -   option: '`+` and `==`'
            hint: 这个俱乐部可容纳130人
            feedback: 不是这样的
            correct_answer: C
            code: "guests = {ask} '派对有多少人来?'\n{if} guests _ 130\n    {print} '你可以进入!'\n{if} guests _ 130\n    {print} '不好意思,俱乐部已满. '\n    {print} '你必须等有人离开'"
            question_score: '10'
        4:
            question_text: 这段代码有什么问题?
            code: |-
                price = 10
                money = {ask} 你有多少钱?
                buy = {ask} '你想买这个泰迪熊吗?'
                {if} money >= price {and} buy == 'yes'
                    {print} '你能买这个小熊!'
                {else}
                    {print} '你能买不了这个小熊!'
            mp_choice_options:
            -   option: 在第1行 == 应该被替换为 =
                feedback: 不是这样的
            -   option: 第2行缺少引号
                feedback: 你做对了
            -   option: 在第4行 = 应该被替换为 ==
                feedback: 不是这样的
            -   option: 在第4行 <= 应该被替换为 >=
                feedback: 不是这样的
            hint: 符号是正确的
            correct_answer: B
            question_score: '10'
        5:
            code: |-
                age = {ask} '你多大了?'
                ticket = {ask} '你有票吗?'
                {if} age _ {and} ticket == 'yes'
                    {print} '你能进入影厅.'
                {else}
                    {print} '你不被允许进入!'
            mp_choice_options:
            -   option: '`> 12`'
                feedback: 12岁也是允许的
            -   option: '`>= 12`'
                feedback: 棒!
            -   option: '`< 12`'
                feedback: 这些孩子年龄太小!
            -   option: '`<= 12`'
                feedback: 这些孩子年龄太小
            hint: '> 意思是大于'
            question_score: '10'
            correct_answer: B
            question_text: 如果该电影适合 12 岁及以上的儿童观看，则应在空白处填写哪个符号?
        6:
            question_text: 在这个烦人的游戏停止之前，你要说多少次你很烦?
            code: |-
                lives = 2
                {repeat} 10{times}
                    {if} lives != 0
                        answer = {ask} '你厌烦了吗?'
                    {if} answer == 'yes'
                        lives = lives - 1
            mp_choice_options:
            -   option: 10 次
                feedback: 它会在2次后停止
            -   option: 0次
                feedback: 它会在 2 次后停止
            -   option: 1 次
                feedback: 它会在 2 次后停止
            -   option: 2 次
                feedback: 对了
            hint: '!= 意思是 ''不等于'''
            question_score: '10'
            correct_answer: D
        7:
            question_text: 这三个空格应该填什么?
            mp_choice_options:
            -   option: '`''Lower''` 和 `''Higher''` 和 `''You win!''`'
                feedback: 这不太正确。
            -   option: '`''Higher''` 和 `''Lower''` 和 `''You win!''`'
                feedback: 你赢了!
            -   option: '`''You win!''` 和 `''Lower!''` 和 `''Higher''`'
                feedback: 这不太正确。
            -   option: '`''Lower!''` 和 `''You win!''` 和 `''Higher!''`'
                feedback: 这不太对。
            hint: 最后应该说你赢了。
            question_score: '10'
            correct_answer: B
            code: "{print} '猜数字'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} '你正在想哪个数字?'\n        {if} guess < number\n            {print} _\n        {if} guess > number\n            {print} _\n        {if} guess == number\n            {print} _\n            game = 'over'"
        8:
            question_text: 关于过山车，哪个说法是正确的?
            mp_choice_options:
            -   option: 你必须身高超过120厘米才能坐过山车
                feedback: True!
            -   option: 你必须身高超过119厘米才能坐过山车
                feedback: 如果你身高120厘米，你进不去
            -   option: You must be shorter than 120 cm to go on the roller coaster
                feedback: '> means greater than'
            -   option: 坐过山车没有长度限制
                feedback: 这儿。
            hint: '> 表示大于'
            code: "length = {ask} '请用cm填写你的身高'\n{if} length < 120\n    {print} '抱歉,你不能坐这个过山车.'\n{else}\n    {print} '享受这次探险'"
            correct_answer: A
            question_score: '10'
        9:
            question_text: 根据这个手环，吃多少块巧克力会让你胃痛?
            code: |-
                chocolate = {ask} '你吃了几块巧克力?'
                  {if} chocolate <= 2
                      {print} '这是健康的数量'
                  {if} chocolate > 2 {and} chocolate =< 8
                      {print} '这有点多'
                  {if} chocolate > 8
                      {print} '你会得胃病!'
            mp_choice_options:
            -   option: 1或更多
                feedback: 不
            -   option: 2或更多
                feedback: 不
            -   option: 8或更多
                feedback: 几乎
            -   option: 9或更多
                feedback: 棒!
            hint: '> 8 意味着大于8'
            correct_answer: D
            question_score: '10'
        10:
            question_text: 空格里应该填什么?
            mp_choice_options:
            -   option: '''玩家1获胜'''
                feedback: 看看谁得了最高分!
            -   option: '''玩家2获胜'''
                feedback: 对!
            -   option: '''玩家2失败'''
                feedback: 看看谁得了最高分!
            -   option: '''这是个平局'''
                feedback: 不，不是的，一个玩家的分数更高
            hint: 你得最多的分数就能赢得比赛
            code: "{print} '得分高的人获胜!'\n{if} points_player_1 < points_player_2\n    {print} _"
            correct_answer: B
            question_score: '10'
    15:
        1:
            question_text: 空格上应该用哪个符号?提示:你必须一直猜，直到猜对为止。
            code: |-
                answer = 0
                {while} answer _ 'Amsterdam'
                    answer = {ask} '荷兰的首都是哪里?'
                {print} '你给出了正确的答案'
            mp_choice_options:
            -   option: '`=!`'
                feedback: 这不对.
            -   option: '`==`'
                feedback: 你不必一直猜测你是否给出了正确的答案。
            -   option: '`!=`'
                feedback: 正确
            -   option: '`=`'
                feedback: 不是这样的
            hint: 继续猜，直到你说阿姆斯特丹
            question_score: '10'
            correct_answer: C
        2:
            question_text: 这些代码中哪一个使用了正确的符号?
            mp_choice_options:
            -   option: |-
                    ```
                    {while} name = Hedy
                    ```
                feedback: 不
            -   option: |-
                    ```
                    {while} age = 24
                    ```
                feedback: 不
            -   option: |-
                    ```
                    {while} time > 0
                    ```
                feedback: 对!
            -   option: |-
                    ```
                    {while} answer == yes'
                    ```
                feedback: 缺少一个引号
            hint: 当你比较两个答案时，你应该使用==
            question_score: '10'
            correct_answer: C
        3:
            question_text: 这两个空白处应该填哪个命令?
            code: |-
                _ age < 18
                  {print} '你不被允许进酒吧'
            mp_choice_options:
            -   option: '`{in}`'
                feedback: 不是这样的
            -   option: '`{while}`'
                feedback: 你是正确的
            -   option: '`{for}`'
                feedback: 不是这样的
            -   option: '`{range}`'
                feedback: 不是这样的
            hint: 只要你不满17岁，你就不能进酒吧
            correct_answer: B
            question_score: '10'
        4:
            question_text: 这段代码有什么问题?
            code: |-
                options = 1, 2, 3, 4, 5, 6
                {print} '尽可能掷6!'
                thrown = 0
                tries = 0
                {while} thrown == 6
                    thrown = options {at}{random}
                    {print} '你掷了 ' thrown
                    tries = tries + 1
                {print} '你掷出6点用了' tries ' 次.'
            mp_choice_options:
            -   option: 在第 1 行中，应使用`==`而不是`=`
                feedback: 不是这样的
            -   option: 第二行缺少引号
                feedback: 这是不对的
            -   option: 在第5行应该使用`{if}`而不是`{while}`
                feedback: 不是这样的
            -   option: 在第5行中应该使用`==`而不是`!=`
                feedback: 你是正确的
            hint: 第5行有问题
            question_score: '10'
            correct_answer: D
        5:
            question_text: 什么应该放在空白处，使这个程序正确工作?
            code: |-
                wetness = 10
                {while} wetness != 0
                    {print} '你的头发还是湿的，吹风机打开!'
                    {sleep} 1
                    {clear}
                    wetness _

                {print} '全干了!'
            mp_choice_options:
            -   option: |-
                    ```
                        = 湿润
                    ```
                feedback: 这不会改变任何事情
            -   option: |-
                    ```
                        = 湿润 = 1
                    ```
                feedback: 一行中不能有两次 = 出现
            -   option: |-
                    ```
                        = 湿润 - 1
                    ```
                feedback: 你是正确的!
            -   option: |-
                    ```
                        = 湿润 + 1
                    ```
                feedback: 程序将开始倒计时
            hint: 每次湿润应该少一些
            question_score: '10'
            correct_answer: C
        6:
            question_text: 这段代码有什么问题?
            code: |-
                lives = 100
                    {while} lives != 0
                    answer = {ask} 'Are you annoyed yet?'
                {if} answer == 'yes'
                    lives = lives - 1
            mp_choice_options:
            -   option: '`{while}` 应该是 `{if}`'
                feedback: 这不正确
            -   option: '`{if}` 应该是 `{while}`'
                feedback: 这不正确
            -   option: 第3行应该以更多的缩进开始
                feedback: 这不正确
            -   option: 第2行应该以较少的缩进开始
                feedback: 这是正确的
            hint: 仔细察看这些缩进
            correct_answer: D
            question_score: '10'
        7:
            question_text: 这个程序应该如何改变才能正常工作?
            mp_choice_options:
            -   option: '... 将第一个 `{if}` 换成 `{while}`'
                feedback: 完美!
            -   option: '... 将第2个 `{if}` 换成 `{while}`'
                feedback: 这不是很正确.
            -   option: '... 将第三个 `{if}` 换成 `{while}`'
                feedback: 这不是很正确。
            -   option: '... 将第4个 `{if}` 换成 `{while}`'
                feedback: 这不是很正确。
            hint: 最后的时候应该说你赢了。
            correct_answer: A
            question_score: '10'
            code: "{print} '猜数字'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{if} game == 'on'\n    guess = {ask} '你在想哪个数字?'\n    {if} guess < number\n        {print} _\n    {if} guess > number\n        {print} _\n    {if} guess == number\n        {print} _\n        game = 'over'"
        8:
            question_text: 关于这个自动厕所系统，哪个说法是正确的?
            mp_choice_options:
            -   option: 灯和空气清新器将在1分钟后关闭
                feedback: 假的!
            -   option: 空气清新剂每分钟喷一次，灯在你上厕所的时候一直亮着
                feedback: 干得漂亮
            -   option: 你一离开厕所，空气清新剂就会喷洒出来。
                feedback: 只有在你进去的时候才会喷。
            -   option: 灯会一直亮着。
                feedback: 这是不对的。
            hint: 当厕所被占用时，{while}命令之后的块继续运行。
            question_score: '10'
            code: "{while} toilet == '有人'\n    lights = 'on'\n    air_freshener_sprays = 'yes'\n    {sleep} 60\nlights = 'off'\nair_freshener_sprays = 'no'"
            correct_answer: B
        9:
            question_text: 如果你今天摄入了1600卡路里，节食应用程序会怎么说?
            code: |-
                chocolate = {ask} '你今天摄入了多少卡路里?'
                  {while} calories <= 1000
                      {print} '你可以吃更多'
                  {while} calories > 1000 {and} calories =< 2000
                      {print} '这还好'
                  {while} calories > 2000
                      {print} '你今天已经够多了'
            mp_choice_options:
            -   option: 什么都不会发生。APP里没有输入1600。
                feedback: 不
            -   option: 你可以吃更多
                feedback: 不
            -   option: 没关系
                feedback: 是的!
            -   option: 你今天吃得够多了
                feedback: 不
            hint: 1600在1000和2000之间
            question_score: '10'
            correct_answer: C
        10:
            question_text: 空格里应该填什么?提示:得分最多的玩家处于领先地位。
            mp_choice_options:
            -   option: |-
                    ```
                       name_player_1
                    ```
                feedback: 你是对的!
            -   option: |-
                    ```
                       name_player_2
                    ```
                feedback: 他们输了!
            -   option: |-
                    ```
                       points_player_1
                    ```
                feedback: 你应该填写名字，而不是数字
            -   option: |-
                    ```
                       points_player_2
                    ```
                feedback: 你应该填写名字，而不是数字
            hint: 你得最多的分数就能赢得比赛。你的名字应该出现在屏幕上
            code: "name_player_1 = {ask} '命名玩家 1'\nname_player_2 = {ask} '命名玩家 2'\n{while} points_player_1 > points_player_2\n    {print} _ '正处于领先地位!'"
            question_score: '10'
            correct_answer: A
    16:
        1:
            question_text: 在打印随机零食的空白处应该填写哪个命令?
            code: |-
                零食 = nachos, chips, cucumber, sweets
                {print} _
            mp_choice_options:
            -   option: '`snacks {at} {random}`'
                feedback: 这是老办法。
            -   option: '`[{random} snack]`'
                feedback: 顺序错了.
            -   option: '`snacks[{random}]`'
                feedback: 正确
            -   option: '`snacks[{at} {random}]`'
                feedback: 我们不再需要 `at`
            hint: 我们不再使用 {at}
            question_score: '10'
            correct_answer: C
        2:
            question_text: 如果你想列一个列表，哪些家务，是由谁做的，你应该在空白处填什么?
            mp_choice_options:
            -   option: |-
                    ```
                    朋友[i] 需要做 家务[i]
                    ```
                feedback: 注意间距。
            -   option: |-
                    ```
                    朋友[1] 需要做 家务[1]
                    ```
                feedback: 它会打印3次韦斯利要做饭
            -   option: |-
                    ```
                    家务[i] '要被做 ' 朋友[random]
                    ```
                feedback: 这个人必须做家务，而不是相反
            -   option: |-
                    ```
                    朋友[i] ' 需要做' 家务[i]
                    ```
                feedback: 太棒了!
            hint: '`i`告诉我们是列表中的哪一项。所以有朋友1做家务1等等。'
            question_score: '10'
            correct_answer: D
            code: "friends = ['Wesley', 'Eric', 'Kaylee']\nchores = ['the cooking', 'the cleaning', 'nothing']\n{for} i {in} {range} 1 {to} 3\n    {print}  _"
        3:
            question_text: 这个程序可能的输出是什么?
            mp_choice_options:
            -   option: |-
                    ```
                    Wesley得做饭
                    Eric必须打扫卫生
                    Kaylee什么都不用做
                    ```
                feedback: 超级棒!
            -   option: |-
                    ```
                    Kaylee必须做饭
                    Wesley必须打扫卫生
                    Eric什么都不用做
                    ```
                feedback: 不，这不是随机.
            -   option: |-
                    ```
                    Wesley得做饭
                    Wesley必须打扫卫生
                    Wesley什么都不做
                    ```
                feedback: 可怜的Wesley!
            -   option: |-
                    ```
                    韦斯利得做饭
                    韦斯利得做饭
                    韦斯利得做饭
                    ```
                feedback: 不是这样的
            hint: 这不是随机的...
            correct_answer: A
            question_score: '10'
            code: "friends = ['Wesley', 'Eric', 'Kaylee']\nchore = ['the cooking', 'the cleaning', 'nothing']\n{for} i {in} {range} 1 {to} 3\n    {print}  friends[i] 要作家务[i]"
        4:
            question_text: 这段代码有什么问题?
            code: |-
                朋友们 = ['Jaylee', 'Erin', 'Fay']
                幸运数字 = [15, 18, 6]
                {for} i {in} {range} 0 {to} 3
                    print '幸运数字' 朋友们[i]
                    print '是' 幸运数字[i]
            mp_choice_options:
            -   option: 第4行中的变量应该是 `friend[i]`，而不是`friends[i]`
                feedback: 这是不对的.
            -   option: 第3行应该是`in range 1 to 3` 而不是 `in range 0 to 3`
                feedback: 答得好!
            -   option: 第4行应该是 '幸运数字', 而不是 '幸运数字
                feedback: 它不是变量，只是文本。
            -   option: 第3行的 {in} 应该去掉
                feedback: 不是这样的
            hint: 第4行没有问题
            correct_answer: B
            question_score: '10'
        5:
            question_text: 空格里应该填哪一行?
            code: |-
                动物们 = ['dog', 'cow', 'horse']
                _
                {for} i {in} {range} 1 {to} 3
                    {print} '这 ' 动物们[i] ' 叫 ' 声音[i]
            mp_choice_options:
            -   option: |-
                    ```
                       noises = ['moo', 'woof', 'neigh']
                    ```
                feedback: 注意变量名和叫声顺序。
            -   option: |-
                    ```
                       sounds = '[woof], [moo], [neigh]'
                    ```
                feedback: 看看第一行，好知道应该如何使用括号。
            -   option: |-
                    ```
                       sounds = [woof, moo, neigh]
                    ```
                feedback: 别忘了引号!
            -   option: |-
                    ```
                       sounds = ['woof', 'moo', 'neigh']
                    ```
                feedback: 干得漂亮!
            hint: 查看第1行，了解括号和引号的正确使用。
            question_score: '10'
            correct_answer: D
        6:
            question_text: 哪个说法是正确的?
            code: |-
                人 = ['Chris', 'Jaylino', 'Ryan']
                游戏 = ['fortnite', 'minecraft', 'fifa']
                {for} o {in} {range} 1 {to} 3
                  {print} 人[o] '喜欢' 游戏[o]
            mp_choice_options:
            -   option: 不允许使用变量o，它应该被命名为i。
                feedback: 在这种情况下，i是最常用的变量名，但不是必须使用i。
            -   option: 输出将显示Jaylino喜欢fortnite。
                feedback: 不，他喜欢《我的世界》。
            -   option: 输出将显示Ryan喜欢fifa
                feedback: 正确
            -   option: 这段代码不能工作。它会报错。
                feedback: 代码是正确的。
            hint: 代码没有错误。
            correct_answer: C
            question_score: '10'
        7:
            question_text: 这段代码有什么问题？
            code: |-
                人 = ['Savi', 'Senna', 'Fayenne']
                交通方式 = ['bike', 'train', 'car']
                {for} i {in} {range} 1 {to} 3
                  {print} 人[i] 去上学通过 交通工具[i]
            mp_choice_options:
            -   option: 第1行需要减少引号
                feedback: 这不对.
            -   option: 第3行应该以缩进开始
                feedback: 不应该!
            -   option: 第4行开始时应该没有缩进
                feedback: 它不应该
            -   option: 第4行需要更多的引号。
                feedback: 太棒了!
            hint: 在使用引号时犯了一个错误。
            correct_answer: D
            question_score: '10'
        8:
            question_text: 哪些代码属于这个输出?
            code: |-
                Macy 和 Kate排第一
                Lionell 和 Raj排第二
                Kim 和 Leroy得第三名
            mp_choice_options:
            -   option: |-
                    ```
                    队伍 = ['Macy and Kate', 'Lionell and Raj', 'Kim and Leroy']
                    位置 = ['第一', '第二', '第三']
                    {for} i {in} {range} 0 {to} 3
                    {print} 队伍[random] ' 排名 ' 位置[i]
                    ```
                feedback: 这不正确
            -   option: |-
                    ```
                    队伍 = ['Macy and Kate', 'Lionell and Raj', 'Kim and Leroy']
                    位置 = ['第一', '第二', '第三']
                    {for} i {in} {range} 1 {to} 3
                      {print} 队伍[i] '排在 ' 位置[i]
                    ```
                feedback: 棒极了!
            -   option: |-
                    ```
                    队伍 = ['Macy', 'Kate', 'Lionell', 'Raj', 'Kim', 'Leroy']
                    位置 = ['第一', '第二', '第三']
                    {for} i {in} {range} 1 {to} 6
                      {print} 队伍[random] ' 排名 ' 位置[random]
                    ```
                feedback: 不是这样的。
            -   option: |-
                    ```
                    队伍 = ['Macy and Kate' 'Lionell and Raj' 'Kim and Leroy']
                    位置 = ['第一' '第二' '第三']
                    {for} 队伍 {in} {range} 0 {to} 3
                        {print} 队伍[i] ' 排名 ' 位置[i]
                    ```
                feedback: 这无法工作!
            hint: 如果你仔细看第一行，你会发现只有前两个答案可能是正确的。
            correct_answer: B
            question_score: '10'
        9:
            question_text: 这段代码的可能输出是什么?
            code: |-
                国家 = ['Canada', 'Zimbabwe', 'New Zealand']
                {for} i {in} {range} 0 {to} 1
                  {print} 我将到' 国家[random] '旅游'
            mp_choice_options:
            -   option: |-
                    ```
                    我将旅游去 Canada
                    我将旅游去Canada
                    ```
                feedback: 干得漂亮!
            -   option: |-
                    ```
                    我将旅游去 Canada
                    ```
                feedback: 它将重复2遍
            -   option: |-
                    ```
                    我将旅游去 Canada, Zimbabwe 和 New Zealand
                    ```
                feedback: 不是这样的。
            -   option: |-
                    ```
                    我将旅游去 Canada
                    我将旅游去 Zimbabwe
                    我将旅游去 New Zealand
                    ```
                feedback: 它仅仅重复2次
            hint: Range 0 to 1 是2次
            correct_answer: A
            question_score: '10'
        10:
            question_text: 哪3行可以正确地完成这段代码?
            code: |-
                {print} '读书抽奖活动马上就要开始'
                {print} '拿好你的奖券!'
                books = ['Narnia', 'The Hobbit', 'Oliver Twist', 'Harry Potter', 'Green eggs and ham']
                人数 = {ask} '多少奖券售出了?'
                数字列表 = [1, 2]
                {for} i {in} {range} 3 {to} 人数
                    {add} i {to} 数字列表
                {for} i {in} {range} 1 {to} 5
            mp_choice_options:
            -   option: |-
                    ```
                    选择的数字 = 数字列表 at random
                    print 书[i] ' 将送给读者 ' 选择的数字
                    {add} 选择的数字 {to} 数字列表
                    ```
                feedback: 差不多了…但把赢家加入名单会让抽奖变得不公平
            -   option: |-
                    ```
                    print 人数[i] ' 赢得 ' 书[i]
                    ```
                feedback: 没有叫 '人数' 的列表
            -   option: |-
                    ```
                    选择的数字 = 数字列表[人数]
                    print 书[人数] '将送给编号' 选择的数字
                    {remove} 选择的数字 {from} 数字列表
                    ```
                feedback: 不是这样的。
            -   option: |-
                    ```
                    选择的数字 = 数字列表[random]
                    print 书[i] ' 将送给 ' 选择的数字
                    {remove} 选择的数字 {from} 数字列表
                    ```
                feedback: 太妙了!
            hint: 你需要使用 {remove} 命令
            correct_answer: D
            question_score: '10'
    17:
        1:
            question_text: 这段代码的输出是什么?
            code: |-
                小黄人 = ['Bob', 'Kevin', 'Stuart']
                {for} x in 小黄人:
                    {print} x
            mp_choice_options:
            -   option: |-
                    ```
                    小黄人
                    ```
                feedback: 不是这样的。
            -   option: |-
                    ```
                    Bob
                    Kevin
                    Stuart
                    ```
                feedback: 正确!
            -   option: |-
                    ```
                    小黄人
                    小黄人
                    小黄人
                    ```
                feedback: 看看你清单上的内容。
            -   option: |-
                    ```
                    B o b K e v i n S t u a r t
                    ```
                feedback: 不要让字母循环。
            hint: 循环你的列表.
            question_score: '10'
            correct_answer: B
        2:
            question_text: 这段代码有什么问题?
            mp_choice_options:
            -   option: 你不能有这么多变量.
                feedback: 不是这样的。
            -   option: 变量相乘的方法不正确。
                feedback: 不是真的!
            -   option: 其中的一个变量 `noleap_year` 不属于 `{if}` 语句。
                feedback: 继续查找错误。
            -   option: '`noleap_year`在两种情况下必须相同。'
                feedback: 对!
            hint: 仔细阅读代码。
            question_score: '10'
            code: "seconds_minute = 60\nminute_hour = 60\nhour_day = 24\nleap_year = 366\nno_leap_year = 365\nyears = ask 'what year is it?'\n{if} years = 2024:\n print seconds_minute * minute_hour * hour_day * leap_year\n{else}:\n print seconds_minute * minute_hour * hour_day * noleap_year"
            correct_answer: D
        3:
            question_text: 这段代码将打印多少只刺猬?
            mp_choice_options:
            -   option: |-
                    ```
                    🦔
                    🦔
                    🦔
                    ```
                feedback: 再试一次.
            -   option: |-
                    ```
                    🦔
                    🦔
                    ```
                feedback: 再试一次.
            -   option: |-
                    ```
                    🦔
                    🦔
                    🦔
                    🦔
                    🦔
                    🦔
                    ```
                feedback: 干得漂亮!
            -   option: |-
                    ```
                    🦔
                    🦔
                    🦔
                    🦔
                    🦔
                    ```
                feedback: 不是这样的。
            hint: 想想你需要重复多少次。
            correct_answer: C
            code: "{for} x in range 1 to 3:\n  {for} y in range 1 to 2:\n    {print} 🦔"
            question_score: '10'
        4:
            question_text: 这段代码有什么问题?
            code: |-
                name_color = {ask} '什么颜色你最喜欢?'
                {if} name_color == 'red':
                  {print} 'the color of a tomato'
                {elif} name_color == 'green':
                  {print} 'the color of an apple'
                {elif} name_color == 'blue':
                  {print} 'the color of a blueberry'
                {elif} name_color == 'yellow':
                  {print} 'the color of a banana'
                {elif}:
                  {print} '不存在这样的水果颜色'
            mp_choice_options:
            -   option: 第一个`{elif}`应该在`print`命令之前使用
                feedback: 再试一次.
            -   option: '`{elif}`只能使用一次'
                feedback: 从现在起我们能够多次使用elif。
            -   option: '`==` 和 `{elif}` 一起使用时，应该替换为 `=`'
                feedback: 不正确.
            -   option: 在最后一行的`{elif}` 应该被替换为 `{else}`
                feedback: 棒!
            hint: 想想 `{if}`, `{elif}`, `{else}`.
            correct_answer: D
            question_score: '10'
        5:
            question_text: 这段代码的输出是什么?
            code: |-
                数字列表 = [7, 19, 29, 41, 53, 71, 79, 97]
                {for} 质数 in 数字列表:
                  {if} 质数 <= 10：
                    {print} 质数
                  {elif} 质数 >= 60:
                    {print} 质数
                  {elif} 质数 >= 90:
                    {print} 质数
                  {else}:
                    {print} '别的数字'
            mp_choice_options:
            -   option: |-
                    ```
                    7
                    别的数字
                    别的数字
                    别的数字
                    别的数字
                    71
                    79
                    97
                    ```
                feedback: 干得好!
            -   option: |-
                    ```
                    别的数字
                    19
                    29
                    41
                    53
                    71
                    79
                    97
                    ```
                feedback: 再试一次.
            -   option: |-
                    ```
                    7
                    19
                    29
                    41
                    53
                    71
                    79
                    别的数字
                    ```
                feedback: 再试一次.
            -   option: |-
                    ```
                    7
                    19
                    29
                    41
                    53
                    71
                    79
                    97
                    ```
                feedback: 不是这样的。
            hint: 考虑你需要重复多少次，以及if和elif的值。
            correct_answer: A
            question_score: '10'
        6:
            question_text: 这段代码有什么问题?
            code: |-
                name = {ask} '你的名字是什么?'
                {if} name == 'Hedy':
                    password = {ask} '你的密码是什么?'
                    {if} password =='turtle123':
                        {print} '耶'
                    {else}:
                        {print} '访问拒绝'
                {else}:
                 {print} '去钓鱼'
            mp_choice_options:
            -   option: '`{elif}` 缺失.'
                feedback: 再试试.
            -   option: '`{else}` 只能被使用1次.'
                feedback: 从现在起我们能多次使用elif.
            -   option: 没有东西!
                feedback: 有一个错误。仔细看!
            -   option: 最后一行有一个缩进错误。
                feedback: 了不起!
            hint: 这里有个错误……
            question_score: '10'
            correct_answer: D
        7:
            question_text: 下面哪个代码会在屏幕上打印五次“结果是3”?
            mp_choice_options:
            -   option: |-
                    ```
                     numbers = [1, 2 , 3, 4, 5]
                     {for} n in numbers：
                         result = n * 1
                     {print} '结果是 ' result
                    ```
                feedback: 再试试!
            -   option: |-
                    ```
                    numbers = [1, 2, 3, 4, 5]
                     {for} u in numbers：
                         number = u
                     {print} '结果是 ' number
                    ```
                feedback: 不是这样的。
            -   option: |-
                    ```
                    numbers = [1, 2, 3, 4, 5]
                     {for} number in numbers：
                         number = 3
                     {print} '结果是 ' number
                    ```
                feedback: 很棒!
            -   option: |-
                    ```
                    numbers = [1, 2 , 3, 4, 5]
                     {for} n in numbers：
                         n = result
                     {print} '结果是 ' result
                    ```
                feedback: 不是这样的。
            hint: 想想数学符号。
            correct_answer: C
            question_score: '10'
        8:
            question_text: 代码有什么问题?
            code: |-
                insects = ['🐝', '🦋', '🕷', '🐞']
                your_favorite = {ask} '你最喜欢的昆虫是什么?'
                {for} insect in insects:
                 {if} your_favorite == '🐝' {or} your_favorite == '🐞':
                  {print} '非常有益'
                 {elif} your_favorite == '🕷':
                  {print} '它能吃掉更多文字'
                 {else}:
                  {print} '几乎每种昆虫都或多或少是有益的'
            mp_choice_options:
            -   option: '`{or}` 不能和 `{if}`一起用。'
                feedback: 再试试.
            -   option: 在 `{for}` 命令里， `insect` 应该是 `insects`.
                feedback: 不对.
            -   option: 什么也没有!
                feedback: 干得漂亮!
            -   option: 最后一行有一个缩进错误。
                feedback: 不.
            hint: 仔细阅读代码.
            correct_answer: C
            question_score: '10'
        9:
            question_text: 下面哪个代码给出了这个输出?
            code: |-
                -5 是负数
                -4 是负数
                -3 是负数
                -2 是负数
                -1 是负数
                0 是正数
                1 是正数
                2 是正数
                3 是正数
            mp_choice_options:
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number > 0: \n      {print} number ' 是正数'\n     {elif} number < 0: \n      {print} number ' 是负数' \n    {else}: \n     {print} number '是0'\n```"
                feedback: 再试试!
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number > 0: \n      {print} number '是正数'\n     {elif} number <= 0: \n     {print} number ' 是负数' \n    {else}: \n     {print} number '是0'\n```"
                feedback: 不是这样的。
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number >= 0: \n     {print} number '是正数'\n     {elif} number < 0: \n     {print} number '是负数' \n     {else}: \n     {print} number '是0'\n```"
                feedback: 非常好!
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number < 0: \n      {print} number ' 是正数'\n     {elif} number <=0: \n     {print} number ' 是负数' \n     {else}: \n     {print} number ' 是0'\n```"
                feedback: 不是这样的。
            hint: 仔细阅读代码。
            correct_answer: C
            question_score: '10'
        10:
            question_text: 这段代码有什么问题?
            code: |-
                {for} number in range 1 to 5:
                  volume_room = num * num * num
                  {print} volume_room ' 立方米'
                    {if} volume_room > 100:
                      {print} '这是一个大房间'
                    {elif} volume_room < 100:
                      {print} '房间小但舒适'
                    {else}:
                      {print} '我会找点别的东西'
            mp_choice_options:
            -   option: 单词num需要加引号。
                feedback: 再试试.
            -   option: '`{if}` 没有正确地使用.'
                feedback: 不对.
            -   option: 第3行应该是 `volume_room = number * number * number`.
                feedback: 干得漂亮!
            -   option: 最后一行有一个缩进错误。
                feedback: 不.
            hint: 仔细阅读代码.
            question_score: '10'
            correct_answer: C
