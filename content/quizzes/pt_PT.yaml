levels:
    1:
        1:
            question_text: Como se chama esta linguagem de programação ?
            mp_choice_options:
            -   option: Hedy
                feedback: Bom trabalho!
            -   option: Heddy
                feedback: Não é bem esta!
            -   option: Haydie
                feedback: Não é esta!
            -   option: Heidi
                feedback: Não é esta!
            hint: Chama-se assim em homenagem a Hedy Lamarr.
        2:
            question_text: O que tem que ser preenchido nos espaços em branco para fazer aparecer o texto Olá! ?
            code: _ Olá!
            mp_choice_options:
            -   option: |-
                    `{echo}`
                feedback: '`{echo}` repete uma resposta que foi dada antes.'
            -   option: |-
                    `{print}`
                feedback: Correcto!
            -   option: |-
                    `hello`
                feedback: Olá não é um comando.
            -   option: |-
                    `{ask}`
                feedback: Com `{ask}`, podes fazer uma pergunta.
            hint: _ Olá mundo!
        3:
            question_text: Como é que perguntas a alguém qual é a sua cor favorita?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Qual é a tua cor favorita?
                    ```
                feedback: '`{print}` imprime texto, mas não faz perguntas.'
            -   option: |-
                    ```
                    {ask} {print} Qual é a tua cor favorita?
                    ```
                feedback: Só precisas de um comando, não de dois.
            -   option: |-
                    ```
                    {ask} Qual é a tua cor favorita?
                    ```
                feedback: Fantástico!
            -   option: |-
                    ```
                    {echo} Qual é a tua cor favorita?
                    ```
                feedback: '`{echo}` repete a tua resposta de volta para ti.'
            hint: Podes perguntar alguma coisa com o comando `{ask}`
        4:
            question_text: O que é que está errado neste código?
            code: |-
                Olá, eu sou o Hedy!
                {ask} Quem és tu?
                {echo} Olá...
            mp_choice_options:
            -   option: Falta o `{print}` na linha 1.
                feedback: Correcto!
            -   option: O comando na linha 2 está incorrectamente escrito.
                feedback: O comando está incorrectamente escrito.
            -   option: '`{echo}` não é um comando.'
                feedback: '`{echo}` é um comando, há um outro erro.'
            -   option: Nada! Este é um código perfeito!
                feedback: Errado, olha com atenção!
            hint: A linha 1 não parece correcta
        5:
            question_text: Que comando falta na linha 2?
            code: |-
                {ask} Qual é o teu animal de estimação favorito?
                _ Então o teu animal de estimação favorito é...
            mp_choice_options:
            -   option: |-
                    `{print}`
                feedback: Não, tu gostavas que a resposta fosse repetida de volta para ti.
            -   option: |-
                    `Hedy`
                feedback: Hedy não é um comando.
            -   option: |-
                    `{ask}`
                feedback: Com `{ask}`  podes fazer uma pergunta.
            -   option: |-
                    `{echo}`
                feedback: Na mira!
            hint: Queres ver a resposta no final da linha 2...
        6:
            question_text: O que está errado com este código?
            code: |-
                {print} Olá eu sou o Hedy!
                {print} Por qual equipa de futebol tu torces?
                {echo} Tu apoias...
                {print} Altamente! Eu também!
            mp_choice_options:
            -   option: Na linha 1 `{print}` deve ser substituido por `{ask}`.
                feedback: '`{print}` na linha 1 está correto.'
            -   option: Na linha 2, `{print}` deve ser substituído por `{ask}`.
                feedback: Excelente! Estiveste atento!
            -   option: A linha 3 deve começar com `{print}` em vez de `{echo}`.
                feedback: '`{echo}` está correto.'
            -   option: Na linha 4, `{print}` está escrito incorrectamente.
                feedback: Não, há um erro noutro lugar
            hint: Verifica os comandos de `{print}`.
        7:
            question_text: O que está errado com este código?
            code: |-
                {print} Bem-vindo ao restaurante Hedys!
                {ask} O que gostarias de comer?
                {echo} Então queres pedir...
                {print} Vai já sair! Bom proveito!
            mp_choice_options:
            -   option: Na linha 1 `{print}` precisa de ser substituído por `{ask}`
                feedback: Tens a certeza de que algo está errado?
            -   option: Na linha 1 `{print}` precisa de ser substituído por `{echo}`
                feedback: Tens a certeza de que algo está errado?
            -   option: Na linha 3 `{echo}` precisa de ser substituído por `{print}`
                feedback: Tens a certeza de que algo está errado?
            -   option: Nada! Este código é perfeito!
                feedback: Correcto!
            hint: Verifica o código linha por linha
        8:
            question_text: Como se usa o comando `{echo}`?
            mp_choice_options:
            -   option: Podes usá-lo para `{ask}` uma pergunta.
                feedback: É para isso que serve `{ask}`!
            -   option: Podes usá-lo exactamente da mesma forma que `{print}`.
                feedback: É para isso que serve `{print}`!
            -   option: Podes usá-lo para repetir uma resposta.
                feedback: Bom trabalho!
            -   option: Podes usá-lo para fazer o texto desaparecer.
                feedback: Isso não está certo...
            hint: '`{echo}` é usado depois do comando `{ask}` .'
        9:
            question_text: O que está errado com este código?
            code: |-
                {print} Olá!
                {print} Como estás?
                {echo} Então estás a fazer...
            mp_choice_options:
            -   option: '`{print}` na linha 1 deveria ser `{ask}`'
                feedback: Não, `{print}` está certo. Onde é que se está a fazer a pergunta?
            -   option: '`{print}` na linha 2 deveria ser `{ask}`'
                feedback: Incrível!
            -   option: '`{echo}` na linha 3 deveria ser `{ask}`'
                feedback: Não, `{echo}` está certo. Onde é que se está a fazer a pergunta?
            -   option: Nada. Este é um código perfeito!
                feedback: Olha atentamente para o erro...
            hint: '`{ask}` permite que faças uma pergunta'
        10:
            question_text: Qual será o output no teu ecrã de output depois de correr o código?
            code: |-
                {ask} Estás preparado para o nível 2?
                {echo}
                {echo}
            mp_choice_options:
            -   option: Estás preparado para o nível 2?
                feedback: Há dois comandos `{echo}`
            -   option: |-
                    Sim!
                    Sim!
                feedback: Bom trabalho!
            -   option: Sim!
                feedback: Há dois comandos `{echo}`
            -   option: |-
                    Estás preparado(a) para o nível 2?
                    Sim!
                feedback: Há dois comandos `{echo}`
            hint: Vamos lá!
    2:
        1:
            question_text: Qual afirmação é verdadeira?
            mp_choice_options:
            -   option: Podes usar o comando `{print}` para fazer perguntas.
                feedback: 'Isso é para o que serve `{ask}`'
            -   option: Podes usar o comando `{ask}` para repetir respostas.
                feedback: 'Isso não é verdade'
            -   option: Com o comando `{print}` podes fazer aparecer texto
                feedback: Bom
            -   option: Com o comando `{sleep}` podes fazer texto desaparecer do ecrã
                feedback: Assim não é como o comando `{sleep}` funciona.
            hint: '`{print}` continua a funcionar da mesma forma como no nível 1.'
        2:
            question_text: Qual é o código correcto?
            mp_choice_options:
            -   option: |-
                    ```
                    nome {is} {ask} Qual é o teu nome?
                    ```
                feedback: Incrível!
            -   option: |-
                    ```
                    {ask} {is} nome Qual é o teu nome
                    ```
                feedback: As palavras estão correctas, a ordem é que não!
            -   option: |-
                    ```
                    {ask} Qual é o teu nome?
                    ```
                feedback: Isto funcionava no nível 1, mas no nível 2 e nos seguintes níveis funciona de maneira diferente.
            -   option: |-
                    ```
                    {ask} Qual é o teu nome? {is} nome
                    ```
                feedback: As palavras estão correctas, a ordem é que não!
            hint: '`{ask}` não funciona como no nível 1'
        3:
            question_text: O que aparece no teu ecrã de output quando corres o código?
            code: |-
                nome {is} Maria
                {print} nome vai ao mercado e compra uma maçã.
            mp_choice_options:
            -   option: nome vai ao mercado e compra uma maçã.
                feedback: A palavra nome é substituída por Maria.
            -   option: Maria vai ao mercado.
                feedback: A segunda parte da frase não é deixada de parte!
            -   option: Maria vai ao mercado e compra uma maçã.
                feedback: Na mira!
            -   option: Maria vai ao mercado e Maria compra uma maçã.
                feedback: Ela não é substituída pelo nome
            hint: A palavra nome é substituída por Maria
        4:
            question_text: O que verás no ecrã de output quando correres este código?
            code: |-
                nome {is} Hedy
                {print} O meu nome é nome
            mp_choice_options:
            -   option: Olá o meu nome é nome
                feedback: A variável nome é substituída por Hedy
            -   option: Olá o meu nome é Hedy
                feedback: A variável nome é substituída por Hedy
            -   option: O meu nome é Hedy
                feedback: A variável nome é substituída por Hedy
            -   option: Olá o meu Hedy é Hedy
                feedback: Correcto, este erro vai ser corrigido no nível 4!
            hint: '''nome'' está a ser substituído por ''Hedy'' em ambos lugares'
        5:
            question_text: O que acontece quando usas o comando `{sleep}`?
            mp_choice_options:
            -   option: Torna o computador mais lento
                feedback: Felizmente não!
            -   option: Fecha o Hedy
                feedback: Felizmente não!
            -   option: O programa pausa por um segundo e depois continua
                feedback: Está correcto!
            -   option: Coloca-lo no fim para que a Hedy saiba que o programa terminou
                feedback: Não, seria inútil no fim do código
            hint: O computador espera por um segundo no comando `{sleep}`
        6:
            question_text: O que deveria estar nas linhas?
            code: |-
                {print} E o prémio para melhor linguagem de programação vai para...
                _
                {print} Hedy!
            mp_choice_options:
            -   option: |-
                    `{sleep}`
                feedback: Perfeito!
            -   option: |-
                    `{echo}`
                feedback: Não há para ser repetido aqui atrás
            -   option: |-
                    `{print}`
                feedback: Não existe texto para ser `{print}` aqui
            -   option: |-
                    `{ask}`
                feedback: Não existe nenhuma pergunta para ser feita ali
            hint: Pausa para efeitos dramáticos...
        7:
            question_text: Que comando deve ser usado na linha 2?
            code: |-
                {print} Eu vou explodir em 3 segundos!
                _
                {print} BOOM!
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 3
                    ```
                feedback: Não precisas `{print}`
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: Perfeito!
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: Desta forma a bomba vai explodir em 1 segundo
            -   option: |-
                    ```
                    {sleep} {sleep} {sleep}
                    ```
                feedback: Usando o número 3 estás a facilitar a tua vida
            hint: Tu queres que o computador espere 3 segundos
        8:
            question_text: Como tornarias a primeira linha de código correcta?
            code: |-
                {ask} {is} Quantos anos tens?
                {print} idade
            mp_choice_options:
            -   option: |-
                    ```
                    idade {ask} {is} Quantos anos tens?
                    ```
                feedback: Essa é a ordem incorrecta
            -   option: |-
                    ```
                    {ask} {is} idade Quantos anos tens?
                    ```
                feedback: Essa é a ordem incorrecta
            -   option: |-
                    ```
                    idade {is} {ask} Quantos anos tens?
                    ```
                feedback: Tu consegues!
            -   option: |-
                    ```
                    idade {is} Quantos anos tens?
                    ```
                feedback: Onde está o comando `{ask}` ?
            hint: A variável nome deveria aparecer primeiro
        9:
            question_text: O que está errado neste código?
            code: |-
                cães {is} animal
                {print} Eu amo animal
            mp_choice_options:
            -   option: 'A linha 1 deveria dizer: cães `{is}` animais'
                feedback: A variável nome é animal
            -   option: 'A linha 1 deveria dizer: animal `{is}` cães'
                feedback: Fantástico!
            -   option: 'A linha 2 deveria dizer: `{print}` Eu amo animais'
                feedback: A variável nome é animal
            -   option: 'A linha 2 deveria dizer: `{sleep}`Eu amo animais'
                feedback: Sleep não é usado para `{print}` texto
            hint: Tu queres `{print}` 'Eu amo cães'
        10:
            question_text: Qual comando deveria ser usado na linha 1?
            code: |-
                sabor {is} _
                {print} O teu gelado favorito é...
                {sleep}
                {print} sabor
            mp_choice_options:
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: Tu queres saber o sabor favorito!
            -   option: |-
                    ```
                    {print} morangos
                    ```
                feedback: Tu não queres um comando `{print}` no meio da linha...
            -   option: |-
                    ```
                    morangos, chocolate, baunilha
                    ```
                feedback: Desta forma tu estás a fazer uma lista. Tu não queres isso agora.
            -   option: |-
                    ```
                    {ask} Qual é o sabor de gelado que tu gostas?
                    ```
                feedback: Está correcto!
            hint: Tu queres `{ask}` uma pergunta
    3:
        1:
            question_text: Que comando(s) usas para deixar a Hedy escolher alguma coisa arbitrariamente?
            mp_choice_options:
            -   option: |-
                    `{print}`
                feedback: '`{print}` é usado para imprimir texto'
            -   option: |-
                    `{ask}`
                feedback: '`{ask}` é usado para fazer uma pergunta'
            -   option: |-
                    `{is}`
                feedback: '`{is}` é usado para fazer uma lista'
            -   option: |-
                    `{at} {random}`
                feedback: Correcto!
            hint: Arbitrário significa sem plano ou aleatório.
        2:
            question_text: O que é que está errado com este código?
            code: |-
                animais {is} cão gato vaca
                {print} animais {at} {random}
            mp_choice_options:
            -   option: 'Precisas de vírgulas na linha 1: cão, gato, vaca.'
                feedback: Bom trabalho!
            -   option: A linha 1 precisa de começar com `{print}`.
                feedback: Não, tu não precisas de `{print}`
            -   option: A linha 2 precisa de dizer 'animal' em vez de 'animals'
                feedback: animais está correcto.
            -   option: '`{at} {random}` está escrito incorrectamente'
                feedback: '`{at} {random}` está escrito correctamente'
            hint: Há algo de errado com a linha 1
        3:
            question_text: How do you fix the mistake in line 2 of this code?
            code: |-
                opções {is} pedra, papel, tesoura
                {print} pedra, papel, tesoura {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    {at} {random} {print} opções
                    ```
                feedback: Estás quase lá. A ordem das palavras ainda não está correcta.
            -   option: |-
                    ```
                    {print} pedra {at} {random}
                    ```
                feedback: Tu não queres que Hedy {print} sempre pedra, às vezes queres tesoura ou papel.
            -   option: |-
                    ```
                    {print} opções {at} {random}
                    ```
                feedback: Muito bem!
            -   option: Nada, o código está correcto!
                feedback: Olha com atenção para os erros
            hint: A variável (lista) é chamada de opções.
        9:
            code: |-
                colors {is} blue, purple, green
                chosen_color {is} {ask} Which haircolor wouldn't your like to have?
                {remove} chosen_color {from} colors
                {print} I will dye my hair color {at} {random}
            hint: Look at line 3
        10:
            question_text: What should be on the _?_?
            code: |-
                walkers {is} dad, mom, Sam, Petra
                walked_yesterday {is} {ask} Who walked the dogs yesterday?
                {print} walked_yesterday shouldn't have to walk the dogs again today
                _?_
                {print} walkers {at} {random} , it's your turn to walk the dogs!
            mp_choice_options:
            -   option: |-
                    ```
                    {remove} walked_yesterday {from} walkers
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {remove} walked yesterday {to} walkers
                    ```
                feedback: '`{remove} {from}` or `{add} {to}`, not `{remove} {to}`'
            -   option: |-
                    ```
                    {remove} walkers {from} yesterday
                    ```
                feedback: yesterday is not a variable
            -   option: |-
                    ```
                    {add} walked_yesterday {to} walkers
                    ```
                feedback: This increased the change that the person who walked yesterday now has to do it again. That's mean.
            hint: The person who walked the dog yesterday should be removed from the list.
    4:
        1:
            question_text: Which of these is true?
            mp_choice_options:
            -   option: '`{print}` and `{ask}` now need quotation marks'
                feedback: That's right
            -   option: Only `{print}` needs quotation marks
                feedback: '`{ask}` needs quotation marks too!'
            -   option: '`{at} {random}` doesn''t work anymore in level 4'
                feedback: '`{at} {random}` still works'
            -   option: '`{at} {random}` now needs quotation marks'
                feedback: No, but 2 other commands do.
        2:
            mp_choice_options:
            -   option: |-
                    ```
                    {print} `hello`
                    ```
                feedback: This quotation mark is skewed, you need a straight one.
            -   option: |-
                    ```
                    {print} 'hello'
                    ```
                feedback: Correct
            -   option: |-
                    ```
                    {print} hello
                    ```
                feedback: There are no quotation marks here!.
            -   option: |-
                    ```
                    {print} ,hello,
                    ```
                feedback: This is a comma, you need quotation marks.
        3:
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Hi Im Hedy
                    ```
                feedback: Add quotation marks please!
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy
                    ```
                feedback: Both before and after the words you want to print should be a quotation mark.
            -   option: |-
                    ```
                    '{print} Hi Im Hedy'
                    ```
                feedback: The first quotation mark should be behind the word {print}
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy'
                    ```
                feedback: Perfect!
        5:
            mp_choice_options:
            -   option: |-
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: Never put the quotation mark in front of the {print} command.
            -   option: |-
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: options is a variable. You don't literally want to print 'options {at} {random}'.
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: That's right
            -   option: Nothing, the game already works!
                feedback: Look carefully. There is an error.
        6:
            hint: 'Toma o teu tempo para pensar: o que é uma variável e deve estar fora das aspas? E que palavras deveriam estar dentro?'
        9:
            mp_choice_options:
            -   option: Ajax is going to win the champions league
                feedback: Hedy could `{print}` that
            -   option: Real Madrid is going to win the champions league
                feedback: Hedy could `{print}` that
            -   option: Bayer Munchen is going to win the champions league
                feedback: Hedy could `{print}` that
            -   option: FC Barcelona is going to win the champions league
                feedback: That's right. It's not in the list
    5:
        1:
            question_text: What is true?
            code: |-
                number {is} {ask} 'What is your lucky number?'
                {if} number {is} 5 {print} 'Mine too!'
                _?_ {print} 'My lucky number is 5!'
            mp_choice_options:
            -   option: In level 5 `{print}` works differently than in level 4
                feedback: '`{print}` is still the same'
            -   option: In level 5 `{ask}` works differently than in level 4
                feedback: '`{ask}` is still the same'
            -   option: In level 5 `{ask}` and `{print}` work differently than in level 4
                feedback: '`No these commands remain the same'
            -   option: In level 5 `{ask}` and `{print}` work the same as in level 4
                feedback: Correct!
            hint: Qual vai junto com o comando `{if}` ?
        2:
            question_text: O que aparece no teu ecrã de output quando escreves o nome Hedy?
            code: |-
                nome {is} {ask} 'Qual é o teu nome?'
                {if} nome {is} Hedy {print} 'divertido' {else} {print} 'não tão divertido'
            mp_choice_options:
            -   option: fun
                feedback: Isso está correcto!
            -   option: less fun
                feedback: Se o nome for Hedy, vai dizer 'divertido''
            -   option: Hedy
                feedback: Não, não imprime o nome
            -   option: Error
                feedback: Infelizmente não!
            hint: '`{if}` nome `{is}` Hedy `{print}` ...?'
        3:
            question_text: Qual é a password correcta?
            code: |-
                password {is} {ask} 'Qual é a password?'
                {if} password {is} SEGREDO {print} 'Correcto!'
                {else} {print} 'ALARME! INTRUSO!'
            mp_choice_options:
            -   option: Correcto!
                feedback: Isto é impresso quando escreves a password correcta
            -   option: SEGREDO
                feedback: Isso está correcto!'
            -   option: password
                feedback: A password não é password...
            -   option: ALARME INTRUSO
                feedback: Isto é impresso quando escreves a password incorrecta!
            hint: '`{if}` password `{is}` ... `{print}` ''Correct!''!'''
        4:
            mp_choice_options:
            -   option: Correcto
                feedback: That's printed if the correct answer is given, not the wrong one...
            -   option: SEGREDO
                feedback: That's not the right answer
            -   option: Incorrecto!
                feedback: No, this is not what Hedy will print
            -   option: ALARME! INTRUSO!
                feedback: Great job!
        5:
            mp_choice_options:
            -   option: Por precisa de ser em maiúsculas, SEGREDO
                feedback: Indeed!
            -   option: Porque a password é alarme
                feedback: No, this is not the password.
            -   option: Porque está escrito incorrectamente.
                feedback: That's not how you spell secret
            -   option: Porque Hedy cometeu um erro
                feedback: No, Hedy is right
        6:
            question_text: Which word should be on the place of the question mark in the last line?
            code: |-
                {print} 'Im Hedy the football fortune teller!'
                {print} 'I will predict what place your team will end up!'
                club is {ask} 'Which club is your favorite?'
                {if} club {is} ajax {print} 'Ajax is going to win of course!'
                _?_ {print} 'Sorry, your club is gonna be in last place...'
        7:
            question_text: Which word should be in the place of the question mark?
            code: |-
                {print} 'I can predict if you will be a millionair or not!'
                name {is} {ask} 'Whats your name?'
                {if} name {is} Hedy {print} 'You will be a millionair!'
                {else} _?_ 'Unfortunately... No big money for you.'
            mp_choice_options:
            -   option: |-
                    `{if}`
                feedback: '`{if}` is in the line above.'
            -   option: |-
                    `{at} {random}`
                feedback: No, you don't need `{at} {random}`.
            -   option: |-
                    `{else}`
                feedback: There already is an `{else}` command
            -   option: |-
                    `{print}`
                feedback: Awesome!
        8:
            question_text: Which word should be on the place of the question mark?
            code: |-
                animal {is} {ask} 'What is your favorite animal?'
                {if} _?_ {is} penguin {print} 'Thats my favorite animal too!'
                {else} {print} 'Cool! I like penguins.'
            mp_choice_options:
            -   option: |-
                    ```
                    animal favorito
                    ```
                feedback: That's not the variable name.
            -   option: |-
                    ```
                    animal
                    ```
                feedback: Great job!
            -   option: |-
                    `{if}`
                feedback: '`{if}` is already there'
            -   option: |-
                    `{print}`
                feedback: No, that's not it.
        9:
            mp_choice_options:
            -   option: '1'
                feedback: Bad choice! You're being eaten
            -   option: '2'
                feedback: Super! You escaped!
            -   option: '3'
                feedback: Bad choice! You're being eaten.
            -   option: É uma armadilha, vais sempre ser comido!
                feedback: Luckily not!
        10:
            mp_choice_options:
            -   option: Hedy escolhe um monstro aleatório todas as vezes.
                feedback: Awesome!
            -   option: vampiro
                feedback: Not always...
            -   option: lobisomem
                feedback: Not always...
            -   option: aranha gigante
                feedback: Not always...
    6:
        2:
            question_text: Which sign do you use for an addition?
            mp_choice_options:
            -   option: '`-`'
                feedback: That's not it
            -   option: mais
                feedback: That's not it
            -   option: '`*`'
                feedback: That's not it
            -   option: '`+`'
                feedback: Correct!
        3:
            mp_choice_options:
            -   option: '30'
                feedback: This would be the right answer if there were no quotation marks.
            -   option: '13'
                feedback: Try again..
            -   option: 3*10
                feedback: Correct! There are quotation marks, so Hedy will print it literally.
            -   option: Nada, Hedy mostrará uma mensagem de erro.
                feedback: No, Hedy will print it literally.
        4:
            mp_choice_options:
            -   option: '30'
                feedback: Mind, Hedy also prints 'Your lucky number is...'
            -   option: '10'
                feedback: Please try again.
            -   option: O teu número da sorte é... 30
                feedback: That's right!
            -   option: O teu número da sorte é... 10
                feedback: Her lucky number is name times age...
        5:
            mp_choice_options:
            -   option: 5 euros
                feedback: Unfortunately, it's not that cheap.
            -   option: 10 euros
                feedback: No, it's 10 dollars each.
            -   option: 15 euros
                feedback: The * means multiplication.
            -   option: 50 euros
                feedback: Great!
        6:
            question_text: How much does a hamburger cost is this virtual restaurant?
            mp_choice_options:
            -   option: 15 euros
                feedback: Super!
            -   option: 6 euros
                feedback: The fries are 6 dollars
            -   option: 0 euros
                feedback: The hamburger isn't free!
            -   option: 21 euros
                feedback: That's the price for a hamburger and fries!
        7:
            mp_choice_options:
            -   option: Também poderia ter sido `price = 3` .
                feedback: No, that's not true. Hedy needs to add 3 dollars to the total.
            -   option: Porque a Hedy não entende `price = 3`.
                feedback: Hedy would understand, but it wouldn't be right.
            -   option: Porque a Hedy de outra forma esqueceria-se da ordem anterior. O preço seria 3 euros no total.
                feedback: That's right!
            -   option: Porque o preço é de 0 euros para começar.
                feedback: That's true, but not the reason
        8:
            mp_choice_options:
            -   option: Não deveriam existir aspas na linha 2
                feedback: No, there should be!
            -   option: A variável é chamada de resposta correcta, mas o nome de uma variável só pode ser uma palavra. Então deve ser resposta_correcta
                feedback: Correct!
            -   option: Os comandos `{if}` e `{else}` deveriam estar na mesma linha.
                feedback: No, that's not true.
            -   option: A variável na linha 2 não pode ser chamada de resposta, porque é demasiado parecida com a variável resposta correcta.
                feedback: Os nomes das variáveis podem ser parecidos, mas não podem ser duas palavras...
        9:
            code: |-
                {print} 'Eu sou a Hedy a cartomante tonta '
                {print} 'Eu vou prever o quão inteligente és!'
                fútebol = {ask} 'Numa escala de 0 a 10 quanto adoras fútebol?'
                bananas = {ask} 'Quantas bananas comeste este fim-de-semana?'
                higiene = {ask} 'Quantas vezes lavaste as mãos hoje??'
                resultado = bananas + higiene
                resultado = resultado * fútebol
                {print} 'Tu és ' resultado 'por cento esperto.'
            mp_choice_options:
            -   option: 10%
                feedback: (2 bananas + 3 higiene) * 10 fútebol = 5*10 =?
            -   option: 32%
                feedback: (2 bananas + 3 higiene) * 10 fútebol = 5*10 =?
            -   option: 50%
                feedback: Íncrivel! Tu és 100 por cento esperto!
            -   option: 100%
                feedback: (2 bananas + 3 higiene) * 10 fútebol = 5*10 =?
        10:
            code: |-
                nome _ Hedy
                {print} nome 'está a passear pela floresta'
            mp_choice_options:
            -   option: Só podes preencher a palavra que está no `_`
                feedback: You are allowed to use the `=` sign as well
            -   option: Podes preencher com a palavra é ou com o sinal `=` no `_`
                feedback: Amazing!
            -   option: Tens que preencher =é= no `_`
                feedback: No, one `=` sign is enough
            -   option: Só podes usar o sinal `=` quando estás a trabalhar com números, não com palavras.
                feedback: You can also use `=` with words.
    7:
        1:
            mp_choice_options:
            -   option: '0'
                feedback: No you can repeat a line.
            -   option: '1'
                feedback: Correct, one line at a time
            -   option: '2'
                feedback: In this level only one line at a time
            -   option: infinite
                feedback: In this level you can only repeat one line at a time
            hint: You can only repeat 1 line at a time
        2:
            hint: First the repeat command, then the `{print}` command
        4:
            mp_choice_options:
            -   option: |-
                    ```
                    I'm
                    ```
                feedback: That's right!
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` is spelled correctly'
            -   option: |-
                    ```
                    {repeat}
                    ```
                feedback: '`{repeat}` is spelled correctly'
            -   option: |-
                    ```
                    {times}
                    ```
                feedback: '`{times}` is spelled correctly'
            hint: I'm is wrong, you can't use apostrophes
        6:
            mp_choice_options:
            -   option: |-
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    the wheels on the bus go
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    round and round
                    round and round
                    round and round
                feedback: All though the town! Perfect!
        7:
            mp_choice_options:
            -   option: |-
                    We will We will
                    ROCK YOU!
                feedback: '''We will'' won''t appear twice in the same line'
            -   option: |-
                    We will
                    We will
                    ROCK YOU!
                feedback: Great!
            -   option: |-
                    We will
                    ROCK YOU!
                    We will
                    ROCK YOU!
                feedback: ROCK YOU! won't be repeated
            -   option: |-
                    We will
                    ROCK YOU!
                feedback: Mind the repeat command
        8:
            question_text: Qual código em Hedy pertence a este output?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: Perfect, je kan het `{repeat}` commando hier niet gebruiken.
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'"
                feedback: Waar is de 'Do do do do' gebleven?
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: Dit is niet de juiste volgorde..
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {repeat} 2 {times} {print} 'Do do'
                    {print} 'And I say'
                    {print} 'Its alright'"
                    ```
                feedback: Dit is niet de juiste volgorde..
            hint: '`{repeat}` kan alleen worden gebruikt als je dezelfde regel meerdere keren achter elkaar wil uitvoeren.'
        9:
            question_text: Welke Hedy code hoort bij dit resultaat ?
            code: |-
                Batman was flying through Gotham.
                When suddenly he heard someone screaming...
                Help !
                Help !
                Help !
                Please help me !"
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham. '
                    {print} 'When suddenly he heard someone screaming...'
                    {print} 'Help !'
                    {repeat} 3 {times} {print} 'Please help me !'
                    ```
                feedback: Je herhaalt de verkeerde regel
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} 'Help !'
                    {print} 'Please help me !'
                    ```
                feedback: Het commando `{print}` mist op regel 3
            -   option: |-
                    ```
                    {print} Batman was flying through Gotham.
                    {print} When suddenly he heard someone screaming...
                    {repeat} 3 {times} {print} Help !
                    {print} Please help me !
                    ```
                feedback: Je vergeet de aanhalingstekens
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} {print} 'Help !'
                    {print} 'Please help me !'
                    ```
                feedback: Perfect
            hint: '''Help !'' wordt 3x herhaald.'
        10:
            question_text: What Hedy code belongs to this output?
            mp_choice_options:
            -   option: |-
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Almost! the first line needs an extra word
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
                feedback: This is not in the right order.
            -   option: |-
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 times 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
                feedback: This is not in the right order.
    8:
        2:
            mp_choice_options:
            -   option: This should be only one line, not 2.
                feedback: No it should be 2 lines.
            -   option: This `{print}` command has to go
                feedback: No, you need it.
            -   option: There is a spelling mistake in the `{repeat}` command.
                feedback: Nee, repeat is de goede spelling
            -   option: The second line need to start with 4 spaces as indentation.
                feedback: Correct!
        3:
            mp_choice_options:
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                feedback: Mind the `{repeat}` command!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                feedback: The last line has no indentation, so it's not repeated.
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark
                feedback: Right!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark
                    Baby shark
                feedback: O que é que está sendo repetido e o que não?
            hint: O que é que está sendo repetido e o que não?
        4:
            code: |-
                {print} 'The children went:'
                {repeat} 2 {times}
                    {print} 'Yay!'
                    {print} 'Were going on holiday!'
            mp_choice_options:
            -   option: |-
                    The children went:
                    Yay!
                    Were going on holiday!
                feedback: Mind the `{repeat}` command !
            -   option: |-
                    The children went:
                    Yay!
                    Were going on holiday!
                    Yay!
                    Were going on holiday!
                feedback: Correct!
            -   option: |-
                    The children went:
                    Yay!
                    Yay!
                    Were going on holiday!
                    Were going on holiday!
                feedback: This order is incorrect.
            -   option: |-
                    The children went:
                    Yay!
                    Yay!
                    Were going on holiday!
                feedback: The last line is repeated too.
        5:
            mp_choice_options:
            -   option: The `{print}` commands on the last two lines should start on new lines en start with 4 spaces.
                feedback: That's right!
            -   option: '`{else}` is not a command!'
                feedback: It is!
            -   option: Lines that start with `{if}` should start with 4 spaces
                feedback: That's not true
            -   option: '`{ask}` is no longer a command'
                feedback: That's not true
        7:
            code: |-
                eten = {ask} 'What would you like to eat?'
                {if} food {is} fries
                sauce = {ask} 'What sauce would you like?'
                    {print} 'One fries with ' sauce
                {if} food {is} pizza
                    topping = {ask} 'What topping would you like?'
                    {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: Nothing this code is correct!
                feedback: Something is wrong!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!.
            -   option: You don't have to use indentation twice. Only in the first `{if}` command.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the first `{if}` command.
                feedback: That's right.
        8:
            mp_choice_options:
            -   option: |-
                    ```
                    {if} answer is right
                       {print} You are...
                          sleep
                              {print} right!
                          {else}
                              {print} You are wrong!
                    ```
                feedback: You are wrong!
            -   option: |-
                    ```
                    {if} answer is right
                    {print} You are...
                    sleep
                    {print} right!
                    {else}
                    {print} You are wrong!
                    ```
                feedback: You are wrong!
            -   option: |-
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                        {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: You are... right!
            -   option: |-
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                    {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: You are wrong!
        9:
            code: |-
                1 music = {ask} 'What is your favorite music genre?'
                2 {if} music is rock
                3 {print} '🤘'
                4 {else}
                5 {print} '👎'
        10:
            code: |-
                1 level = {ask} 'What level are you on?"
                2 {if} level {is} 8
                3 {print} Great job!
    9:
        1:
            code: |-
                {repeat} 3 {times}
                   eten = {ask} 'What would you like to eat?'
                   {if} food {is} fries
                       sauce = {ask} 'What sauce would you like?'
                       {print} 'One fries with ' sauce
                   {if} food {is} pizza
                       topping = {ask} 'What topping would you like?'
                       {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: Nothing this code is correct!
                feedback: That's right!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!.
            -   option: You don't have to use indentation twice.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the last `{if}` command.
                feedback: It not, though.
            hint: all the indentation is done correctly.
        2:
            mp_choice_options:
            -   option: |-
                    Good job!
                    Good job!
                feedback: That's not it!
            -   option: The computer will explode in 5... 4... 3... 2... 1...
                feedback: That's not it!
            -   option: |-
                    Good job !
                    Good job!
                    You can use the computer!
                feedback: That's not it!
            -   option: |-
                    Good job!
                    You can use the computer!
                    Good job!
                    You can use the computer!
                feedback: Correct!
        3:
            code: |-
                {print} 'Choose the right case and win!'
                case = {ask} 'Which case will you pick? 1 or 2?'
                {if} case {is} 1
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell your case for 10 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win an apple pie'
                {if} case {is} 2
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell the case for 500 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win a million dollars!'
        4:
            code: |-
                name = {ask} 'What is your name?'
                size = {ask} 'What is your shoe size?'
                {if} size {is} 38
                    {if} name {is} Cinderella
                        {print} 'I was looking for you!'
                    {else}
                        {print} 'You are not the one!'
                {else}
                    {print} 'Ill keep looking'
            mp_choice_options:
            -   option: Sleeping Beauty with shoe size 38 gets the output 'Ill keep looking'
                feedback: No, she gets 'You are not the one!'
            -   option: 'Cinderella with shoe size 40 gets the output: ''I was looking for you!'''
                feedback: No, she gets 'Ill keep looking'
            -   option: Sleeping Beauty with shoe size 40 gets the output 'Ill keep looking'
                feedback: That's right!
            -   option: Cinderella with shoe size 40 gets the output 'I was looking for you!'
                feedback: No she gets 'Ill keep looking'
        5:
            mp_choice_options:
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: Don't forget the indentation after `{repeat}` commands.
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                    {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: Use indentation after an `{if}` command
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: Perfect
            -   option: |-
                    ```
                    {repeat} 3 {times}
                        desert = {ask} 'What is your favorite type of desert?'
                        {if} desert {is} icecream
                            {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: There are 2 `{repeat}` commands in this code.
        6:
            mp_choice_options:
            -   option: '`{if}`'
                feedback: Don't forget the others
            -   option: '`{if}` `{repeat}`'
                feedback: Don't forget `{else}`!
            -   option: '`{if}` `{else}` `{repeat}`'
                feedback: Keep it up!
            -   option: '`{if}` `{else}` `{repeat}` `{print}`'
                feedback: Not with print
        7:
            question_text: "In this code from a pizza restaurant. \nYoull get a 5 dollar discount if you order a medium pizza with coke.\n What should you do to debug this code?"
            code: |-
                {if} food {is} pizza
                {if} size {is} medium
                {if} drink {is} coke
                price = price - 2
            mp_choice_options:
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                                price = price - 2
                    ```
                feedback: Amazing!
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                    {if} drink {is} coke
                        price = price - 2
                    ```
                feedback: Try again!
            -   option: |-
                    ```
                    {if} food {is} pizza
                    {if} size {is} medium
                    {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: Try again
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: Try again
        8:
            question_text: What is wrong is this code?
            code: |-
                age = {ask} 'Happy Birthday! How old are you?'
                singing = {ask} 'Would you like us to sing?'
                    if singing {is} yes
                        {repeat} years {times}
                        {print} 'Hip Hip Hooray'
            mp_choice_options:
            -   option: You can't put two questions in a row
                feedback: Yes you can.
            -   option: The variable called 'age' is later on used as 'years'
                feedback: Keen eye! Good job!
            -   option: You're not allowed to start with 8 spaces, like line 4 and 5 do
                feedback: You actually must start like that.
            -   option: A code must always start with a `{print}` command in the first line
                feedback: That's not true.
        10:
            code: |-
                1 {repeat} 2 {times}
                2 {if} level {is} 9
                3 {print} Great job!
            mp_choice_options:
            -   option: All lines should start with 4 spaces
                feedback: Only line 2 and 3 start with spaces
            -   option: Line 2 and 3 should start with 4 spaces
                feedback: Line 3 should start with 8
            -   option: Line 2 and 3 should start with 8 spaces
                feedback: Line 2 should start with 4
            -   option: line 2 should atart with 4 spaces and line 3 with 8
                feedback: You are correct!
            hint: The first line doens't start with any spaces
    10:
        1:
            question_text: What do we need to fill in on the `_?_` if we want to print each compliment?
            code: |-
                compliments = perfect, great job, amazing
                _?_
                    {print} compliment
        5:
            question_text: What word should be on the _?_ with these digital dice?
            code: |-
                {print} 'Welcome to the digital dice!'
                players = Ann, John, Jesse
                choices = 1, 2, 3, 4, 5, 6
                {for} player {in} players
                    {print} player ' throws ' _?_ {at} {random}
        6:
            mp_choice_options:
            -   option: Kelly chooses rock
                feedback: Meredith wants to play too!
            -   option: |-
                    Meredith chooses scissors
                    Kelly chooses rock
                feedback: So close! But Kelly is first in the list, so she goes first
            -   option: Meredith chooses paper
                feedback: Kelly wants to play too!
            -   option: |-
                    Kelly chooses paper
                    Meredith chooses scissors
                feedback: Amazing!
        7:
            question_text: What line should be on the _?_ in this code that decides what these people will have for dinner?
            code: |-
                names = Ron, Leslie, April, Andy
                food = pasta, fries, salad
                _?_
                    {print} name ' has to eat ' food {at} {random} ' for dinner'
        8:
            question_text: What should be on the _?_ in this code that decides which color shirt you get?
            code: |-
                names = Donna, Tommy, Ben
                colors = blue, red, purple
                {for} name {in} names
                    {print} _?_
            mp_choice_options:
            -   option: |-
                    ```
                    'name gets a color shirt'
                    ```
                feedback: That's not it!
            -   option: |-
                    ```
                    name 'gets a ' colors {at} {random} ' shirt'
                    ```
                feedback: Great job! This was a hard one!
            -   option: |-
                    ```
                    names 'gets a ' color {at} {random} ' shirt'
                    ```
                feedback: You want each name printed. So the first word should not be names but...
            -   option: |-
                    ```
                    'people gets a colors shirt'
                    ```
                feedback: There is no variable named people..
        9:
            question_text: What is the first question Hedy will `{ask}` you when you run the program?
            code: |-
                courses = appetizer, main course, dessert
                names = Timon, Onno
                {for} name in names
                    {for} course {in} courses
                        food = {ask} name ', what would you like to eat as your ' course '?'
                        {print} name ' orders ' food ' as their ' course
        10:
            code: |-
                prices = 1 million dollars, car, sandwich
                names = Bob, Patrick, Sandy, Larry
                {for} price {in} prices
                    {print} 'The ' price 'is won by ' names {at} {random}
            mp_choice_options:
            -   option: Everybody will always win a price.
                feedback: That is not true, you could end up without a price.
            -   option: All the prices always go to one single person.
                feedback: That is not true. All the prices are given away, but to random people
            -   option: Larry will never win a price
                feedback: That is not true. Larry has the same odds as the others
            -   option: Someone might win with two prices
                feedback: You get it!
    11:
        1:
            question_text: What will be the output from this code?
            code: |-
                {for} i {in} {range} 1 {to} 3
                    {print} i
            mp_choice_options:
            -   option: |-
                    1
                    2
                    3
                feedback: Correct!
            -   option: 1 2 3
                feedback: That's not it
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: That's not it
            -   option: '123'
                feedback: Não
            hint: How do the numbers appear in the screen?
            correct_answer: A
        2:
            question_text: Which code was used to get this output?
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: Perfect
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: This code won't work. You need an indent after {for}.
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                        {print} 'Once I caught a fish alive!'
                    ```
                feedback: Now Hedy will count '1 Once I caught a fish alive!, 2 Once I caught a fish alive! etc.
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} 'i'
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: i is a variable and shouldn't have quotation marks
            hint: Como é que os números aparecem no ecrã?
        3:
            output: |-
                10
                9
                8
                7
                6
                5
                4
                3
                2
                1
                0
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: Now Hedy prints the numbers from 0 to 10 instead of 10 to 0.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
                feedback: Hedy would print negative numbers in this case.
            -   option: |-
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} i
                    ```
                feedback: Unfortunately this does not exist.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: That's right!
            hint: It has to be a calculation...
            correct_answer: D
        4:
            question_text: What's wrong with this code?
            mp_choice_options:
            -   option: The i in the last line need quotation marks
                feedback: No it doesn't.
            -   option: You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10
                feedback: You could use 1 to 5 just as well!
            -   option: Line 1 needs to start with an indention.
                feedback: Not line 1...
            -   option: Line 2 needs to start with an indention
                feedback: Perfect!
            hint: There is something wrong with the indention
        5:
            question_text: What word should be at the place of the question mark?
            code: |-
                {for} i {in} _?_ 1 {to} 10
                    {print} i
            mp_choice_options:
            -   option: |-
                    ```
                    counter
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {range}
                    ```
                feedback: Correct
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {for}
                    ```
                feedback: 'No'
            hint: Há algo de errado com a indentação
            correct_answer: B
        7:
            question_text: What should be on the place of the question mark?
            code: |-
                {print} 'Welcome to Hedys diner'
                people is {ask} 'How many people will be eating here tonight?'
                _?_
                    food is {ask} 'What would you like to order?'
                    {print} food
        8:
            mp_choice_options:
            -   option: |-
                    23
                    24
                    25
                feedback: The numbers don't appear. It doesn't say `{print}` i.
            -   option: 23 hi 24 hi 25 hi
                feedback: The numbers don't appear. It doesn't say `{print}` i
            -   option: |-
                    hi
                    hi
                    hi
                feedback: Correct
            -   option: The word 'hi' will appear 25 times in a row.
                feedback: No it will only appear 3 times.
        10:
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: Mind the indention
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: That's right!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            hint: Mind the indention
    12:
        1:
            code: |-
                print 'three and a half plus one and a half is...'
                print 3.5 + 1.5
            mp_choice_options:
            -   option: '5'
                feedback: Don't forget the first line of code!
            -   option: 3.5 + 1.5
                feedback: This is not the one!
            -   option: |-
                    thee and a half plus one and a half is...
                    five
                feedback: Take a close look at the second line...
            -   option: |-
                    three and a half plus one and a half is...
                    5
                feedback: Great job!
        2:
            mp_choice_options:
            -   option: |-
                    ```
                    flavors is vanilla, strawberry, chocolate
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    'flavors = vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    flavors = 'vanilla', 'strawberry', 'chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: Alright!
            -   option: |-
                    ```
                    flavors = 'vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
        3:
            code: |-
                favorite_animal = ask 'What is your favorite animal?'
                print 'I like ' favoriteanimal ' too!'
            mp_choice_options:
            -   option: The name of the variable is different in line 1 than in line 2.
                feedback: Correct!
            -   option: The quotation marks aren't used correctly in line 2
                feedback: That's not true
            -   option: You can't use the = sign when using an ask command
                feedback: That's not true
            -   option: Nothing is wrong.
                feedback: That's not true
        4:
            code: |-
                print Welcome to the online shoe shop
                category = ask What kind of shoes are you looking for?
                if category = high heels
                  print High heels are 50% off now!
        5:
            code: |-
                name is ask 'What is your name?'
                if name is 'Agent007'
                    a is 'Go to the airport '
                else
                    a is 'Go to the train station '
                password is ask 'What is the password?'
                if password is 'TOPSECRET'
                    b is 'tomorrow at 02.00'
                else
                    b is 'today at 10.00'
                print a + b
        6:
            question_text: Which line should be filled in at the ???
            code: |-
                print 'Welcome to McHedy!'
                order = ask 'Would you like a hamburger or fries?'
                if order = 'hamburger'
                  price = 12
                if order = 'fries'
                  price = 4
                drinks = ask 'Would you like a drink with that for 2 dollars?'
                if drinks = 'yes'
                  ???
                print 'That will be ' price ' dollar please'
        7:
            code: |-
                menu = 'cookies', 'cheese', 'grapes'
                print "It's my birthday! I`ve brought some snacks!"
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'gluten free'
                    remove 'cookies' from menu
                if diet = 'vegan'
                    remove 'cheese' from menu
                print 'For you I have brought: '
                for snack in menu
                    print snack
        8:
            mp_choice_options:
            -   option: |-
                    ```
                    print '7 / 2'
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 / 2
                    ```
                feedback: That is right!
            -   option: |-
                    ```
                    print 7 : 2
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 * 2
                    ```
                feedback: 'No'
        9:
            question_text: Which code should be filled in in line 1 at the ???
            code: |-
                ???
                print 'You won ' prices at random '!'
            mp_choice_options:
            -   option: |-
                    ```
                    prices = 'one' 'million' 'dollars', 'nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars, nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars', 'nothing'
                    ```
                feedback: Winner!
            -   option: |-
                    ```
                    'prices' = 'one million dollars', 'nothing'
                    ```
                feedback: You one nothing
        10:
            question_text: Which line of code should be filled in at the ??? to complete the song ?
            code: |-
                actions = 'clap your hands', 'stomp your feet', 'shout Hurray!'
                ???
                    for i in range 0 to 1
                        print 'if youre happy and you know it'
                        print action
                    print 'if youre happy and you know it and you really want to show it'
                    print 'if youre happy and you know it'
                    print action
            mp_choice_options:
            -   option: for i in range 1 to 3
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: for action in actions
                feedback: You are amazing!
            -   option: repeat 3 times
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: print actions at random
                feedback: This is a hard one! All the actions on the list must be in the song.
    13:
        1:
            code: |-
                name = ask 'What is your name?'
                song = ask 'Whould you like to hear a song?'
                birthday = ask 'Is today your birthday?'
                ???
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday. dear ' name
                  print 'Happy Birthday to you!'
            mp_choice_options:
            -   option: |-
                    ```
                    if birthday and song = 'yes'
                    ```
                feedback: Almost there
            -   option: |-
                    ```
                    if birthday = 'yes' and name = 'Hedy'
                    ```
                feedback: Hedy only sings for you if you like to hear a song
            -   option: |-
                    ```
                    if song = 'yes' and birthday = 'yes'
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    if song = 'yes' or birthday = 'yes'
                    ```
                feedback: Hedy only sings if both answers are yes
        2:
            code: |-
                menu = 'cheese', 'sausage rolls', 'cookies'
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'vegan' ??? diet = 'halal'
                    remove 'sausage rolls' from menu
            mp_choice_options:
            -   option: and
                feedback: You don't have to be vegan and muslim
            -   option: or
                feedback: Great thinking!
            -   option: +
                feedback: 'No'
            -   option: print
                feedback: 'No'
        3:
            code: |-
                member = ask 'Do you have a membership card?'
                discount = ask 'Do you have a discount code?'
                if member = 'yes' or discount = 'yes'
                    print 'You get a free apple pie!'
                else
                    print 'That will be 5 dollars please'
            mp_choice_options:
            -   option: You get a free pie!
                feedback: Great job!
            -   option: That will be 5 dollars please
                feedback: That is not true
            -   option: This code won't work, so there is no output
                feedback: There is nothing wrong with the code
            -   option: There is no way of knowing
                feedback: There is! Read the question carefully
            hint: Mind the command 'or' in line 3
        4:
            code: if computer_choice is 'rock' and your_choice is 'paper'
            mp_choice_options:
            -   option: print 'you win'
                feedback: You win!
            -   option: print 'you lose'
                feedback: You lose!
            -   option: print 'tie'
                feedback: It's only a tie if both choices are the same
            -   option: print 'try again'
                feedback: Try again!
        5:
            code: |-
                if name = 'Cinderella' and shoe_size = 38
                    print 'You are my one true love!'
        6:
            code: |-
                print 'Let me guess which family member you are!'
                glasses = ask 'Do you wear glasses?'
                female = ask 'Are you female?'
                if glasses = 'yes' and female = 'yes'
                    print 'You must be Sophie!'
                if glasses = 'no' and female = 'yes'
                   print 'You must be Marleen!'
                if glasses = 'yes' and female = 'no'
                    print 'You must be Wouter!'
                if glasses = 'no' and female = 'no'
                    print 'You must be Michael!'
        7:
            code: |-
                print 'Thank you for helping me take care of my pets'
                print 'Here is a program to help feed them'
                animal is ask 'What kind of animal are they?'
                color is ask 'What colour are they?'
                if animal is 'cat' and color = 'grey'
                    print 'That is Abby. She eats 3 scoops of cat nibbles'
                if animal is 'cat' and color = 'orange'
                    print 'That is Milo. He eats 4 scoops of cat nibbles'
                if animal is 'bird' or color is 'black'
                    print 'I fed them this moring! They do not need more food today'
                if animal is 'hamster' and color is 'brown'
                    print 'You can feed them a piece of carrot'
        8:
            code: |-
                print 'Welcome to the movie theater'
                popcorn = ask 'Would you like some popcorn?'
                drink = ask 'Would you like a drink?'
                if popcorn = 'yes' and drink = 'yes'
                    print 'That will be 8 dollars please'
                if popcorn = 'no' and drink = 'yes'
                   print 'That will be 3 dollars please'
                if popcorn = 'yes' and drink = 'no'
                    print 'That will be 5 dollars please'
                if popcorn = 'no' and drink = 'no'
                    print 'Ok'
                print 'Enjoy the movie'
        9:
            code: |-
                1  chocolate = ask 'Would you like chocolate sauce on your ice cream?'
                2  sprinkles = ask 'Would you like sprinkles on your ice cream?'
                3  if chocolate and sprinkles = 'yes'
                4      print 'Ice cream with chocolate sauce and sprinkles, coming up!'
                5  if chocolate = 'yes' and sprinkles = 'no'
                6      print 'Ice cream with chocolate sauce, coming up!'
                7  if chocolate = 'no' and sprinkles = 'yes'
                8      print 'Ice cream with sprinkles, coming up'
                9  if chocolate = 'no' and sprinkles = 'no'
                10     print 'Just plain icecream, coming up!'
            mp_choice_options:
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: Correct!
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'no' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 5 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 7 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
        10:
            code: |-
                print 'Welcome to the product finder of this supermarkt'
                item is ask 'What product are you looking for?'
                bakery = 'bread', 'buns', 'muffins'
                drinks = 'soda', 'water', 'lemonade'
                snacks = 'chips', 'nuts', 'dips'
                frozen = 'fries', 'icecream', 'pizza'
                fruit = 'bananas', 'apples', 'oranges'
                if item in snacks ??? item in drinks
                    print 'This item is in aile 3'
                if item in bakery or item in bakery
                    print 'This item in in the back of the store'
                if item in fruit
                    print 'The fruit is sold near the register'
            mp_choice_options:
            -   option: and
                feedback: There are no items that are both the list of snacks and the list of drinks
            -   option: or
                feedback: Great job!
            -   option: in
                feedback: 'No'
            -   option: if
                feedback: 'No'
    14:
        4:
            code: |-
                price = 10
                money = {ask} How much money do you have?
                buy = {ask} 'Would you like to buy this teddy bear?'
                {if} money >= price and buy == 'yes'
                    {print} 'You can buy the bear!'
                {else}
                    {print} 'You cannot buy this bear!'
        5:
            code: |-
                age = {ask} 'How old are you?'
                ticket = {ask} 'Do you have a ticket?'
                {if} age _ and ticket == 'yes'
                    {print} 'You can enter the movie theater.'
                {else}
                    {print} 'You are not allowed to come in!'
        6:
            code: |-
                lives = 2
                {repeat} 10 times
                    {if} lives != 0
                        answer = {ask} 'Are you annoyed yet?'
                    {if} answer == 'yes'
                        lives = lives - 1
        9:
            code: |-
                chocolate = {ask} 'How many pieces of chocolate have you eaten?'
                  {if} chocolate <= 2
                      {print} 'That is a healthy amount'
                  {if} chocolate > 2 and chocolate =< 8
                      {print} 'That is a bit much'
                  {if} chocolate > 8
                      {print} 'You will get a stomach ache!'
    15:
        1:
            code: |-
                answer = 0
                while answer _ 'Amsterdam'
                    answer = ask 'What is the capital city of the Netherlands?'
                print 'You have given the correct answer'
        3:
            question_text: Which command should be filled in on the two blanks?
            code: |-
                _idade < 18
                  {print} 'tu não podes entrar neste bar'
        4:
            code: |-
                opções = 1, 2, 3, 4, 5, 6
                {print} 'Lança 6 o mais rápido que conseguires!'
                lança = 0
                tentativas = 0
                {while} lançamento == 6
                    lança = opções {at} {random}
                    {print} 'Tu lanças-te ' lançado
                    tentativas = tentativas + 1
                {print} 'Sim! Tu lanças-te 6 em ' tentativas ' tentativas.'
            mp_choice_options:
            -   option: Na linha 1 `==` deveria ter sido usado em vez de `=`
                feedback: Não, não é isso
            -   option: Na linha 2 faltam as aspas
                feedback: Não está correcto
            -   option: Na linha 5 `{if}` deveria ter sido usado em vez de `{while}`
                feedback: Não é isso
            -   option: Na linha 5 `!=` deveria ser usado em vez de `==`
                feedback: Estás correcto(a)!
            hint: Há algo de errado na linha 5
        5:
            question_text: O que deve ser preenchido no espaço em branco para que este programa funcione?
            code: |-
                humidade = 10
                enquanto humidade != 0
                    {print}'O teu cabelo ainda está molhado, o secador está ligado!'
                    {sleep} 1
                    {clear}
                    humidade _

                {print} 'Seco!'
            mp_choice_options:
            -   option: "```\n   = humidade\n```"
                feedback: Isso não vai mudar nada
            -   option: "```\n   = humidade = 1\n```"
                feedback: Não podes ter duas vezes = numa linha
            -   option: "```\n   = humidade - 1\n```"
                feedback: Estás correcto(a)!
            -   option: "```\n   = humidade + 1\n```"
                feedback: O programa deve contar ao contrário
            hint: A humidade deve diminuir de cada vez
        6:
            question_text: what is wrong with this code?
            code: |-
                lives = 100
                    {while} lives != 0
                    answer = {ask} 'Are you annoyed yet?'
                {if} answer == 'yes'
                    lives = lives - 1
            mp_choice_options:
            -   option: while should be if
                feedback: No that is not right
            -   option: if should be while
                feedback: No that is not right
            -   option: Line 3 should start with more indentation
                feedback: No that's not right
            -   option: Line 2 should start with less indentation
                feedback: That is correct
        7:
            question_text: O que deve ser alterado neste programa para que funcione?
            code: |-
                {print} 'Adivinha o número'
                número = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                número = números {at} {random}
                jogo = 'on'
                {if} jogo == 'on'
                     adivinha = {ask} 'Qual número achas que é?'
                    {if} adivinha< número
                        {print} _
                    {if} adivinha > número
                        {print} _
                    {if} adivinha == número
                        {print} _
                        jogo= 'fim'
            mp_choice_options:
            -   option: '... muda o primeiro `{if}` para `{while}`'
                feedback: Perfeito!
            -   option: '... change the second {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the third {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the fourth {if} into a {while}'
                feedback: That's not quite right.
        8:
            hint: The block after the while command keeps happening while the toilet is occupied.
        9:
            code: |-
                chocolate = {ask} 'How many calories have you eaten today?'
                  {while} calories <= 1000
                      {print} 'You could eat some more'
                  {while} calories > 1000 and calories =< 2000
                      {print} 'That is alright'
                  {while} calories > 2000
                      {print} 'You have had enough for today'
    16:
        4:
            mp_choice_options:
            -   option: A variável na linha 4 deveria ser `friend[i]` e não `friends[i]`
                feedback: That is not right.
            -   option: A linha 3 deveria dizer `in range 1 to 3` e não `in range 0 to 3`
                feedback: Good catch!
            -   option: Line 4 should say 'lucky_number', not 'lucky number
                feedback: It's not a variable, it's just text.
            -   option: '{in} in line 3 should be removed'
                feedback: That's not it
