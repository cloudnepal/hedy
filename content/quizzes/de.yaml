levels:
    1:
        1:
            question_text: "Wie heißt diese Programmiersprache?"
            mp_choice_options:
            -   option: "Hedy"
                feedback: "Gut gemacht!"
            -   option: "Heddy"
                feedback: "Nicht dieses!"
            -   option: "Haydie"
                feedback: "Dieses nicht!"
            -   option: "Heidi"
                feedback: "Nicht dieses!"
            correct_answer: "A"
            hint: "Es ist nach Hedy Lamarr benannt."
            question_score: '10'
        2:
            question_text: "Welche müssen in die Lücken gefüllt werden, um den Text Hello! erscheinen zu lassen?"
            mp_choice_options:
            -   option: |
                    ```
                    {echo}
                    ```
                feedback: "`{echo}` wiederholt eine gegebene Antwort."
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "Richtig!"
            -   option: |
                    ```
                    hallo
                    ```
                feedback: "Hallo ist kein Befehl."
            -   option: |
                    ```
                    {ask}
                    ```
                feedback: "Mit `{ask}` kannst du eine Frage stellen."
            correct_answer: "B"
            hint: "_?_ Hallo Welt!"
            question_score: '10'
            code: "___ Hallo!\n"
        3:
            question_text: "Wie fragst du, was jemandes Lieblingsfarbe ist?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} Was ist deine Lieblingsfarbe?
                    ```
                feedback: "`{print}` gibt Text aus, aber es stellt keine Fragen."
            -   option: |
                    ```
                    {ask} {print} Was ist deine Lieblingsfarbe?
                    ```
                feedback: "Du brauchst nur einen Befehl, nicht zwei."
            -   option: |
                    ```
                    {ask} Was ist deine Lieblingsfarbe?
                    ```
                feedback: "Great!"
            -   option: |
                    ```
                    {echo} Was ist deine Lieblingsfarbe?
                    ```
                feedback: "`{echo}` gibt deine Antwort aus."
            correct_answer: "C"
            hint: "Mit dem `{ask}`-Befehl kannst du etwas fragen"
            question_score: '10'
        4:
            question_text: "Was ist falsch an diesem Code?"
            code: |-
                Hallo, ich bin Hedy!
                {ask} Wer bist du?
                {echo} Hallo…
            mp_choice_options:
            -   option: "`{print}` fehlt in Zeile 1."
                feedback: "Richtig!"
            -   option: "Im in Zeile 1 ist falsch geschrieben."
                feedback: "Im ist absichtlich falsch geschrieben; Hedy versteht die einfach Anführungszeichen noch nicht."
            -   option: "`{echo}` ist kein Befehl."
                feedback: "`{echo}` ist ein Befehl, es gibt noch einen weiteren Fehler."
            -   option: "Nichts! Der Code ist perfekt!"
                feedback: "Falsch, schau nochmal genau hin!"
            correct_answer: "A"
            hint: "Zeile 1 sieht nicht ganz richtig aus"
            question_score: '10'
        5:
            question_text: "Welcher Befehl fehlt in Zeile 2?"
            code: |-
                {ask} Was ist dein Lieblingstier?
                _?_ Also ist dein Lieblingstier...
            mp_choice_options:
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "Nein, du möchtest, dass dir die Antwort laut zurückgegeben wird."
            -   option: |
                    ```
                    Hedy
                    ```
                feedback: "Hedy ist kein Befehl."
            -   option: |
                    ```
                    {ask}
                    ```
                feedback: "Mit `{ask}` kannst du fragen stellen."
            -   option: |
                    ```
                    {echo}
                    ```
                feedback: "Right on!"
            correct_answer: "D"
            hint: "Du möchtest die Antwort am Ende von Zeile 2 sehen..."
            question_score: '10'
        6:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                {print} Hi ich bin Hedy!
                {print} Welches Fußball-Team unterstützt du?
                {echo} Du unterstützt...
                {print} Cool! Ich auch!
            mp_choice_options:
            -   option: "In Zeile 1 sollte `{print}` mit `{ask}` ersetzt werden."
                feedback: "`{print}` in Zeile 1 ist richtig."
            -   option: "In Zeile 2 sollte `{print}` mit `{ask}` ersetzt werden."
                feedback: "Großartig! Du hast aufgepasst!"
            -   option: "Zeile 3 muss mit `{print}` anstelle von `{echo}` beginnen."
                feedback: "`{echo}` ist richtig."
            -   option: "In Zeile 4, `{print}` ist falsch geschrieben."
                feedback: "Nein, der Fehler liegt woanders"
            correct_answer: "B"
            hint: "Prüfe die `{print}` Befehle."
            question_score: '10'
        7:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                {print} Willkommen bei Hedys Restaurant!
                {ask} Was würdest du gerne essen?
                {echo}  Deine Bestellung lautet ...
                {print} Kommt sofort! Guten Appetit!
            mp_choice_options:
            -   option: "In Zeile 1 sollte `{print}` mit `{ask}` ersetzt werden"
                feedback: "Bist du sicher, dass etwas nicht stimmt?"
            -   option: "In Zeile 1 sollte `{print}` mit `{echo}` ersetzt werden"
                feedback: "Bist du sicher, dass etwas nicht stimmt?"
            -   option: "In Zeile 3 sollte `{echo}` mit `{print}` ersetzt werden"
                feedback: "Bist du sicher, dass etwas nicht stimmt?"
            -   option: "Nichts! Dies ist ein perfekter Code!"
                feedback: "Richtig!"
            correct_answer: "D"
            hint: "Prüfe den Code Zeile für Zeile"
            question_score: '10'
        8:
            question_text: "Wie wird der Befehl `{echo}` verwendet?"
            mp_choice_options:
            -   option: "Du kannst `{ask}` verwenden um eine Frage zu stellen."
                feedback: "Dafür ist `{ask}` da!"
            -   option: "Du kannst  es benutzen um Text auszugeben."
                feedback: "Dafür ist `{print}` da!"
            -   option: "Du kannst es verwenden, um eine Antwort zu wiederholen."
                feedback: "Gut gemacht!"
            -   option: "Du kannst es verwenden, um Text verschwinden zu lassen."
                feedback: "Das ist nicht richtig..."
            correct_answer: "C"
            hint: "`{echo}` is used after an `{ask}` command."
            question_score: '10'
        9:
            question_text: "Was ist an diesem Code falsch?"
            code: |-
                {print} Hallo!
                {print} Wie geht es dir?
                {echo} Also geht es dir...
            mp_choice_options:
            -   option: "`{print}` in line 1 should be `{ask}`"
                feedback: "Nein, `{print}` ist richtig. Wo wird die Frage gestellt?"
            -   option: "`{print}` in line 2 should be `{ask}`"
                feedback: "Super!"
            -   option: "`{echo}` in Zeile 3 sollte `{ask}` sein"
                feedback: "Nein, `{echo}` ist richtig. Wo wird die Frage gestellt?"
            -   option: "Nichts. Dies ist einwandfreier Code!"
                feedback: "Suche sorgfältig nach dem Fehler..."
            correct_answer: "B"
            hint: "`{ask}` erlaubt es dir, eine Frage zu stellen"
            question_score: '10'
        10:
            question_text: "Bist du bereit für Level 2?"
            mp_choice_options:
            -   option: "Ja!"
                feedback: "Großartig! Gehen wir zum nächsten Level!"
            -   option: "No"
                feedback: "Wie schade... Du kannst in Level 1 noch etwas üben!"
            correct_answer: "A"
            hint: "Auf geht's!"
            question_score: '10'
    2:
        1:
            question_text: "Welche Aussage ist wahr?"
            mp_choice_options:
            -   option: "Du kannst den {print} Befehl benutzen, um Fragen zu stellen."
                feedback: "Dazu ist frage da"
            -   option: "Du kannst den {ask} Befehl benutzen um eine Antwort auszugeben."
                feedback: "Das ist nicht richtig"
            -   option: "Mit dem {print} Befehl kannst du Text erscheinen lassen"
                feedback: "Gut"
            -   option: "Mit dem {sleep} Befehl kannst du Text vom Bildschirm entfernen."
                feedback: "So funktioniert `{sleep}` nicht."
            correct_answer: "C"
            hint: "`{print}` funktioniert genauso wie in Level 1"
            question_score: '10'
        2:
            question_text: "Welcher Code ist korrekt?"
            mp_choice_options:
            -   option: |
                    ```
                    name {is} {ask} Wie ist dein Name?
                    ```
                feedback: "Super!"
            -   option: |
                    ```
                    {ask} {is} name Wie ist dein Name?
                    ```
                feedback: "Die Worte sind richtig, die Reihenfolge nicht!"
            -   option: |
                    ```
                    {ask} Wie lautet dein Name?
                    ```
                feedback: "Das funktionierte in Level 1, aber in Level 2 und höhere funktioniert es anders."
            -   option: |
                    ```
                    {ask} Wie lautet dein Name? {is} name
                    ```
                feedback: "Die Worte sind richtig, die Reihenfolge nicht!"
            correct_answer: "A"
            hint: "`{ask}` funktioniert nicht wie in Level 1"
            question_score: '10'
        3:
            question_text: "Was erscheint in der Ausgabe, wenn du diesen Code ausführst?"
            code: |-
                name {is} Marleen
                {print} name geht auf den Markt und kauft einen Apfel.
            mp_choice_options:
            -   option: "name geht auf den Markt und kauft einen Apfel."
                feedback: "Das Wort name wird durch Marleen ersetzt"
            -   option: "Marleen geht auf den Markt."
                feedback: "Der zweite Teil des Satzes wird nicht ausgelassen!"
            -   option: "Marleen geht auf den Markt und kauft einen Apfel."
                feedback: "Right on!"
            -   option: "Marleen geht auf den Markt und Marleen kauft einen Apfel."
                feedback: "Sie wird nicht durch name ersetzt"
            correct_answer: "C"
            hint: "Das Wort name wird durch Marleen ersetzt"
            question_score: '10'
        4:
            question_text: "Was wird auf dem Ausgabebildschirm angezeigt, wenn du diesen Code ausführst?"
            code: |-
                name {is} Hedy
                {print} Hi my name is name!
            mp_choice_options:
            -   option: "Hi my name is name"
                feedback: "Der Variablenname wird durch Hedy ersetzt"
            -   option: "Hi my name is Hedy"
                feedback: "Der Variablenname wird durch Hedy ersetzt"
            -   option: "Hi my Hedy is name"
                feedback: "Der Variablenname wird durch Hedy ersetzt"
            -   option: "Hi my Hedy is Hedy"
                feedback: "Richtig, dieser Fehler wird in Level 3 behoben!"
            correct_answer: "D"
            hint: "'name' wird an beiden Stellen durch 'Hedy' ersetzt"
            question_score: '10'
        5:
            question_text: "Was passiert wenn du den `{sleep}` Befehl verwendest?"
            mp_choice_options:
            -   option: "Es verlangsamt deinen Computer"
                feedback: "glücklicherweise nicht!"
            -   option: "Es schließt Hedy"
                feedback: "glücklicherweise nicht!"
            -   option: "Dein Programm pausiert für eine Sekunde und fährt dann fort"
                feedback: "Das ist korrekt!"
            -   option: "Du fügst es am Ende ein, damit Hedy weiß, dass dein Programm fertig ist"
                feedback: "Nein, es wäre am Ende deines Codes nutzlos"
            correct_answer: "C"
            hint: "Der Computer wartet eine Sekunde lang beim Befehl `{sleep}`"
            question_score: '10'
        6:
            question_text: "Was sollte in den Zeilen stehen?"
            code: |-
                {print} Und der Preis für die beste Programmiersprache geht an...
                _?_
                {print} Hedy!
            mp_choice_options:
            -   option: |
                    ```
                    {sleep}
                    ```
                feedback: "Perfekt!"
            -   option: |
                    ```
                    {echo}
                    ```
                feedback: "Hier gibt es nichts zu wiederholen"
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "Es gibt hier keinen Text für `{print}`"
            -   option: |
                    ```
                    {ask}
                    ```
                feedback: "Es gibt keine Frage, die gestellt wird"
            correct_answer: "A"
            hint: "Pause für dramatischen Effekt..."
            question_score: '10'
        7:
            question_text: "Welcher Befehl sollte in Zeile 2 verwendet werden?"
            code: |-
                {print} Ich werde in 3 Sekunden explodieren!
                _?_
                {print} BOOM!
            mp_choice_options:
            -   option: |
                    ```
                    {print} 3
                    ```
                feedback: "Du brauchst `{print}` nicht"
            -   option: |
                    ```
                    {sleep} 3
                    ```
                feedback: "Perfekt!"
            -   option: |
                    ```
                    {sleep}
                    ```
                feedback: "Auf diese Weise wird die Bombe in 1 Sekunde explodieren"
            -   option: |
                    ```
                    {sleep} {sleep} {sleep}
                    ```
                feedback: "Mach es dir leichter, indem du die Zahl 3 verwendest"
            correct_answer: "B"
            hint: "Du willst, dass der Computer 3 Sekunden lang wartet"
            question_score: '10'
        8:
            question_text: "Wie würdest du die erste Zeile des Codes korrigieren?"
            code: |-
                {ask} {is} Wie alt bist du?
                {print} age
            mp_choice_options:
            -   option: |
                    ```
                    age {ask} {is} Wie alt bist du?
                    ```
                feedback: "Das ist die falsche Reihenfolge"
            -   option: |
                    ```
                    {ask} {is} age Wie alt bist du?
                    ```
                feedback: "Das ist die falsche Reihenfolge"
            -   option: |
                    ```
                    age {is} {ask} Wie alt bist du?
                    ```
                feedback: "Du hast es verstanden!"
            -   option: |
                    ```
                    age {is} Wie alt bist du?
                    ```
                feedback: "Where is the `{ask}` command?"
            correct_answer: "C"
            hint: "Der Variablenname sollte an erster Stelle stehen"
            question_score: '10'
        9:
            question_text: "Was läuft in diesem Code schief?"
            code: |-
                dogs {is} animal
                {print} I love animal
            mp_choice_options:
            -   option: "Zeile 1 sollte lauten: dogs `{is}` animals"
                feedback: "Der Variablenname ist animal"
            -   option: "Zeile 1 sollte lauten: animal `{is}` dogs"
                feedback: "Great!"
            -   option: "Zeile 2 sollte lauten: `{print}` I love animals"
                feedback: "Der Variablenname ist animal"
            -   option: "Zeile 2 sollte lauten: `{sleep}` I love animals"
                feedback: "Schlafe wird nicht benutzt, um Text zu `{print}`"
            correct_answer: "B"
            hint: "Du willst mit  `{print}`  'I love dogs' ausgeben"
            question_score: '10'
        10:
            question_text: "Welcher Befehl muss in Zeile 1 verwendet werden?"
            code: |-
                sorte {is} _?_
                {print} Dein Lieblingseis ist...
                {sleep}
                {print} sorte
            mp_choice_options:
            -   option: |
                    ```
                    {sleep} 3
                    ```
                feedback: "Du willst die Lieblingssorte wissen!"
            -   option: |
                    ```
                    {print} Erdbeere
                    ```
                feedback: "Du willst keinen  `{print}` Befehl in der Mitte der Zeile..."
            -   option: |
                    ```
                    Erdbeere, Schokolade, Vanille
                    ```
                feedback: "So machst du eine Liste. Das willst du jetzt gerade nicht."
            -   option: |
                    ```
                    {ask} Was ist dein Lieblingseis?
                    ```
                feedback: "Das ist richtig!"
            correct_answer: "D"
            hint: "Du willst mit `{ask}` eine Frage stellen"
            question_score: '10'
    3:
        1:
            question_text: "Mit welchem Befehl kann Hedy etwas Zufälliges auswählen?"
            mp_choice_options:
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "`{print}` wird verwendet, um Texte auszugeben"
            -   option: |
                    ```
                    {ask}
                    ```
                feedback: "`{ask}` wird verwendet, um Fragen zu stellen"
            -   option: |
                    ```
                    {is}
                    ```
                feedback: "`{is}` wird verwendet, um eine Liste zu erstellen"
            -   option: |
                    ```
                    {at} {random}
                    ```
                feedback: "Korrekt!"
            correct_answer: "D"
            hint: "Zufällig bedeutet ohne Plan."
            question_score: '10'
        2:
            question_text: "Welcher Fehler versteckt sich in diesem Code?"
            code: |-
                tiere {is} Hund Katze Kuh
                {print} tiere {at} {random}
            mp_choice_options:
            -   option: "Du brauchst Beistriche in Zeile 1: Hund, Katze, Kuh."
                feedback: "Gut gemacht!"
            -   option: "Zeile 1 muss mit  `{print}` beginnen."
                feedback: "Nein, `{print}` brauchst du nicht"
            -   option: "Zeile 2 muss sein 'tier' statt 'tiere'',"
                feedback: "tiere ist korrekt."
            -   option: "`{at} {random}` ist nicht richtig geschrieben"
                feedback: "`{at} {random}` ist die richtige Schreibweise"
            correct_answer: "A"
            hint: "In Zeile 1 hat sich ein Fehler eingeschlichen"
            question_score: '10'
        3:
            question_text: "How do you fix the mistake in line 2 of this code?"
            code: |-
                optionen {is} Schere, Stein, Papier
                {print} Schere, Stein, Papier {at} {random}
            mp_choice_options:
            -   option: |
                    ```
                    {at} {random} {print} options
                    ```
                feedback: "Fast richtig. Die Reihenfolge der Wörter ist noch nicht korrekt."
            -   option: |
                    ```
                    {print} Stein {at} {random}
                    ```
                feedback: "Du willst, dass Hedy nicht immer Stein mit {print} ausgibt, manchmal möchtest du auch Schere oder Papier."
            -   option: |
                    ```
                    {print} options {at} {random}
                    ```
                feedback: "Sehr gut!"
            -   option: "Nichts, der Code ist korrekt!"
                feedback: "Such genau nach dem Fehler"
            correct_answer: "C"
            hint: "Die Variable (die Liste) heißt optionen."
            question_score: '10'
        4:
            question_text: "Was muss in Zeile 2 geändert werden, um einen Zufallspreis auszugeben?"
            code: |-
                preise {is} 1 Euro, 100 Euro, 1 million Euro
                {print} preis {at} {random}
            mp_choice_options:
            -   option: |
                    ```
                    {print} preis
                    ```
                feedback: "Du möchtest nicht das Wort `{print}` ausgeben, aber du möchtest einen Preis `{print}` aus deiner Liste `{at} {random}`"
            -   option: |
                    ```
                    {print} preise {at} {random}
                    ```
                feedback: "Großartig! Du hast wirklich aufgepasst."
            -   option: |
                    ```
                    {print} {at} {random} preise
                    ```
                feedback: "`{at} {random}` wird hinter der Variablen platziert."
            -   option: "Nichts, dieser Code ist in Ordnung."
                feedback: "Such aufmerksam nach dem Fehler den du übersehen hast!"
            correct_answer: "B"
            hint: "Der Variablenname ist prices"
            question_score: '10'
        5:
            question_text: "Wo ist der Fehler in diesem Code?"
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                {print} problemstellung
                antworten {is} ja, nein, vielleicht
                {print} antworten {at} {random}
            mp_choice_options:
            -   option: "Zeile 1 sollte `{print}` anstelle von `{ask}` enthalten"
                feedback: "Nein, das ist nicht falsch."
            -   option: "Zeile 2 soll `{ask}` anstelle von `{print}` enthalten"
                feedback: "Nein das ist nicht falsch."
            -   option: "Zeile 2 sollte antworten `{at} {random}` `{is}` ja, nein, vielleicht"
                feedback: "Nein, das ist nicht falsch."
            -   option: "Nichts, dieser Code ist perfekt"
                feedback: "Das ist richtig!"
            correct_answer: "D"
            hint: "Hat dieser Code überhaupt einen Fehler?"
            question_score: '10'
        6:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                antworten ja, nein, vielleicht
                {print} antworten {at} {random}
            mp_choice_options:
            -   option: "Zeile 2 soll problemstellung anstelle von antworten enthalten"
                feedback: "Nein das stimmt nicht"
            -   option: "Zeile 2 braucht den `{is}` Befehl"
                feedback: "Richtig"
            -   option: "Zeile 3 soll antwort anstelle von antworten enthalten"
                feedback: "Nein die Variable heißt antworten"
            -   option: "Nichts! Dieser Code ist großartig!"
                feedback: "Tatsächlich hat Zeile 2 einen Fehler."
            correct_answer: "B"
            hint: "Da stimmt etwas nicht mit Zeile 2."
            question_score: '10'
        7:
            question_text: "Was macht der `{add}` Befehl?"
            code: |-
                books {is} Harry Potter, The Hobbit, Green Eggs and Ham
                your_book {is} {ask} What is your favorite book?
                {add} your_book {to} books
                {print} books {at} {random}
            mp_choice_options:
            -   option: "Der `{add}` Befehl entfernt ein zufälliges Buch aus der Liste"
                feedback: "Der entferne-Befehl entfernt, der addiere-Befehl fügt hinzu"
            -   option: "Der `{add}` Befehl fügt ein zufälliges Buch zur Liste hinzu"
                feedback: "Tut es nicht. Es fügt eine Antwort zur Liste hinzu!"
            -   option: "Der `{add}` Befehl fügt dein Lieblingsbuch zur Liste hinzu"
                feedback: "Richtig!"
            -   option: "Der `{add}` Befehl gibt dein Lieblingsbuch aus."
                feedback: "Nein, es fügt dein Lieblingsbuch zur Liste hinzu"
            correct_answer: "C"
            hint: "Der `{add}` Befehl fügt ein Buch hinzu, aber welches?"
            question_score: '10'
        8:
            question_text: "Was ist die Ausgabe dieses Code?"
            code: |-
                chips {is} Meersalz, Paprika, Saure Sahne
                {remove} Meersalz {from} chips
                {remove} Paprika {from} chips
                {print} chips {at} {random}
            mp_choice_options:
            -   option: "Das kannst du nicht sagen, weil Hedy mit `{print}` in Verbindung mit `{at} {random}` eine der 3 Geschmacksrichtungen ausgibt"
                feedback: "Schau dir den `{remove}` Befehl an"
            -   option: "sea salt"
                feedback: "Meersalz wird von der Liste entfernt"
            -   option: "Paprika"
                feedback: "Paprika wird von der Liste entfernt"
            -   option: "Saure Sahne"
                feedback: "Das ist richtig!"
            correct_answer: "D"
            hint: "Es gibt 3 Geschmacksrichtungen, aber 2 werden entfernt. Welche bleibt übrig?"
            question_score: '10'
        9:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                farben {is} Blau, Lila, Grün
                gewählte_farbe {is} {ask} Welche Haarfarbe würdest du nicht haben wollen?
                {remove} gewählte_farbe {from} farben
                {print} Ich werde meine Haare farbe {at} {random} färben
            mp_choice_options:
            -   option: "Zeile 3 sollte sein: `{remove}` Blau `{from}` farben"
                feedback: "Aber vielleicht möchtest du blaues Haar!"
            -   option: "Zeile 3 sollte einen `{add}` Befehl anstelle eines `{remove}` Befehls haben"
                feedback: "Du möchtest die gewählte Farbe entfernen, also ist `{remove}` richtig."
            -   option: "In Zeile 4 sollte die Variable farben sein anstelle von farbe"
                feedback: "Großartig gemacht!"
            -   option: "Nichts, dies ist korrekter Code!"
                feedback: "Finde den Fehler!"
            correct_answer: "C"
            hint: "Schau in Zeile 3"
            question_score: '10'
        10:
            question_text: "Was sollte in den Lücken sein _?_?"
            code: |-
                gassigeher {is} Papa, Mama, Sam, Petra
                gestern_gegangen {is} {ask} Wer ging gestern Gassi?
                {print} gestern_gegangen sollte heute nicht erneut mit dem Hund Gassi gehen
                _?_
                {print} gassigeher {at} {random} , du bist dran mit Gassi gehen!
            mp_choice_options:
            -   option: |
                    ```
                    {remove} gestern_gegangen {from} gassigeher
                    ```
                feedback: "Super!"
            -   option: |
                    ```
                    {remove} gestern gegangen {to} gassigeher
                    ```
                feedback: "`{remove} {from}` or `{add} {to}`, not `{remove} {to}`"
            -   option: |
                    ```
                    {remove} gassigeher {from} gestern
                    ```
                feedback: "gestern ist keine Variable"
            -   option: |
                    ```
                    {add} gestern_gegangen {to} gassigeher
                    ```
                feedback: "Dies hat die Wahrscheinlichkeit erhöht, dass die Person die gestern ging jetzt schon wieder gehen muss. Das ist gemein."
            correct_answer: "A"
            hint: "Die Person, die gestern ging, sollte von der Liste entfernt werden."
            question_score: '10'

    4:
        1:
            question_text: "Welche dieser Aussagen ist wahr?"
            mp_choice_options:
            -   option: "`{print}` und `{ask}` benötigen nun Anführungszeichen"
                feedback: "Das ist richtig"
            -   option: "Nur `{print}` benötigt Anführungszeichen"
                feedback: "`{ask}` benötigt ebenfalls Anführungszeichen!"
            -   option: "`{at} {random}` funktioniert in Level 4 nicht mehr"
                feedback: "`{at} {random}` funktioniert weiterhin"
            -   option: "`{at} {random}` benötigt nun Anführungszeichen"
                feedback: "Nein, aber 2 andere Befehle schon."
            correct_answer: "A"
            hint: "In Level 4 benötigst du für 2 Befehle Anführungszeichen."
            question_score: '10'
        2:
            question_text: "Welcher Code benutzt die richtigen Anführungszeichen?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} `hello`
                    ```
                feedback: "Dieses Anführungszeichen ist schräg, du brauchst ein gerades."
            -   option: |
                    ```
                    {print} 'hallo'
                    ```
                feedback: "Richtig"
            -   option: |
                    ```
                    {print} hallo
                    ```
                feedback: "Hier gibt es keine Anführungszeichen!."
            -   option: |
                    ```
                    {print} ,hallo,
                    ```
                feedback: "Dies ist ein Komma, du brauchst Anführungszeichen."
            correct_answer: "B"
            hint: "Wähle die richtigen Anführungszeichen."
            question_score: '10'
        3:
            question_text: "Wo werden die Anführungszeichen richtig benutzt?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} Hi Im Hedy
                    ```
                feedback: "Bitte füge Anführungszeichen hinzu!"
            -   option: |
                    ```
                    {print} 'Hi Im Hedy
                    ```
                feedback: "Wörter, die du ausgeben möchtest, benötigen davor und dahinter Anführungszeichen."
            -   option: |
                    ```
                    '{print} Hi Im Hedy'
                    ```
                feedback: "Das erste Anführungszeichen sollte hinter {print} stehen"
            -   option: |
                    ```
                    {print} 'Hi Im Hedy'
                    ```
                feedback: "Perfekt!"
            correct_answer: "D"
            hint: "Sowohl vor als auch hinter Wörtern, die du ausgeben möchtest, sollten Anführungszeichen stehen."
            question_score: '10'
        4:
            question_text: "Welche Aussage ist wahr?"
            mp_choice_options:
            -   option: "Du brauchst um `{print}` herum Anführungszeichen, wie hier: `'{print}'`."
                feedback: "Die Anführungszeichen sollten nicht um den Befehl selbst herum stehen."
            -   option: "Du benötigst Anführungszeichen um die Wörter herum, die du ausgeben möchtest."
                feedback: "Super!"
            -   option: "Du brauchst keine Anführungszeichen, wenn du den `{ask}` Befehl benutzt"
                feedback: "Beide, `{print}` und `{ask}` benötigen Anführungszeichen"
            -   option: "Du kannst selbst wählen, ob du Anführungszeichen benutzt oder nicht."
                feedback: "Leider ist Hedy strenger."
            correct_answer: "B"
            hint: "Ab Level 4 musst du Anführungszeichen benutzen."
            question_score: '10'
        5:
            question_text: "Was muss geändert werden, um das Spiel zum Laufen zu bringen?"
            code: |-
                auswahlmöglichkeiten {is} Stein, Schere, Papier
                {print} 'auswahlmöglichkeiten {at} {random}'
            mp_choice_options:
            -   option: |
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: "Schreibe nie Anführungszeichen vor den {print} Befehl."
            -   option: |
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: "auswahlmöglichkeiten ist eine Variable. Du möchtest nicht wortwörtlich 'auswahlmöglichkeiten {at} {random}' ausgeben."
            -   option: |
                    ```
                    {print} options {at} {random}
                    ```
                feedback: "Das ist richtig"
            -   option: "Nichts, das Spiel funktioniert bereits!"
                feedback: "Schau genau hin. Dort ist ein Fehler."
            correct_answer: "C"
            hint: "Du möchtest nicht das Hedy wortwörtlich 'auswahlmöglichkeiten {at} {random}' ausgibt, du möchtest 'Stein' oder 'Papier' oder 'Schere' ausgeben."
            question_score: '10'
        6:
            question_text: "Was wäre eine gute nächste Zeile in diesem Code?"
            code: |-
                preise {is} 1 Euro, 100 Euro, 1 Million Euro
            mp_choice_options:
            -   option: |
                    ```
                    {print} 'Du gewinnst...' preise {at} {random}
                    ```
                feedback: "Großartig! Du kapierst es!"
            -   option: |
                    ```
                    {print} Du gewinnst... 'preise {at} {random}'
                    ```
                feedback: "Hedy wird wortwörtlich 'preise {at} {random}' ausgeben"
            -   option: |
                    ```
                    {print} Du gewinnst... preise {at} {random}
                    ```
                feedback: "Du brauchst einige Anführungszeichen!"
            -   option: |
                    ```
                    {print} 'Du gewinnst... preise {at} {random}'
                    ```
                feedback: "Hedy wird wortwörtlich 'preise {at} {random}'' ausgeben"
            correct_answer: "A"
            hint: "Denk scharf nach: was ist eine Variable und sollte außerhalb von Anführungszeichen stehen? Und was sind normale Wörter, die innerhalb stehen sollten?"
            question_score: '10'
        7:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                antworten {is} ja, nein, vielleicht
                {print} antworten {at} {random}
            mp_choice_options:
            -   option: "Anführungszeichen fehlen in Zeile 1"
                feedback: "Richtig!"
            -   option: "Anführungszeichen fehlen in Zeile 2"
                feedback: "Eine Variable braucht keine Anführungszeichen"
            -   option: "Anführungszeichen fehlen in Zeile 3"
                feedback: "Du möchtest nicht, dass Hedy wortwörtlich 'antworten {at} {random}' ausgibt, also werden hier keine Anführungszeichen gebraucht!"
            -   option: "Nichts, dieser Code ist gut so wie er ist!"
                feedback: "Schau genau hin. Du hast einen Fehler übersehen!"
            correct_answer: "A"
            hint: "Prüfe jede Zeile, ob sie Anführungszeichen benötigen könnte oder nicht."
            question_score: '10'
        8:
            question_text: "Was wäre eine gute nächste Zeile in diesem Code?"
            code: |-
                {print} 'Willkommen bei der Geld-Show!'
                {print} 'Vor dir sind 3 Türen'
                Tür {is} {ask} 'Welche Tür wählst du?'
            mp_choice_options:
            -   option: |
                    ```
                    {print} Also wählst du Tür Tür
                    ```
                feedback: "Wir brauchen Anführungszeichen"
            -   option: |
                    ```
                    {print} 'Also wählst du ' Tür Tür
                    ```
                feedback: "Wenn der Spieler Tür 3 wählt, wird Hedy 'Also wählst du 3 3 ausgeben"
            -   option: |
                    ```
                    {print} 'Also wählst du Tür ' Tür
                    ```
                feedback: "Super!"
            -   option: |
                    ```
                    {print} 'Also wählst du Tür Tür'
                    ```
                feedback: "Hedy wird wortwörtlich 'Also wählst du Tür Tür ausgeben"
            correct_answer: "C"
            hint: "Das zweite Wort Tür sollte mit der Nummer ersetzt werden, das erste sollte weiterhin das Wort Tür sein..."
            question_score: '10'
        9:
            question_text: "Was wird nie im Ausgabebereich erscheinen?"
            code: |-
                clubs {is} Real Madrid, Bayern München, Manchester United, Ajax
                {print} clubs {at} {random} ' wird die Champions League gewinnen'
            mp_choice_options:
            -   option: "Ajax wird die Champions League gewinnen"
                feedback: "Hedy könnte es `{print}`"
            -   option: "Real Madrid wird die Champions League gewinnen"
                feedback: "Hedy könnte es `{print}`"
            -   option: "Bayern München wird die Champions League gewinnen"
                feedback: "Hedy könnte es `{print}`"
            -   option: "FC Barcelona wird die Champions League gewinnen"
                feedback: "Das ist richtig. Es ist nicht in der Liste"
            correct_answer: "D"
            hint: "Was sind Hedys Auswahlmöglichkeiten von denen zufällig gewählt wird?"
            question_score: '10'
        10:
            question_text: "Welche Aussage ist wahr?"
            code: |-
                leute {is} Mama, Papa, Emma, Sophie
                {print} Abgewaschen wird von...
                {print} leute {at} {random}
            mp_choice_options:
            -   option: "Anführungszeichen fehlen in Zeile 1"
                feedback: "Eine Liste benötigt keine Anführungszeichen"
            -   option: "Anführungszeichen fehlen in Zeile 2"
                feedback: "Richtig"
            -   option: "Anführungszeichen fehlen in Zeile 2 und 3"
                feedback: "Zeile 3 benötigt keine Anführungszeichen, weil es nicht wortwörtlich ausgegeben wird"
            -   option: "Nichts, dieser Code hat keine Fehler"
                feedback: "Du hast einen übersehen!"
            correct_answer: "B"
            hint: "Eine Zeile benötigt Anführungszeichen, weil du sie wortwörtlich ausgeben möchtest."
            question_score: '10'
    5:
        1:
            question_text: "What is true?"
            mp_choice_options:
            -   option: "```\n{print}\n```\n"
                feedback: "Es gibt schon einen `{print}` Befehl."
            -   option: "```\n{if}\n```\n"
                feedback: "Der `{if}` Befehl wird in der Zeile darüber benutzt."
            -   option: "```\n{sleep}\n```\n"
                feedback: "Das ist es nicht!"
            -   option: "```\n{else}\n```\n"
                feedback: "Correct!"
            correct_answer: "D"
            hint: "Welches passt zum `{if}` Befehl?"
            question_score: '10'
            code: "zahl {is} {ask} 'Was ist deine Glückszahl?'\n{if} zahl {is} 5 {print} 'Meine auch!'\n_?_ {print} 'Meine Glückszahl ist 5!'"
        2:
            question_text: "Was erscheint im Ausgabebereich, wenn du den Namen Hedy eintippst?"
            code: |-
                name {is} {ask} 'Was ist dein Name?'
                {if} name {is} Hedy {print} 'Spaß' {else} {print} 'weniger Spaß'
            mp_choice_options:
            -   option: "Spaß"
                feedback: "Das ist richtig!"
            -   option: "weniger Spaß"
                feedback: "Wenn der Name Hedy ist, wird 'Spaß'' ausgegeben"
            -   option: "Hedy"
                feedback: "Nein, es gibt den Namen nicht aus"
            -   option: "Error"
                feedback: "Glücklicherweise nicht!"
            correct_answer: "A"
            hint: "`{if}` name `{is}` Hedy `{print}` ...?"
            question_score: '10'
        3:
            question_text: "Was ist das richtige Passwort?"
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            mp_choice_options:
            -   option: "Richtig!"
                feedback: "Dies wird ausgegeben, wenn du das richtige Passwort eintippst"
            -   option: "SECRET"
                feedback: "Das ist richtig!'"
            -   option: "password"
                feedback: "Das Passwort ist nicht Passwort..."
            -   option: "ALARM INTRUDER"
                feedback: "Dies wird ausgegeben, wenn du das falsche Passwort eintippst!"
            correct_answer: "B"
            hint: "`{if}` passwort `{is}` ... `{print}` 'Richtig!'!'"
            question_score: '10'
        4:
            question_text: "Was gibt Hedy aus, wenn du das falsche Passwort eintippst?"
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            mp_choice_options:
            -   option: "Richtig"
                feedback: "Das wird ausgegeben, wenn die richtige Antwort eingegeben wurde, nicht die falsche..."
            -   option: "SECRET"
                feedback: "Das ist nicht die richtige Antwort"
            -   option: "Falsch!"
                feedback: "Nein, dies ist nicht, was Hedy ausgeben wird"
            -   option: "ALARM! INTRUDER!"
                feedback: "Großartig gemacht!"
            correct_answer: "D"
            hint: "Dein Computer wird bei Eindringlingen Alarm schlagen!"
            question_score: '10'
        5:
            question_text: "Warum wird Hedy 'ALARM! EINDINGLING' ausgeben, wenn du 'geheimnis' eintippst?"
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            mp_choice_options:
            -   option: "Weil es in Großbuchstaben sein muss, also GEHEIMNIS"
                feedback: "In der Tat!"
            -   option: "Weil das Passwort Alarm ist"
                feedback: "Nein, dies ist nicht das Passwort."
            -   option: "Weil es falsch geschrieben ist."
                feedback: "Das ist nicht wie man geheimnis schreibt"
            -   option: "Weil Hedy Fehler macht"
                feedback: "No, Hedy is right"
            correct_answer: "A"
            hint: "Die Rechtschreibung des Wortes muss genau gleich sein."
            question_score: '10'
        6:
            question_text: "Welches Wort sollte anstelle des Fragezeichens in der letzten Zeile stehen?"
            code: |-
                {print} 'Ich bin Hedy die Fußballwahrsagerin!'
                {print} 'Ich werde vorhersagen, welchen Platz dein Team am Ende belegen wird!'
                club is {ask} 'Welcher Club ist dein Favorit?'
                {if} club {is} ajax {print} 'Ajax wird natürlich gewinnen!'
                _?_ {print} 'Sorry, dein Club wird auf dem letzten Platz landen...'
            mp_choice_options:
            -   option: |
                    ```
                    {if}
                    ```
                feedback: "`{if}` ist bereits in der obigen Zeile"
            -   option: |
                    ```
                    {at} {random}
                    ```
                feedback: "Nein, du brauchst `{else}`."
            -   option: |
                    ```
                    {else}
                    ```
                feedback: "Great!"
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "`{print}` ist bereits dort, wir brauchen ein Wort davor!"
            correct_answer: "C"
            hint: "`{if}` geht zusammen mit...?"
            question_score: '10'
        7:
            question_text: "Welches Wort sollte anstelle des Fragezeichens stehen?"
            code: |-
                {print} 'Ich kann vorhersagen, ob du ein Millionär sein wirst oder nicht!'
                name {is} {ask} 'Was ist dein Name?'
                {if} name {is} Hedy {print} 'Du wirst ein Millionär sein!'
                {else} _?_ 'Unglücklicherweise... Kein großes Geld für dich.'
            mp_choice_options:
            -   option: |
                    ```
                    {if}
                    ```
                feedback: "`{if}` ist in der Zeile darüber."
            -   option: |
                    ```
                    {at} {random}
                    ```
                feedback: "Nein, du brauchst kein `{at} {random}`."
            -   option: |
                    ```
                    {else}
                    ```
                feedback: "Dort ist bereits ein `{else}` Befehl"
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "Toll!"
            correct_answer: "D"
            hint: "Nach `{else}` folgt ein `{print}` Befehl"
            question_score: '10'
        8:
            question_text: "Welches Wort sollte anstelle des Fragezeichens stehen?"
            code: |-
                Tier {is} {ask} 'Was ist dein Lieblingstier?'
                {if} _?_ {is} Pinguin {print} 'Das ist auch mein Lieblingstier!'
                {else} {print} 'Cool! Ich mag Pinguine.'
            mp_choice_options:
            -   option: |
                    ```
                    Lieblingstier
                    ```
                feedback: "Dies ist nicht der Variablenname."
            -   option: |
                    ```
                    Tier
                    ```
                feedback: "Großartig gemacht!"
            -   option: |
                    ```
                    {if}
                    ```
                feedback: "`{if}` ist bereits dort"
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "Nein, das ist es nicht."
            correct_answer: "B"
            hint: "Was ist der Variablenname?"
            question_score: '10'
        9:
            question_text: "Welche Tür solltest du wählen um zu entkommen??"
            code: |-
                {print} 'Escape from the haunted house!'
                {print} 'There are 3 doors in front of you'
                door {is} {ask} 'Which door do you choose?'
                monsters {is} vampire, werewolf, giant spider
                {if} door {is} 2 {print} 'Yay, you can escape!'
                {else} {print} 'You are being devoured by a... ' monsters {at} {random}
            mp_choice_options:
            -   option: "1"
                feedback: "Schlechte Wahl! Du wirst gegessen"
            -   option: "2"
                feedback: "Super! Du bist entkommen!"
            -   option: "3"
                feedback: "Schlechte Wahl! Du wirst gegessen."
            -   option: "Es ist eine Falle, du wirst immer gegessen werden!"
                feedback: "Glücklicherweise nicht!"
            correct_answer: "B"
            hint: "Eine der Türen wird dich in Sicherheit bringen.."
            question_score: '10'
        10:
            question_text: "Welches Monster steht hinter Tür 1?"
            code: |-
                {print} 'Escape from the haunted house!'
                {print} 'There are 3 doors in front of you'
                door {is} {ask} 'Which door do you choose?'
                monsters {is} vampire, werewolf, giant spider
                {if} door {is} 2 {print} 'Yay, you can escape!'
                {else} {print} 'You are being devoured by a... ' monsters {at} {random}
            mp_choice_options:
            -   option: "Hedy wählt jedes Mal ein zufälliges Monster."
                feedback: "Toll!"
            -   option: "Vampir"
                feedback: "Nicht immer..."
            -   option: "Werwolf"
                feedback: "Nicht immer..."
            -   option: "Riesenspinne"
                feedback: "Nicht immer..."
            correct_answer: "A"
            hint: "Beachte die letzten 3 Wörter... Monster `{at} {random}`..."
            question_score: '10'
    6:
        1:
            question_text: "Was gibt Hedy aus, wenn du diesen Code laufen lässt?"
            code: "{print} 2*10"
            mp_choice_options:
            -   option: "20"
                feedback: "Richtig!"
            -   option: "12"
                feedback: "Nein, das Plus-Zeichen wird für die Addition benutzt"
            -   option: "2*10"
                feedback: "Nein, Hedy wird die Antwort berechnen"
            -   option: "210"
                feedback: "Beachte, dass es eine Berechnung ist."
            correct_answer: "A"
            hint: "Das `*` wird als Multiplikationszeichen benutzt"
            question_score: '10'
        2:
            question_text: "Was benutzt du wenn du zwei Zahlen addieren möchtest?"
            mp_choice_options:
            -   option: "-"
                feedback: "Das ist es nicht"
            -   option: "plus"
                feedback: "Das ist es nicht"
            -   option: "*"
                feedback: "Das ist es nicht"
            -   option: "+"
                feedback: "Richtig!"
            correct_answer: "D"
            hint: "It's the plus sign."
            question_score: '10'
        3:
            question_text: "Was ist Hedys Ausgabe, wenn du diesen Code ausführst?"
            code: "{print} '3*10'"
            mp_choice_options:
            -   option: "30"
                feedback: "Dies wäre die richtige Antwort, wenn es keine Anführungszeichen geben würde."
            -   option: "13"
                feedback: "Versuche es nochmal.."
            -   option: "3*10"
                feedback: "Richtig! Dort sind Anführungszeichen, daher wird Hedy es wortwörtlich ausgeben."
            -   option: "Nichts, Hedy wird eine Fehlermeldung ausgeben."
                feedback: "Nein, Hedy wird es wortwörtlich ausgeben."
            correct_answer: "C"
            hint: "Beachte die Anführungszeichen!!"
            question_score: '10'
        4:
            question_text: "Kim ist 10 Jahre alt. Was wird Hedy für sie ausgeben?"
            code: |-
                name = {ask} 'How many letters are in your name?'
                age = {ask} 'How old are you?'
                luckynumber = name*age
                {print} 'Your lucky number is...' luckynumber
            mp_choice_options:
            -   option: "30"
                feedback: "Beachte, dass Hedy ebenfalls 'Deine Glückszahl ist...' ausgeben wird"
            -   option: "10"
                feedback: "Bitte versuche es nochmal."
            -   option: "Deine Glückszahl ist... 30"
                feedback: "Das ist richtig!"
            -   option: "Deine Glückszahl ist... 10"
                feedback: "Ihre Glückszahl ist Name mal Alter..."
            correct_answer: "C"
            hint: "Kim hat 3 Buchstaben, sie ist 10 Jahre alt, also: Buchstaben mal Alter = 3*10 = 30."
            question_score: '10'
        5:
            question_text: "Wenn 5 Leute im Restaurant essen, wie viel müssen sie insgesamt bezahlen?"
            code: |-
                {print} 'Welcome to Hedys!'
                people = {ask} 'How many people are eating with us tonight?'
                price = people * 10
                {print} 'That will be ' price 'dollar please'
            mp_choice_options:
            -   option: "5 Euro"
                feedback: "Unglücklicherweise ist es nicht so billig."
            -   option: "10 Euro"
                feedback: "Nein, es sind 10 Euro für jeden."
            -   option: "15 Euro"
                feedback: "Das * bedeutet Multiplikation."
            -   option: "50 Euro"
                feedback: "Great!"
            correct_answer: "D"
            hint: "`price` `is` `people` `times` 10"
            question_score: '10'
        6:
            question_text: "Wie viel kostet ein Hamburger in diesem virtuellen Restaurant?"
            code: |-
                {print} 'Welcome at Hedys diner'
                food = {ask} 'What would you like to eat?'
                price = 0
                {if} food {is} hamburger price = 15
                {if} food {is} fries price = 6
            mp_choice_options:
            -   option: "15 Euro"
                feedback: "Super!"
            -   option: "6 Euro"
                feedback: "Die Pommes kosten 6 Euro"
            -   option: "0 Euro"
                feedback: "Der Hamburger ist nicht kostenlos!"
            -   option: "21 Euro"
                feedback: "Das ist der Preis für einen Hamburger und Pommes!"
            correct_answer: "A"
            hint: "Beachte die vierte Zeile."
            question_score: '10'
        7:
            question_text: "Warum sagt Zeile 7 'preis ist preis + 3' anstelle von 'preis ist 3'?"
            code: |-
                {print} 'Welcome at Hedys diner'
                food = {ask} 'What would you like to eat?'
                price = 0
                {if} food {is} hamburger price = price + 15
                {if} food {is} fries price = price + 6
                drinks is {ask} 'What would you like to drink?'
                {if} drinks {is} coke price = price + 3
                {if} drinks {is} water price = price + 1
                {print} price ' dollars please'
            mp_choice_options:
            -   option: "Es könnte genauso gut `preis = 3` gewesen sein."
                feedback: "Nein, das ist nicht wahr. Hedy muss 3 Euro zum Gesamtbetrag addieren."
            -   option: "Weil Hedy `preis = 3` nicht versteht."
                feedback: "Hedy würde es verstehen, aber es würde nicht richtig sein."
            -   option: "Weil Hedy sonst die vorige Bestellung vergessen würde. Der Preis würde insgesamt 3 Euro betragen."
                feedback: "Das ist richtig!"
            -   option: "Weil der Preis 0 Euro ist."
                feedback: "Das ist wahr, jedoch nicht der Grund"
            correct_answer: "C"
            hint: "Der Preis sollte nicht 3 sein, aber 3 Euro mehr als es bereits war"
            question_score: '10'
        8:
            question_text: "Warum ist dieser Code inkorrekt?"
            code: |-
                correct answer = 3*12
                answer = {ask} 'What is 3 times 12?'
                {if} answer {is} correct answer {print} 'Good job!'
                {else} {print} 'No... It was ' correct answer
            mp_choice_options:
            -   option: "Es sollten in Zeile 2 keine Anführungszeichen stehen"
                feedback: "Nein, dort sollten welche sein!"
            -   option: "Die Variable heißt correct answer, aber der Name einer Variablen kann nur aus einem Wort bestehen. Sie sollte also correct_answer heißen"
                feedback: "Richtig!"
            -   option: "Die `{if}` und `{else}` Befehle sollten in der gleichen Zeile stehen."
                feedback: "Nein, das ist nicht wahr."
            -   option: "Die Variable in Zeile 2 kann nicht antwort heißen, weil sie zu ähnlich zur Variable richtige antwort ist."
                feedback: "Variablennamen können ähnlich sein, aber sie dürfen nicht aus 2 Wörtern bestehen..."
            correct_answer: "B"
            hint: "Untersuche die Namen der Variablen."
            question_score: '10'
        9:
            question_text: "Stell dir vor, du liebst Fußball eine 10, du hast 2 Bananen gegessen und hast heute 3 Mal deine Hände gewaschen. Wie schlau denkt die alberne Wahrsagerin, dass du bist?"
            code: |-
                {print} 'Im Hedy the silly fortune teller'
                {print} 'I will predict how smart you are!'
                football = {ask} 'On a scale of 0 to 10 how much do you love football?'
                bananas = {ask} 'How many bananas have you eaten this week?'
                hygiene = {ask} 'How many times did you wash your hands today??'
                result = bananas + hygiene
                result = result * football
                {print} 'You are ' result 'percent smart.'
            mp_choice_options:
            -   option: "10%"
                feedback: "(2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?"
            -   option: "32%"
                feedback: "(2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?"
            -   option: "50%"
                feedback: "Super! Du bist 100 Prozent schlau!"
            -   option: "100%"
                feedback: "(2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?"
            correct_answer: "C"
            hint: "(2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?"
            question_score: '10'
        10:
            question_text: "Welche Aussage ist wahr?"
            code: |-
                name _?_ Hedy
                {print} name 'geht durch den Wald'
            mp_choice_options:
            -   option: "Du kannst nur das Wort ist in die Lücken `_?_` füllen"
                feedback: "Du darfst auch das `=` Zeichen nutzen"
            -   option: "Du kannst entweder das Wort ist oder das `=` Zeichen in die Lücken `_?_` füllen"
                feedback: "Toll!"
            -   option: "Du musst =ist= in Lücken `_?_` füllen"
                feedback: "Nein, ein `=` Zeichen ist genug"
            -   option: "Du kannst nur das `=` Zeichen verwenden, wenn du mit Zahlen arbeitest, nicht mit Wörtern."
                feedback: "Du kannst das `=` auch mit Wörtern benutzen."
            correct_answer: "B"
            hint: "`{is}` und `=` sind beide erlaubt"
            question_score: '10'
    7:
        1:
            question_text: "Wie viele Zeilen Code kannst du mit einem Mal mit dem wiederhole-Befehl in diesem Level wiederholen?"
            mp_choice_options:
            -   option: "0"
                feedback: "Nein, du kannst eine Zeile wiederholen."
            -   option: "1"
                feedback: "Richtig, eine Zeile mit einem Mal"
            -   option: "2"
                feedback: "In diesem Level nur eine Zeile mit einem Mal"
            -   option: "unendlich"
                feedback: "In diesem Level kannst du nur eine Zeile wiederholen"
            correct_answer: "B"
            hint: "Du kannst nur eine Zeile mit einem Mal wiederholen"
            question_score: '10'
        2:
            question_text: "Welcher Code ist richtig?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} 100 {times} 'hallo'
                    ```
                feedback: "`{repeat}` 100 `{times}` `{print}` 'hallo'"
            -   option: |
                    ```
                    {print} {repeat} 100 {times} 'hallo'
                    ```
                feedback: "{repeat} 100 {times} {print} 'hallo'"
            -   option: |
                    ```
                    {repeat} 'hallo' 100 {times}
                    ```
                feedback: "{repeat} 100 {times} {print} 'hallo'"
            -   option: |
                    ```
                    {repeat} 100 {times} {print} 'hallo'
                    ```
                feedback: "Das ist richtig!"
            correct_answer: "D"
            hint: "Erst der wiederhole-Befehl, dann der `{print}` Befehl"
            question_score: '10'
        3:
            question_text: "Ist dieser Code richtig oder falsch?"
            code: "{repeat} 100 {times} 'Hallo!'"
            mp_choice_options:
            -   option: "Right"
                feedback: "Nein, ein Wort fehlt"
            -   option: "Falsch, das Wort `{repeat}` fehlt"
                feedback: "Das Wort `{repeat}` ist da, ein anderes Wort fehlt"
            -   option: "Falsch, das Wort `{times}` fehlt"
                feedback: "Das Wort `{times}` ist da, ein anderes Wort fehlt."
            -   option: "Falsch, das Wort `{print}` fehlt"
                feedback: "Richtig"
            correct_answer: "D"
            hint: "Es sollte so sein: `{repeat}` 100 `{times}` `{print}` 'Hallo'"
            question_score: '10'
        4:
            question_text: "Welches Wort ist falsch im Code?"
            code: |-
                {print} 'I'm blue'
                {repeat} 7 {times} {print} 'da ba dee, da ba da'
            mp_choice_options:
            -   option: |
                    ```
                    I'm
                    ```
                feedback: "Das ist richtig!"
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "`{print}` ist richtig geschrieben"
            -   option: |
                    ```
                    {repeat}
                    ```
                feedback: "`{repeat}` ist richtig geschrieben"
            -   option: |
                    ```
                    {times}
                    ```
                feedback: "`{times}` ist richtig geschrieben"
            correct_answer: "A"
            hint: "I'm ist falsch, du kannst keine Apostrophe verwenden"
            question_score: '10'
        5:
            question_text: "Ist dieser Code richtig oder falsch?"
            code: |-
                {repeat} 100 {times} {print} 'Hedy ist toll!'
            mp_choice_options:
            -   option: "Richtig"
                feedback: "Das ist richtig!"
            -   option: "Falsch"
                feedback: "Das ist es nicht"
            correct_answer: "A"
            hint: "Der Code ist richtig!"
            question_score: '10'
        6:
            question_text: "Was wird die Ausgabe dieses Code sein?"
            code: |-
                {print} 'The wheels on the bus go'
                {repeat} 3 {times} {print} ' round and round'
            mp_choice_options:
            -   option: "the wheels on the bus go\nround and round"
                feedback: "Nur die zweite Zeile wird 3 mal wiederholt"
            -   option: "the wheels on the bus go\nthe wheels on the bus go\nthe wheels on the bus go\nround and round"
                feedback: "Nur die zweite Zeile wird 3 Mal wiederholt"
            -   option: "the wheels on the bus go\nround and round\nthe wheels on the bus go\nround and round\nthe wheels on the bus go\nround and round"
                feedback: "Nur die zweite Zeile wird 3 Mal wiederholt"
            -   option: "the wheels on the bus go\nround and round\nround and round\nround and round"
                feedback: "All though the town! Perfect!"
            correct_answer: "D"
            hint: "Nur 'round and round' wird 3 Mal wiederholt."
            question_score: '10'
        7:
            question_text: "Was wird die Ausgabe dieses Code sein?"
            code: |-
                {repeat} 2 {times} {print} 'We will'
                {print} 'ROCK YOU!'
            mp_choice_options:
            -   option: "We will We will\nROCK YOU!"
                feedback: "'We will' wird nicht zwei Mal in einer Zeile erscheinen"
            -   option: "We will\nWe will\nROCK YOU!"
                feedback: "Great!"
            -   option: "We will\nROCK YOU!\nWe will\nROCK YOU!"
                feedback: "ROCK YOU! wird nicht wiederholt"
            -   option: "We will\nROCK YOU!"
                feedback: "Beachte den wiederhole-Befehl"
            correct_answer: "B"
            hint: "Beachte den `{repeat}` Befehl."
            question_score: '10'
        8:
            question_text: "Welcher Hedy code gehört zu dieser Ausgabe?"
            code: "Here comes the sun\nDo do do do\nHere comes the sun\nAnd I say\nIts alright"
            mp_choice_options:
            -   option: |
                    ```
                    {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: "Toll, du kannst den `{repeat}` Befehl hier nicht verwenden."
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                feedback: "Wo hast du 'Do do do do' gelassen?"
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: "Dies ist nicht die richtige Reihenfolge.."
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {repeat} 2 {times} {print} 'Do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: "Dies ist nicht die richtige Reihenfolge.."
            hint: "`{repeat}` kann nur benutzt werden, wenn du die gleiche Zeile mehrfach in Folge ausführen möchtest."
            correct_answer: "A"
            question_score: '10'
        9:
            question_text: "Welcher Hedy-Code gehört dieser Ausgabe?"
            code: |-
                Batman flog durch Gotham.
                Als er plötzlich jemanden schreien hörte...
                Hilfe!
                Hilfe!
                Hilfe!
                Bitte helft mir!
            mp_choice_options:
            -   option: |
                    ```
                    {print} 'Batman was flying through Gotham. '
                    {print} 'When suddenly he heard someone screaming...'
                    {print} 'Help!'
                    {repeat} 3 {times} {print} 'Please help me!'
                    ```
                feedback: "Deine Wiederholung ist falsch."
            -   option: |
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} 'Help!'
                    {print} 'Please help me!'
                    ```
                feedback: "Der `{print}` Befehl fehlt in Zeile 3."
            -   option: |
                    ```
                    {print} Batman was flying through Gotham.
                    {print} When suddenly he heard someone screaming...
                    {repeat} 3 {times} {print} Help!
                    {print} Please help me!
                    ```
                feedback: "Dir fehlen die Anführungszeichen"
            -   option: |
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} {print} 'Help!'
                    {print} 'Please help me!'
                    ```
                feedback: "Perfekt"
            question_score: '10'
            hint: "'Help!' wird 3 Mal wiederholt."
            correct_answer: "D"
        10:
            question_text: "Welcher Hedy-Code gehört zu dieser Ausgabe?"
            code: |-
                if youre happy and you know it clap your hands
                if youre happy and you know it clap your hands
                if youre happy and you know it and you really want to show it
                if youre happy and you know it clap your hands
            mp_choice_options:
            -   option: |
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: "Fast! Die erste Zeile braucht ein weiteres Wort"
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: "Great!"
            -   option: |
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
                feedback: "Dies ist nicht die richtige Reihenfolge."
            -   option: |
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 times 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
                feedback: "Dies ist nicht in der richtigen Reihenfolge."
            correct_answer: "B"
            hint: "Beachte die Reihenfolge der Sätze."
            question_score: '10'
    8:
        1:
            question_text: "Welche Ausgabe wird von diesem Code erzeugt?"
            code: |-
                {repeat} 2 {times}
                    {print} 'Hallo'
                    {print} 'Ich bin Hedy!'
            mp_choice_options:
            -   option: "Hallo\nIch bin Hedy!\n"
                feedback: "Alles wird doppelt ausgegeben."
            -   option: "Hello\nHello\nIch bin Hedy\n"
                feedback: "Die zweite Zeile wird ebenfalls doppelt wiederholt."
            -   option: "Hello\nIch bin Hedy!\nHello\nIch bin Hedy!\n"
                feedback: "Super!"
            -   option: "Hello\nHello\nIch bin Hedy!\nIch bin Hedy!\n"
                feedback: "Alles wird doppelt ausgegeben"
            correct_answer: "C"
            hint: "Beide Zeilen werden zweimal wiederholt."
            question_score: '10'
        2:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                {repeat} 5 {times}
                {print} 'Hedy ist cool!'
            mp_choice_options:
            -   option: "Dies sollte nur eine Zeile sein, nicht 2."
                feedback: "Nein, es sollten 2 Zeilen sein."
            -   option: "Das `{print}`-Kommando muss entfernt werden."
                feedback: "Nein, du brauchst es."
            -   option: "Da ist ein Schreibfehler im `{repeat}` Befehl."
                feedback: "Nein, wiederhole ist die richtige Schreibweise"
            -   option: "Die zweite Zeile sollte mit 4 Leerzeichen als Einrückung beginnen."
                feedback: "Richtig!"
            correct_answer: "D"
            hint: "Etwas fehlt in der zweiten Zeile?"
            question_score: '10'
        3:
            question_text: "Welche Ausgabe wird erzeugt, wenn du dieses Programm ausführst?"
            code: |-
                {repeat} 3 {times}
                    {print} 'Baby shark tututudutudu'
                {print} 'Baby shark'
            mp_choice_options:
            -   option: "Baby shark tututudutudu\nBaby shark\n"
                feedback: "Beachte den `{repeat}` Befehl!"
            -   option: "Baby shark tututudutudu\nBaby shark\nBaby shark tututudutudu\nBaby shark\nBaby shark tututudutudu\nBaby shark\n"
                feedback: "Die letzte Zeile hat keine Einrückung, daher wird sie nicht wiederholt."
            -   option: "Baby shark tututudutudu\nBaby shark tututudutudu\nBaby shark tututudutudu\nBaby shark\n"
                feedback: "Richtig!"
            -   option: "Baby shark tututudutudu\nBaby shark\nBaby shark\nBaby shark\n"
                feedback: "Was wird wiederholt und was nicht."
            correct_answer: "C"
            hint: "Was wird wiederholt und was nicht?."
            question_score: '10'
        4:
            question_text: "Welche Ausgabe ist richtig?"
            code: |-
                {print} 'The children went:'
                {repeat} 2 {times}
                    {print} 'Yay!'
                    {print} 'Were going on holiday!'
            mp_choice_options:
            -   option: "Die Kinder sagten:\nJuchhuu!\nWir fahren in den Urlaub!\n"
                feedback: "Beachte den `{repeat}` Befehl!"
            -   option: "Die Kinder gingen:\nJuchhuu!\nWir fahren in den Urlaub!\nJuchhuu!\nWir fahren in den Urlaub!\n"
                feedback: "Richtig!"
            -   option: "Die Kinder gingen:\nJuchhuu!\nJuchhuu!\nWir fahren in den Urlaub!\nWir fahren in den Urlaub!\n"
                feedback: "Diese Reihenfolge ist falsch."
            -   option: "Die Kinder gingen:\nJuchhuu!\nJuchhuu!\nWir fahren in den Urlaub!\n"
                feedback: "Die letzte Zeile wird auch wiederholt."
            correct_answer: "B"
            hint: "Der Block unter dem `{repeat}` Befehl wird zwei Mal wiederholt."
            question_score: '10'
        5:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                end = {ask} 'Do you want a happy or a sad ending?'
                {if} end {is} happy {print} 'They lived happily ever after'
                {else} {print} 'The world exploded. The end.'
            mp_choice_options:
            -   option: "Die `{print}` Befehle in den letzten zwei Zeilen sollten in neuen Zeilen sowie mit 4 Leerzeichen beginnen."
                feedback: "Das ist richtig!"
            -   option: "`{else}` ist kein Befehl!"
                feedback: "Ist es!"
            -   option: "Zeilen die mit `{if}` beginnen, sollten mit 4 Leerzeichen beginnen"
                feedback: "Das ist nicht wahr"
            -   option: "`{ask}` ist kein Befehl mehr"
                feedback: "Das ist nicht wahr"
            correct_answer: "A"
            hint: "Etwas stimmt mit der Einrückung nicht"
            question_score: '10'
        6:
            question_text: "Welcher Code wurde benutzt, um diese Ausgabe zu erzeugen?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} 'Willkommen im Restaurant Hedy'
                    essen = {ask} 'Was möchten Sie essen?'
                    {print} essen
                    ```
                feedback: "Du musst 2 Bestellungen aufnehmen."
            -   option: |
                    ```
                    {repeat} 2 {times}
                        {print} 'Willkommen im Restaurant Hedy'
                        essen = {ask} 'Was möchten Sie essen?'
                        {print} essen
                    ```
                feedback: "Die Willkommenszeile würde ebenfalls zwei Mal in diesem Code ausgegeben werden"
            -   option: |
                    ```
                    {print} 'Willkommen im Restaurant Hedy'
                    {repeat} 2 {times}
                        essen = {ask} 'Was möchten Sie essen?'
                    {print} essen
                    ```
                feedback: "Nun wird nur die letzte Bestellung ausgegeben."
            -   option: |
                    ```
                    {print} 'Willkommen im Restaurant Hedy'
                    {repeat} 2 {times}
                        essen = {ask} 'Was möchten Sie essen?'
                        {print} essen
                    ```
                feedback: "Toll!"
            correct_answer: "D"
            hint: "Beachte was wiederholt werden sollte und was nur einmal ausgegeben werden sollte."
            question_score: '10'
            output: "Willkommen im Restaurant Hedy\nPizza\nHamburger"
        7:
            question_text: "Was stimmt mit diesem Code nicht?"
            code: |-
                food = {ask} 'What would you like to eat?'
                {if} food {is} fries
                sauce = {ask} 'What sauce would you like?'
                    {print} 'One fries with ' sauce
                {if} food {is} pizza
                    topping = {ask} 'What topping would you like?'
                    {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: "Nichts, dieser Code ist richtig!"
                feedback: "Etwas stimmt nicht!."
            -   option: "Du darfst keinen `{if}` Befehl nach einem `{ask}` Befehl benutzen."
                feedback: "Du bist!"
            -   option: "Du musst nicht zwei Mal Einrückung verwenden. Nur im ersten `{if}` Befehl."
                feedback: "Du musst immer Einrückung verwenden."
            -   option: "Die Einrückung ist im ersten `{if}` Befehl falsch."
                feedback: "Das ist richtig."
            correct_answer: "D"
            hint: "Schau dir die Einrückung genau an."
            question_score: '10'
        8:
            question_text: "In welchem Programm wurde die Einrückung richtig gemacht?"
            mp_choice_options:
            -   option: |
                    ```
                    {if} antwort {is} 32
                       {print} 'Du bist...'
                          {sleep}
                              {print} 'richtig!'
                          {else}
                              {print} 'Du liegst falsch!'
                    ```
                feedback: "Du liegst falsch!"
            -   option: |
                    ```
                    {if} antwort {is} 32
                    {print} 'Du bist...'
                    {sleep}
                    {print} 'richtig!'
                    {else}
                    {print} 'Du liegst falsch!'
                    ```
                feedback: "Du liegst falsch!"
            -   option: |
                    ```
                    {if} antwort {is} 32
                        {print} 'Du bist...'
                        {sleep}
                        {print} 'richtig!'
                    {else}
                        {print} 'Du liegst falsch!'
                    ```
                feedback: "Du hast... recht!"
            -   option: |
                    ```
                    {if} antwort {is} 32
                        {print} 'Du bist...'
                        {sleep}
                    {print} 'richtig!'
                    {else}
                        {print} 'Du liegst falsch!'
                    ```
                feedback: "Du liegst falsch!"
            correct_answer: "C"
            hint: "Was sollte passieren, wenn die Person richtig liegt? Und was sonst?"
            question_score: '10'
        9:
            question_text: "Welche Zeilen sollten mit 4 Leerzeichen beginnen?"
            code: |-
                1 music = {ask} 'What is your favorite music genre?'
                2 {if} music {is} rock
                3 {print} '🤘'
                4 {else}
                5 {print} '👎'
            mp_choice_options:
            -   option: "Zeile 2 und 4"
                feedback: "Die Zeilen nach dem `{if}` und `{else}` Befehl sollten mit 4 Leerzeichen beginnen"
            -   option: "Nur in Zeile 3"
                feedback: "Nicht nur 3..."
            -   option: "Zeile 3, 4 und 5"
                feedback: "Zeile 4 sollte nicht"
            -   option: "Zeile 3 und 5"
                feedback: "Gut gemacht!"
            correct_answer: "D"
            hint: "Die Zeilen nach dem `{if}` oder `{else}` Befehl sollten mit 4 Leerzeichen beginnen."
            question_score: '10'
        10:
            question_text: "Welche Aussage ist wahr?"
            code: |-
                1 level = {ask} 'What level are you on?'
                2 {if} level {is} 8
                3 {print} 'Great job!'
            mp_choice_options:
            -   option: "All lines should start with 4 spaces"
                feedback: "That's not true"
            -   option: "Line 2 and 3 should start with 4 spaces"
                feedback: "That's not true"
            -   option: "Line 2 should start with 4 spaces"
                feedback: "That's not true"
            -   option: "Line 3 should start with 4 spaces"
                feedback: "You are correct!"
            correct_answer: "D"
            hint: "Only one line starts with 4 spaces, but which one...?"
            question_score: '10'
    9:
        1:
            question_text: "What is wrong with this code?"
            code: |-
                {repeat} 3 {times}
                   eten = {ask} 'What would you like to eat?'
                   {if} food {is} fries
                       sauce = {ask} 'What sauce would you like?'
                       {print} 'One fries with ' sauce
                   {if} food {is} pizza
                       topping = {ask} 'What topping would you like?'
                       {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: "Nothing this code is correct!"
                feedback: "That's right!."
            -   option: "You're not allowed to use an `{if}` command after an `{ask}` command."
                feedback: "You are!."
            -   option: "You don't have to use indentation twice."
                feedback: "You always have to use indentation."
            -   option: "The indentation is wrong in the last `{if}` command."
                feedback: "It not, though."
            correct_answer: "A"
            hint: "all the indentation is done correctly."
            question_score: '10'
        2:
            question_text: "What will be printed after entering the correct password?"
            code: |-
                password = {ask} 'What is the password?'
                correct_password = Hedy
                {if} password {is} correct_password
                    {repeat} 2 {times}
                        {print} 'Good job!'
                        {print} 'You can use the computer!'
                {else}
                    {print} 'The computer will explode in 5... 4... 3... 2... 1...'
            mp_choice_options:
            -   option: "```\nGut gemacht!\nGut gemacht!\n```"
                feedback: "That's not it!"
            -   option: "```\nThe computer will explode in 5... 4... 3... 2... 1...\n```"
                feedback: "That's not it!"
            -   option: "```\nGood job!\nGood job!\nYou can use the computer!\n```"
                feedback: "That's not it!"
            -   option: "```\nGood job!\nYou can use the computer!\nGood job!\nYou can use the computer!\n```"
                feedback: "Richtig!"
            correct_answer: "D"
            hint: "Everything under the `{repeat}` command is repeated twice."
            question_score: '10'
        3:
            question_text: "Which case should you choose to win a million dollars?"
            code: |-
                {print} 'Choose the right case and win!'
                case = {ask} 'Which case will you pick? 1 or 2?'
                {if} case {is} 1
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell your case for 10 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win an apple pie'
                {if} case {is} 2
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell the case for 500 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win a million dollars!'
            mp_choice_options:
            -   option: "case 1, sell"
                feedback: "You don't win a million!"
            -   option: "case 1, open"
                feedback: "You don't win a million"
            -   option: "case 2, sell"
                feedback: "You don't win a million"
            -   option: "case 2, open"
                feedback: "Great job! You win!"
            correct_answer: "D"
            hint: "Follow the right path"
            question_score: '10'
        4:
            question_text: "Which statement is true?"
            code: |-
                name = {ask} 'What is your name?'
                size = {ask} 'What is your shoe size?'
                {if} size {is} 38
                    {if} name {is} Cinderella
                        {print} 'I was looking for you!'
                    {else}
                        {print} 'You are not the one!'
                {else}
                    {print} 'Ill keep looking'
            mp_choice_options:
            -   option: "Sleeping Beauty with shoe size 38 gets the output 'Ill keep looking'"
                feedback: "No, she gets 'You are not the one!'"
            -   option: "Cinderella with shoe size 40 gets the output: 'I was looking for you!'"
                feedback: "No, she gets 'Ill keep looking'"
            -   option: "Sleeping Beauty with shoe size 40 gets the output 'Ill keep looking'"
                feedback: "That's right!"
            -   option: "Cinderella with shoe size 40 gets the output 'I was looking for you!'"
                feedback: "No she gets 'Ill keep looking'"
            correct_answer: "C"
            hint: "No matter what your name is, if you have shoe size 40 you will get the message 'Ill keep looking'."
            question_score: '10'
        5:
            question_text: "Which code produced this output?"
            mp_choice_options:
            -   option: |
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: "Don't forget the indentation after `{repeat}` commands."
            -   option: |
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                    {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: "Use indentation after an `{if}` command"
            -   option: |
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: "Perfekt"
            -   option: |
                    ```
                    {repeat} 3 {times}
                        desert = {ask} 'What is your favorite type of desert?'
                        {if} desert {is} icecream
                            {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: "There are 2 `{repeat}` commands in this code."
            correct_answer: "C"
            hint: "Watch the indentation"
            question_score: '10'
            output: "Icecream is the best!\nIcecream is the best!\nIcecream is the best!"
        6:
            question_text: "After which command(s) should you use indentation (starting the next line with 4 spaces)?"
            mp_choice_options:
            -   option: "`{if}`"
                feedback: "Don't forget the others"
            -   option: "`{if}` `{repeat}`"
                feedback: "Don't forget `{else}`!"
            -   option: "`{if}` `{else}` `{repeat}`"
                feedback: "Keep it up!"
            -   option: "`{if}` `{else}` `{repeat}` `{print}`"
                feedback: "Not with print"
            correct_answer: "C"
            hint: "Indentation happens on the line below some commands"
            question_score: '10'
        7:
            question_text: "Du bekommst 5 Euro Rabatt, wenn du eine mittlere Pizza mit Cola bestellst.<br>Aber der Code hat einen Fehler! Wie kann man ihn debuggen?"
            code: |-
                {if} food {is} pizza
                {if} size {is} medium
                {if} drink {is} coke
                price = price - 2
            mp_choice_options:
            -   option: |
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                                price = price - 2
                    ```
                feedback: "Amazing!"
            -   option: |
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                    {if} drink {is} coke
                        price = price - 2
                    ```
                feedback: "Dem zweiten {if} fehlt Code!"
            -   option: |
                    ```
                    {if} food {is} pizza
                    {if} size {is} medium
                    {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: "Zwei aufeinander folgende {if}s sind nie korrekt."
            -   option: |
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: "Bijna goed maar kijk eens naar die laatste regel."
            correct_answer: "A"
            hint: "After each `{if}` command, the line below should indent"
            question_score: '10'
        8:
            question_text: "What is wrong is this code?"
            code: |-
                age = {ask} 'Happy Birthday! How old are you?'
                singing = {ask} 'Would you like us to sing?'
                    if singing {is} yes
                        {repeat} years {times}
                        {print} 'Hip Hip Hooray'
            mp_choice_options:
            -   option: "You can't put two questions in a row"
                feedback: "Yes you can."
            -   option: "The variable called 'age' is later on used as 'years'"
                feedback: "Keen eye! Good job!"
            -   option: "You're not allowed to start with 8 spaces, like line 4 and 5 do"
                feedback: "You actually must start like that."
            -   option: "A code must always start with a `{print}` command in the first line"
                feedback: "That's not true."
            correct_answer: "B"
            hint: "The indentation is done right this time"
            question_score: '10'
        9:
            question_text: "How many `{if}` commands can be placed inside another `{if}` command?"
            mp_choice_options:
            -   option: "None, that is not allowed"
                feedback: "You are allowed to"
            -   option: "Nur 1"
                feedback: "You could use more if you like"
            -   option: "3"
                feedback: "You could use more if you like"
            -   option: "Infinite, as long as you keep using indentation correctly"
                feedback: "That is true"
            correct_answer: "D"
            hint: "You can put an `{if}` command inside an `{if}` command."
            question_score: '10'
        10:
            question_text: "Which statement is true?"
            code: |-
                1 {repeat} 2 {times}
                2 {if} level {is} 9
                3 {print} Great job!
            mp_choice_options:
            -   option: "All lines should start with 4 spaces"
                feedback: "Only line 2 and 3 start with spaces"
            -   option: "Line 2 and 3 should start with 4 spaces"
                feedback: "Line 3 should start with 8"
            -   option: "Line 2 and 3 should start with 8 spaces"
                feedback: "Line 2 should start with 4"
            -   option: "line 2 should atart with 4 spaces and line 3 with 8"
                feedback: "You are correct!"
            correct_answer: "D"
            hint: "The first line doens't start with any spaces"
            question_score: '10'
    11:
        1:
            question_text: "What word should be at the place of the question mark?"
            code: |-
                {for} i {in} _?_ 1 {to} 10
                    {print} i
            mp_choice_options:
            -   option: |
                    ```
                    counter
                    ```
                feedback: "No"
            -   option: |
                    ```
                    {range}
                    ```
                feedback: "Correct"
            -   option: |
                    ```
                    {if}
                    ```
                feedback: "No"
            -   option: |
                    ```
                    {for}
                    ```
                feedback: "No"
            correct_answer: "B"
            hint: "What did you learn in this level?"
            question_score: '10'
        2:
            question_text: "What will be the output from this code?"
            code: |-
                {for} i {in} {range} 1 {to} 3
                    {print} i
            mp_choice_options:
            -   option: "1\n2\n3"
                feedback: "Correct!"
            -   option: "1 2 3"
                feedback: "That's not it"
            -   option: "1, 2, 3"
                feedback: "That's not it"
            -   option: "123"
                feedback: "That's not it"
            correct_answer: "A"
            hint: "How do the numbers appear in the screen?"
            question_score: '10'
        3:
            question_text: "Which code was used to get this output?"
            output: |-
                1
                2
                3
                4
                5
                Once I caught a fish alive!
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: "Perfect"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: "This code won't work. You need an indent after {for}."
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                        {print} 'Once I caught a fish alive!'
                    ```
                feedback: "Now Hedy will count '1 Once I caught a fish alive!, 2 Once I caught a fish alive! etc."
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} 'i'
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: "i is a variable and shouldn't have quotation marks"
            correct_answer: "A"
            hint: "First all the numbers, then the sentence"
            question_score: '10'
        4:
            question_text: "Which code was used to get this output?"
            output: |-
                10
                9
                8
                7
                6
                5
                4
                3
                2
                1
                0
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: "Now Hedy prints the numbers from 0 to 10 instead of 10 to 0."
            -   option: |
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
                feedback: "Hedy would print negative numbers in this case."
            -   option: |
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} 10 9 8 7 6 5 4 3 2 1 0
                    ```
                feedback: "Unfortunately this does not exist."
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: "That's right!"
            correct_answer: "D"
            hint: "It has to be a calculation..."
            question_score: '10'
        5:
            question_text: "What's wrong with this code?"
            code: |-
                {for} i {in} {range} 1 {to} 10
                {print} i
            mp_choice_options:
            -   option: "The i in the last line need quotation marks"
                feedback: "No it doesn't."
            -   option: "You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10"
                feedback: "You could use 1 to 5 just as well!"
            -   option: "Line 1 needs to start with an indention."
                feedback: "Not line 1..."
            -   option: "Line 2 needs to start with an indention"
                feedback: "Perfect!"
            correct_answer: "D"
            hint: "There is something wrong with the indention"
            question_score: '10'
        6:
            question_text: "How many times does the word Hello appear on your screen when you run the code?"
            code: |-
                {for} i {in} {range} 0 {to} 2
                    {print} 'Hello'
            mp_choice_options:
            -   option: "1 time"
                feedback: "No"
            -   option: "2 times"
                feedback: "No"
            -   option: "3 times"
                feedback: "That's right!"
            -   option: "Never"
                feedback: "No"
            correct_answer: "C"
            hint: "0 also counts. So 0,1,2 that's 3 times."
            question_score: '10'
        7:
            question_text: "What should be on the place of the question mark?"
            code: |-
                {print} 'Welcome to Hedys diner'
                people is {ask} 'How many people will be eating here tonight?'
                _?_
                    food is {ask} 'What would you like to order?'
                    {print} food
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 3
                    ```
                feedback: "There's not always 3 people"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} guests
                    ```
                feedback: "Die Variable heißt nicht guests"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} people
                    ```
                feedback: "Great!"
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} people
                    ```
                feedback: "That's one order too many!"
            correct_answer: "C"
            hint: "Use the variable 'people'"
            question_score: '10'
        8:
            question_text: "What will be the output from this code?"
            code: |-
                {for} i {in} {range} 23 {to} 25
                    {print} 'hi'
            mp_choice_options:
            -   option: "23\n24\n25"
                feedback: "The numbers don't appear. It doesn't say `{print}` i."
            -   option: "23 hi 24 hi 25 hi"
                feedback: "The numbers don't appear. It doesn't say `{print}` i"
            -   option: "hi\nhi\nhi"
                feedback: "Correct"
            -   option: "The word 'hi' will appear 25 times in a row."
                feedback: "No it will only appear 3 times."
            correct_answer: "C"
            hint: "It doesn't say `{print}` i"
            question_score: '10'
        9:
            question_text: "How many times does Hedy chant Hip Hip Hooray?"
            code: |-
                age = {ask} 'How old are you?'
                {for} i {in} {range} 1 {to} age
                    {print} 'Hip Hip Hoorray!'
            mp_choice_options:
            -   option: "1 time"
                feedback: "Try again"
            -   option: "2 times"
                feedback: "Try again"
            -   option: "Never"
                feedback: "Try again"
            -   option: "That depends on how old you are"
                feedback: "That's right!"
            correct_answer: "D"
            hint: "`{for}` i `{in}` `{range}` 1 `{to}` age"
            question_score: '10'
        10:
            question_text: "Which code belongs to this output?"
            output: |-
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: "Mind the indention"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: "That's right!"
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: "`{range}` 0 `{to}` 3 is 4 times."
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: "`{range}` 0 `{to}` 3 is 4 times."
            correct_answer: "B"
            hint: "Mind the indention"
            question_score: '10'
    10:
        1:
            question_text: "What do we need to fill in on the `_?_` if we want to print each compliment?"
            code: |-
                compliments = perfect, great job, amazing
                _?_
                    {print} compliment
            mp_choice_options:
            -   option: |
                    ```
                    {for} each compliment
                    ```
                feedback: "That's not it"
            -   option: |
                    ```
                    {for} compliment {in} compliments
                    ```
                feedback: "You deserve all those compliments!"
            -   option: |
                    ```
                    {if} compliment {in} compliments
                    ```
                feedback: "That's not it"
            -   option: |
                    ```
                    {for} compliments {in} compliment
                    ```
                feedback: "Almost there!"
            correct_answer: "B"
            hint: "`{for}` each compliment in the lists of compliments..."
            question_score: '10'
        2:
            question_text: "Which output is correct?"
            code: |-
                meals = pizza, pasta, pancakes
                {for} meal {in} meals
                    {print} 'I love ' meal
            mp_choice_options:
            -   option: "I love pizza"
                feedback: "Line 2 says `{for}` each meal in the list of meals. So each meal is printed."
            -   option: "I love pasta"
                feedback: "Line 2 says `{for}` each meal in the list of meals. So each meal is printed."
            -   option: "I love pancakes"
                feedback: "Line 2 says `{for}` each meal in the list of meals. So each meal is printed."
            -   option: |-
                    I love pizza
                    I love pasta
                    I love pancakes
                feedback: "Great!"
            correct_answer: "D"
            hint: "Line 2 says for each meal in the list of meals. So each meal is printed."
            question_score: '10'
        3:
            question_text: "Which output is correct?"
            code: |-
                animals = dogs, cats, hamsters, chickens
                {for} animal {in} animals
                    {print} animal ' are lovely pets'
            mp_choice_options:
            -   option: "dogs are lovely pets"
                feedback: "Line 2 says {for} each animal in the list of animals. So each animal is {print}ed."
            -   option: "dogs, cats, hamsters, chickens are lovely pets"
                feedback: "Each animal gets their own line in the output."
            -   option: |-
                    dogs are lovely pets
                    cats are lovely pets
                    hamsters are lovely pets
                    chickens are lovely pets
                feedback: "Great!"
            -   option: "You don't know yet. Because it chooses one of the animals {at} {random}."
                feedback: "Line 2 says {for} each animal in the list of animals. So each animal is {print}ed."
            correct_answer: "C"
            hint: "Line 2 says {for} each animal in the list of animals. So each animal is printed"
            question_score: '10'
        4:
            question_text: "What's wrong with this code?"
            code: |-
                groceries = apples, bread, milk
                {for} item {in} groceries
                    {print} 'We need ' groceries
            mp_choice_options:
            -   option: "Line 2 needs to start with 4 spaces as indentation"
                feedback: "No it doesn't. Only line 3 needs indentation, which it has."
            -   option: "Line 3 does not need to start with 4 spaces as indentation"
                feedback: "Line 2 is a `{for}`command so line 3 does need to start with an indent."
            -   option: "Line 3 should say item instead of groceries"
                feedback: "Good job!"
            -   option: "Line 2 should say groceries instead of item"
                feedback: "No it does not."
            correct_answer: "C"
            hint: "Line 2 says `{for}` each item in the list of groceries"
            question_score: '10'
        5:
            question_text: "What word should be on the _?_ with these digital dice?"
            code: |-
                {print} 'Welcome to the digital dice!'
                players = Ann, John, Jesse
                choices = 1, 2, 3, 4, 5, 6
                {for} player {in} players
                    {print} player ' throws ' _?_ {at} {random}
            mp_choice_options:
            -   option: "players"
                feedback: "It would say 'Ann throws Jesse', instead of 'Ann throws 6'."
            -   option: "choices"
                feedback: "That's right!"
            -   option: "choice"
                feedback: "You are very close. But you need Hedy to pick from the list called 'choices' not 'choice'..."
            -   option: "dice"
                feedback: "Schau dir die Namen der Variablen an."
            correct_answer: "B"
            hint: "Hedy needs to pick a number `{at} {random}`"
            question_score: '10'
        6:
            question_text: "Which of the answers below is a possible outcome when you run the code?"
            code: |-
                choices = rock, paper, scissors
                players = Kelly, Meredith
                {for} player {in} players
                    {print} player ' chooses ' choices {at} {random}
            mp_choice_options:
            -   option: |-
                    Kelly chooses rock
                feedback: "Meredith wants to play too!"
            -   option: |-
                    Meredith chooses scissors
                    Kelly chooses rock
                feedback: "So close! But Kelly is first in the list, so she goes first"
            -   option: |-
                    Meredith chooses paper
                feedback: "Kelly wants to play too!"
            -   option: |-
                    Kelly chooses paper
                    Meredith chooses scissors
                feedback: "Amazing!"
            correct_answer: "D"
            hint: "Each player will pick an option. The player that's first on the list will go first."
            question_score: '10'
        7:
            question_text: "What line should be on the _?_ in this code that decides what these people will have for dinner?"
            code: |-
                names = Ron, Leslie, April, Andy
                food = pasta, fries, salad
                _?_
                    {print} name ' has to eat ' food {at} {random} ' for dinner'
            mp_choice_options:
            -   option: |
                    ```
                    {for} name {in} names
                    ```
                feedback: "You are on fire!"
            -   option: |
                    ```
                    {for} names {in} name
                    ```
                feedback: "No it should be for each name in the list nameS, so the other way around"
            -   option: |
                    ```
                    {for} food {in} food
                    ```
                feedback: "Each name should be told what they will have for dinner."
            -   option: |
                    ```
                    {for} name {in} food
                    ```
                feedback: "Each name should be told what they will have for dinner."
            correct_answer: "A"
            hint: "Each name should be told what they will have for dinner."
            question_score: '10'
        8:
            question_text: "What should be on the _?_ in this code that decides which color shirt you get?"
            code: |-
                names = Donna, Tommy, Ben
                colors = blue, red, purple
                {for} name {in} names
                    {print} _?_
            mp_choice_options:
            -   option: |
                    ```
                    'name gets a color shirt'
                    ```
                feedback: "That's not it!"
            -   option: |
                    ```
                    name 'gets a ' colors {at} {random} ' shirt'
                    ```
                feedback: "Great job! This was a hard one!"
            -   option: |
                    ```
                    names 'gets a ' color {at} {random} ' shirt'
                    ```
                feedback: "You want each name printed. So the first word should not be names but..."
            -   option: |
                    ```
                    'people gets a colors shirt'
                    ```
                feedback: "Es gibt keine Variable mit dem Namen people.."
            correct_answer: "B"
            hint: "Beachten Sie die Anführungszeichen und die Namen der Variablen"
            question_score: '10'
        9:
            question_text: "What is the first question Hedy will ask you when you run the program?"
            code: |-
                courses = appetizer, main course, dessert
                names = Timon, Onno
                {for} name in names
                    {for} course {in} courses
                        food = {ask} name ', what would you like to eat as your ' course '?'
                        {print} name ' orders ' food ' as their ' course
            mp_choice_options:
            -   option: "Timon, what would you like to eat as your appetizer?"
                feedback: "Perfect!"
            -   option: "Onno, what would you like to eat as your appetizer?"
                feedback: "Timon is first on the list!"
            -   option: "Timon, what would you like to eat as your dessert?"
                feedback: "Appetizers are first in the list"
            -   option: "You don't know that. Hedy will choose `{at} {random}`."
                feedback: "There is no `{at} {random}` in this code..."
            correct_answer: "A"
            hint: "The first options from both lists are chosen."
            question_score: '10'
        10:
            question_text: "What is true about this code?"
            code: |-
                prices = 1 million dollars, car, sandwich
                names = Bob, Patrick, Sandy, Larry
                {for} price {in} prices
                    {print} 'The ' price 'is won by ' names {at} {random}
            mp_choice_options:
            -   option: "Everybody will always win a price."
                feedback: "That is not true, you could end up without a price."
            -   option: "All the prices always go to one single person."
                feedback: "That is not true. All the prices are given away, but to random people"
            -   option: "Larry will never win a price"
                feedback: "That is not true. Larry has the same odds as the others"
            -   option: "Someone might win with two prices"
                feedback: "You get it!"
            correct_answer: "D"
            hint: "Try to imagine the output of this code."
            question_score: '10'
    12:
        1:
            correct_answer: D
            question_text: Which output is correct?
            code: "print 'three and a half plus one and a half is...'\nprint 3.5 + 1.5"
            mp_choice_options:
            -   option: "5\n"
                feedback: Don't forget the first line of code!
            -   option: "3.5 + 1.5\n"
                feedback: This is not the one!
            -   option: "thee and a half plus one and a half is...\nfive\n"
                feedback: Take a close look at the second line...
            -   option: "three and a half plus one and a half is...\n5\n"
                feedback: Great job!
            hint: Both lines are printed!
            question_score: '10'
        2:
            question_score: '10'
            question_text: Which of these codes is correct?
            mp_choice_options:
            -   option: "```\nflavors is vanilla, strawberry, chocolate\nprint 'I would like a ' flavors at random ' cake.'\n```"
                feedback: All the different values of flavors should be in quotation marks.
            -   option: "```\n'flavors = vanilla, strawberry, chocolate'\nprint 'I would like a ' flavors at random ' cake.'\n```"
                feedback: All the different values of flavors should be in quotation marks.
            -   option: "```\nflavors = 'vanilla', 'strawberry', 'chocolate'\nprint 'I would like a ' flavors at random ' cake.'\n```"
                feedback: Alright!
            -   option: "\n```\nflavors = 'vanilla, strawberry, chocolate'\nprint 'I would like a ' flavors at random ' cake.'\n```\n"
                feedback: All the different values of flavors should be in quotation marks.
            correct_answer: C
            hint: The second line is the same in each code, pay attention to the first line
        3:
            question_text: What's wrong with this code?
            code: "favorite_animal = ask 'What is your favorite animal?'\nprint 'I like ' favoriteanimal ' too!'"
            mp_choice_options:
            -   option: "Der Name der Variablen ist in Zeile 1 ein anderer als in Zeile 2.\n"
                feedback: Correct!
            -   option: "The quotation marks aren't used correctly in line 2\n"
                feedback: That's not true
            -   option: "You can't use the = sign when using an ask command\n"
                feedback: That's not true
            -   option: "Nothing is wrong.\n"
                feedback: That's not true
            correct_answer: A
            hint: The quotation marks are used correctly
            question_score: '10'
        5:
            hint: The correct password is TOPSECRET
            question_text: What output does Agent007 get when they put in the correct password?
            code: "name is ask 'What is your name?'\nif name is 'Agent007'\n    a is 'Go to the airport '\nelse\n    a is 'Go to the train station '\npassword is ask 'What is the password?'\nif password is 'TOPSECRET'\n    b is 'tomorrow at 02.00'\nelse\n    b is 'today at 10.00'\nprint a + b"
            mp_choice_options:
            -   option: Go to the train station today at 10.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 02.00
                feedback: You've cracked the code!
            -   option: Go to the train station tomorrow at 02.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 10.00
                feedback: The agent won't be catching any bad guys here
            correct_answer: B
            question_score: '10'
        7:
            question_text: Which output does a vegan get?
            code: "menu = 'cookies', 'cheese', 'grapes'\nprint \"It's my birthday! I`ve brought some snacks!\"\ndiet = ask 'Do you have any dietary restrictions?'\nif diet = 'gluten free'\n    remove 'cookies' from menu\nif diet = 'vegan'\n    remove 'cheese' from menu\nprint 'For you I have brought: '\nfor snack in menu\n    print snack"
            mp_choice_options:
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncookies\ngrapes"
                feedback: Terrific!
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes"
                feedback: There's more options than just one
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncheese\ngrapes"
                feedback: A vegan person can't have cheese
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes\ncookies"
                feedback: Almost there, but look at the order of snacks in the list
            correct_answer: A
            hint: What item is removed from the list when you answer 'vegan'?
            question_score: '10'
        9:
            question_score: '10'
            question_text: Which code should be filled in in line 1 at the ???
            code: "???\nprint 'You won ' prices at random '!'"
            mp_choice_options:
            -   option: "```\nprices = 'one' 'million' 'dollars', 'nothing'\n```"
                feedback: You won nothing
            -   option: "```\nprices = 'one million dollars, nothing'\n```"
                feedback: You won nothing
            -   option: "```\nprices = 'one million dollars', 'nothing'\n```"
                feedback: Winner!
            -   option: "```\n'prices' = 'one million dollars', 'nothing'\n```"
                feedback: You one nothing
            correct_answer: C
            hint: The items on the list should be in quotation marks
        10:
            mp_choice_options:
            -   option: for i in range 1 to 3
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: for action in actions
                feedback: You are amazing!
            -   option: repeat 3 times
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: print actions at random
                feedback: This is a hard one! All the actions on the list must be in the song.
            question_text: Which line of code should be filled in at the ??? to complete the song ?
            code: "actions = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n???\n    for i in range 0 to 1\n        print 'if youre happy and you know it'\n        print action\n    print 'if youre happy and you know it and you really want to show it'\n    print 'if youre happy and you know it'\n    print action"
            correct_answer: B
            hint: This is a hard one! All the actions on the list must be in the song.
            question_score: '10'
        4:
            question_text: In which lines are quotation marks needed to get the code to work?
            code: "print Welcome to the online shoe shop\ncategory = ask What kind of shoes are you looking for?\nif category = high heels\n  print High heels are 50% off now!"
            mp_choice_options:
            -   option: "Line 1 and 2\n"
                feedback: No
            -   option: "Line 1, 2 and 3\n"
                feedback: No
            -   option: "Line 1, 2 and 4\n"
                feedback: No
            -   option: "All of the lines\n"
                feedback: Perfect!
            correct_answer: D
            hint: Does line 3 need quotation marks too?
            question_score: '10'
        6:
            question_text: Which line should be filled in at the ???
            code: "print 'Welcome to McHedy!'\norder = ask 'Would you like a hamburger or fries?'\nif order = 'hamburger'\n  price = 12\nif order = 'fries'\n  price = 4\ndrinks = ask 'Would you like a drink with that for 2 dollars?'\nif drinks = 'yes'\n  ???\nprint 'That will be ' price ' dollar please'\n"
            mp_choice_options:
            -   option: "```\nprice = 14\n```\n"
                feedback: What if you only order fries and a drink?
            -   option: "```\nprice = '14'\n```"
                feedback: What if you only order fries and a drink?
            -   option: "```\nprice = price + 2\n```"
                feedback: Excellent!
            -   option: "```\nprice = + 2\n```"
                feedback: Almost there!
            correct_answer: C
            hint: What if you only order fries and a drink?
            question_score: '10'
        8:
            question_text: Which code was used to create this output?
            code: '3.5'
            mp_choice_options:
            -   option: "```\nprint '7 / 2'\n```"
                feedback: No
            -   option: "```\nprint 7 / 2\n```"
                feedback: That is right!
            -   option: "```\nprint 7 : 2\n```"
                feedback: No
            -   option: "```\nprint 7 * 2\n```"
                feedback: No
            correct_answer: B
            hint: 7 devided by 2 is 3.5
            question_score: '10'
    13:
        10:
            question_text: Which command needs to be in line 8 at the place of the ??? ?
            code: "print 'Welcome to the product finder of this supermarkt'\nitem is ask 'What product are you looking for?'\nbakery = 'bread', 'buns', 'muffins'\ndrinks = 'soda', 'water', 'lemonade'\nsnacks = 'chips', 'nuts', 'dips'\nfrozen = 'fries', 'icecream', 'pizza'\nfruit = 'bananas', 'apples', 'oranges'\nif item in snacks ??? item in drinks\n    print 'This item is in aile 3'\nif item in bakery or item in bakery\n    print 'This item in in the back of the store'\nif item in fruit\n    print 'The fruit is sold near the register'"
            mp_choice_options:
            -   option: and
                feedback: There are no items that are both the list of snacks and the list of drinks
            -   option: or
                feedback: Great job!
            -   option: in
                feedback: No
            -   option: if
                feedback: No
            correct_answer: B
            hint: The item is either in the list of snacks, or in the list of drinks
            question_score: '10'
        1:
            question_text: Which code should be filled in at the ??? ?
            code: "name = ask 'What is your name?'\nsong = ask 'Whould you like to hear a song?'\nbirthday = ask 'Is today your birthday?'\n???\n  print 'Happy Birthday to you!'\n  print 'Happy Birthday to you!'\n  print 'Happy Birthday. dear ' name\n  print 'Happy Birthday to you!'"
            mp_choice_options:
            -   option: "```\nif birthday and song = 'yes'\n```"
                feedback: Almost there
            -   option: "```\nif birthday = 'yes' and name = 'Hedy'\n```"
                feedback: Hedy only sings for you if you like to hear a song
            -   option: "```\nif song = 'yes' and birthday = 'yes'\n```"
                feedback: Super!
            -   option: "```\nif song = 'yes' or birthday = 'yes'\n```"
                feedback: Hedy only sings if both answers are yes
            correct_answer: C
            hint: Hedy sings if you want to hear a song and it's you birthday
            question_score: '10'
        2:
            question_text: Which command is missing in the code at the place of the ??? ?
            code: "menu = 'cheese', 'sausage rolls', 'cookies'\ndiet = ask 'Do you have any dietary restrictions?'\nif diet = 'vegan' ??? diet = 'halal'\n    remove 'sausage rolls' from menu"
            mp_choice_options:
            -   option: and
                feedback: You don't have to be vegan and muslim
            -   option: or
                feedback: Great thinking!
            -   option: ' + '
                feedback: No
            -   option: print
                feedback: No
            correct_answer: B
            hint: Neither vegans nor muslims can eat sausage rolls.
            question_score: '10'
        3:
            question_text: Which output is given to a member without a discount code?
            code: "member = ask 'Do you have a membership card?'\ndiscount = ask 'Do you have a discount code?'\nif member = 'yes' or discount = 'yes'\n    print 'You get a free apple pie!'\nelse\n    print 'That will be 5 dollars please'"
            mp_choice_options:
            -   option: You get a free pie!
                feedback: Great job!
            -   option: That will be 5 dollars please
                feedback: That is not true
            -   option: This code won't work, so there is no output
                feedback: There is nothing wrong with the code
            -   option: There is no way of knowing
                feedback: There is! Read the question carefully
            correct_answer: A
            hint: Mind the command 'or' in line 3
            question_score: '10'
        4:
            question_text: Which line of code should follow this line in rock-paper-scissors game?
            code: if computer_choice is 'rock' and your_choice is 'paper'
            mp_choice_options:
            -   option: print 'you win'
                feedback: You win!
            -   option: print 'you lose'
                feedback: You lose!
            -   option: print 'tie'
                feedback: It's only a tie if both choices are the same
            -   option: print 'try again'
                feedback: Try again!
            correct_answer: A
            hint: Paper beats rock
            question_score: '10'
        5:
            question_text: Which statement is true about this code?
            code: "if name = 'Cinderella' and shoe_size = '38'\n    print 'You are my one true love!'"
            mp_choice_options:
            -   option: Every person with shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   option: Every person named Cinderella is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   option: Every person that is named Cinderella and has shoe size 38 is this prince's one true love
                feedback: Fantastic!
            -   option: Every person that's not named Cinderella and does not have shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            correct_answer: C
            hint: Both statements have to be true
            question_score: '10'
        6:
            question_text: Which statement about this code is true?
            code: "print 'Let me guess which family member you are!'\nglasses = ask 'Do you wear glasses?'\nfemale = ask 'Are you female?'\nif glasses = 'yes' and female = 'yes'\n    print 'You must be Sophie!'\nif glasses = 'no' and female = 'yes'\n   print 'You must be Marleen!'\nif glasses = 'yes' and female = 'no'\n    print 'You must be Wouter!'\nif glasses = 'no' and female = 'no'\n    print 'You must be Michael!'"
            mp_choice_options:
            -   option: Michael is a boy with glasses
                feedback: Try again
            -   option: Marleen is a girl with glasses
                feedback: Try again
            -   option: Wouter is a boy without glasses
                feedback: Try again
            -   option: Sophie is a girl with glasses
                feedback: Great job!
            correct_answer: D
            hint: Take a good look! Or do you need glasses?
            question_score: '10'
        7:
            question_text: Which statement is false?
            code: "print 'Thank you for helping me take care of my pets'\nprint 'Here is a program to help feed them'\nanimal is ask 'What kind of animal are they?'\ncolor is ask 'What colour are they?'\nif animal is 'cat' and color = 'grey'\n    print 'That is Abby. She eats 3 scoops of cat nibbles'\nif animal is 'cat' and color = 'orange'\n    print 'That is Milo. He eats 4 scoops of cat nibbles'\nif animal is 'bird' or color is 'black'\n    print 'I fed them this moring! They do not need more food today'\nif animal is 'hamster' and color is 'brown'\n    print 'You can feed them a piece of carrot'"
            mp_choice_options:
            -   option: The grey cat is called Abby
                feedback: This is true!
            -   option: Milo the orange cat eats 4 scoops of cat nibbles
                feedback: This is true
            -   option: The black hamster needs to be fed a piece of carrot
                feedback: Great job!
            -   option: The yellow bird was fed this morning
                feedback: This is true
            correct_answer: C
            hint: Read the last 4 lines carefully
            question_score: '10'
        8:
            question_text: What output do you get if you order popcorn but no drink?
            code: "print 'Welcome to the movie theater'\npopcorn = ask 'Would you like some popcorn?'\ndrink = ask 'Would you like a drink?'\nif popcorn = 'yes' and drink = 'yes'\n    print 'That will be 8 dollars please'\nif popcorn = 'no' and drink = 'yes'\n   print 'That will be 3 dollars please'\nif popcorn = 'yes' and drink = 'no'\n    print 'That will be 5 dollars please'\nif popcorn = 'no' and drink = 'no'\n    print 'Ok'\nprint 'Enjoy the movie'"
            mp_choice_options:
            -   option: "Welcome to the movie theater\nThat will be 8 dollars please\nEnjoy the movie"
                feedback: You have paid too much!
            -   option: "Welcome to the movie theater\nThat will be 5 dollars please\nEnjoy the movie"
                feedback: Amazing!
            -   option: "Welcome to the movie theater\nThat will be 3 dollars please\nEnjoy the movie"
                feedback: That's not enough money!
            -   option: "Welcome to the movie theater\nOk\nEnjoy the movie"
                feedback: You have to pay for your popcorn!
            correct_answer: B
            hint: popcorn = yes and drink = no
            question_score: '10'
        9:
            question_text: What is wrong with this code?
            code: "1  chocolate = ask 'Would you like chocolate sauce on your ice cream?'\n2  sprinkles = ask 'Would you like sprinkles on your ice cream?'\n3  if chocolate and sprinkles = 'yes'\n4      print 'Ice cream with chocolate sauce and sprinkles, coming up!'\n5  if chocolate = 'yes' and sprinkles = 'no'\n6      print 'Ice cream with chocolate sauce, coming up!'\n7  if chocolate = 'no' and sprinkles = 'yes'\n8      print 'Ice cream with sprinkles, coming up'\n9  if chocolate = 'no' and sprinkles = 'no'\n10     print 'Just plain icecream, coming up!'"
            mp_choice_options:
            -   option: "Line 3 should be: if chocolate = 'yes' and sprinkles is 'no'"
                feedback: Correct!
            -   option: "Line 3 should be: if chocolate = 'no' and sprinkles is 'no'"
                feedback: This is not what I ordered!
            -   option: "Line 5 should be: if chocolate = 'yes' and sprinkles is 'yes'"
                feedback: This is not what I ordered!
            -   option: "Line 7 should be: if chocolate = 'yes' and sprinkles is 'no'"
                feedback: This is not what I ordered!
            correct_answer: A
            hint: There is a mistake in line 3
            question_score: '10'
