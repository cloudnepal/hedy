levels:
    1:
        1:
            story: |-
                Puzzels are exercises in which the lines of code are already written for you. You only have to place the lines in the correct order. Drag the lines of code into the input screen and run the code. Can you get the program to work?
                You're a customer at bakery Hedy.
                You walk into the bakery and are welcomed by the baker.
                He asks what type of pie you want to order.
                Then he repeats your answer back to you.
                Lastly, your order is being prepared.
        2:
            story: You're at the DJ Booth requesting a song. Create a program that asks if you are ready to party and then asks which song you would like to hear.\n
    2:
        1:
            story: You and your friends are going to watch some Netflix.\nShow which movie you're about to watch and wish the viewers lot of fun!\n
            code: |-
                film {is} Sonic the Hedgehog 2
                {print} It is time for an evening of Netflix
                {print} We're going to film
                {print} Have fun!'
        2:
            story: This is the webshop of a toy store. Create a program where costumers can add an item to their shopping cart.\n
            code: |-
                {print} Welcome to our toystore
                toy is {ask} What would you like to buy?
                {print} toy is added to your shopping cart.
                {print} Thank you for shopping with us!'
    3:
        1:
            story: The new school year at Hogwarts is starting! \nIt is the job of the sorting hat to sort you into one of the houses.\nWhich house will you be sorted into?\nAre you a Gryffindor, Hufflepuf, Ravenclaw or Slytherin.\nLet the program wait a short period before revealing your house.\n
        2:
            story: Create a program that chooses a random meal for you. Make a list of food and a list of toppings and let the program decide what you'll have!\n
            code: |-
                toppings {is} chocolate, cheese, tuna, sprinkles
                food {is} pizza, icecream, salad, sandwich
                {print} Your random meal for today is...'
                sleep 2
                {print} food at random with toppings at random
    4:
        1:
            story: You are the newest Pokémon trainer from Pallet Town!\nMake a program that selects your first Pokémon.\nLet the program wait a minute before revealing your first pokémon.\n
            code: |-
                pokemons {is} Pikachu, Charmander, Bulbasaur, Squirtle
                {print} 'This is going to be your first pokémon!'
                {sleep}
                {print} pokemons {at} {random}
        2:
            story: Create a lottery that lets you choose an extra price that you might win.\n
            code: |-
                prices {is} car, hamster, 1 million euros
                price {is} {ask} 'What would you like to win?'
                {add} price {to_list} prices
                {print} 'You won a ' prices {at} {random}
    5:
        1:
            story: Make a program that checks if your favourite movie is already in the list of the computer.\nIf so, print that you have great taste, otherwise add the movie to the list.\n
            code: |-
                favoriete_movies {is} Batman, Spiderman, The Avengers, Jurassic Park
                movie {is} {ask} 'What is your favourite movie?'
                {if} movie {in} favoriete_movies {print} 'You have great taste!'
                {else} {print} 'Such a shame that your favourite movie is not in the list, we will add it right away!'
                {add} movie {to_list} favoriete_movies
        2:
            story: Create a maths game.\n
            code: |-
                {print} 'Solve this problem'
                answer {is} {ask} '88 - 16 = ?'
                {if} answer {is} 72 {print} 'Correct!'
                {else} print 'Wrong! The answer was 72'
    6:
        1:
            story: Make a program that calculates how old you are in dog and cat years.\nFirst ask the age of the user and start calculating.\nFirst calculate the dogyears then the catyears.\nShow the user the different ages.\n
            code: |-
                age = {ask} 'How old are you?'
                dog_age = age * 7
                cat_age = age * 5
                {print} 'In dogyears you are ' dog_age ' years old.'
                {print} 'In catyears you are ' cat_age ' years old.'
        2:
            story: Create a program that helps you calculate how many cakes you should buy for your birthday party.\n
            code: |-
                {print} 'It is your birthday!'
                people = {ask} 'How many people do you want to give a slice of cake?'
                cakes_amount is people/8
                {print} 'You will have to buy ' cakes_amount ' cakes'
    7:
        2:
            story: Create the song 'The wheels on the bus go round and round'\n
    8:
        1:
            story: You and four other friends are playing Pokémon Go! Create a program that decides in which team each of you will play.\nEither red, yellow or blue! Take a little pauze after announcing a team.\n
            code: |-
                teams = red, yellow, blue
                {print} 'Red, Yellow of Blue?'
                {repeat} 5 {times}
                  {print} 'You are selected in team... '
                  {print} teams {at} {random}
                  sleep 2
        2:
            story: Print the countdown for a  game of hide and seek.\n
            code: |-
                counter = 11
                {repeat} 10 {times}
                  counter = counter - 1
                  {print} counter
                  {sleep} 1
                {print} 'Ready or not here I come!'
    10:
        1:
            story: |-
                Help this family out by creating a schedule of who is cooking and what they should be making this week. The remove commands make sure nobody has to cook twice and they have a differnet dinner every day.
                **Mind!** the variable order should be first days, then people, and lastly dinner_options. This goes for the lines with the remove commands too.
