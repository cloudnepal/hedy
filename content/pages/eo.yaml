title: Dokumentaro pri Hedy
sections:
-   title: Enkonduko
    key: enkonduko
    subsections:
    -   title: Kio estas Hedy?
        text: "Hedy estas teksta programlingvo, specife fasonita por geadoleskantoj (10- ĝis 15-jaruloj).\nKontraste al programlingvoj por infanoj, kiel Scratch, Hedy ne uzas kodblokojn sed tekstan kodon.\nDo per Hedy vi lernos kiel tajpi kodon kiel faras veraj programistoj, sed laŭ paŝetoj kaj ludecaj ekzercoj.\nTiel Hedy povas funkcii kiel paŝoŝtono al veraj programlingvoj kiel Python en neteknika kaj plejparte amuza maniero!\nJen anglalingva [filmo](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) pri la evoluo de Hedy kiel programlingvo.\n"
    -   title: Celataj uzantoj
        text: "Hedy is developed with middle school and junior high school students in mind (ages 10 - 15).\nIt's important for the students to be able to read well. We recommend not to start with Hedy before the students have achieved at least a 3rd grade reading level.\nStudents (and teachers!) don't need any programming experience before starting with Hedy.\n"
    -   title: Kiel funkcias Hedy?
        text: "<Verkota>\n"
    -   title: Instruado per Hedy
        text: "Hedy is divided into levels, in which new commands are taught.Each level contains a variety of exercises to practice to newly learned commands.\nThe exercises can be done by the students individually, or you can use them in classical instructions. The lesson plans for each level are included in this teacher manual.\nThe lesson plans and exercises are explained step by step, to make sure the less digitally informed teachers should be able to use Hedy too!\nOf course Hedy also caters to the creative teachers that love to make their own lessonplans and exercises!\n"
    -   title: Aparatoj
        text: "Hedy is webbased, which means it works on any device with a browser (Google Chrome, Firefox, Edge etc), so laptops, chromebooks, tablets and even smartphones are suitable to use Hedy.\nThere's no need to download anything before working with Hedy, just go to the website and you're all set!\n"
-   title: "Tutorial"
    key: "tutorial"
    subsections:
    -   title: "Tutorial"
        text: |
            Do you want to follow the tutorial (again)? Click [here](https://hedycode.com/tutorial)
-   title: Preparations
    key: preparations
    subsections:
    -   title: Krei klason
        text: "When students create profile they are supposed to choose a 'preferred language'. Hedy will always be loaded in this selected language.\nChanging this language can always be done later on by navigation to 'My profile' and 'My profile' again.\nFrom December 2021 on setting a preferred language is obligatory for each Hedy account.\nWhen your account or the accounts of your students have being created earlier than this date you will receive a message that a preferred language is missing.\nDon't worry! Navigate to 'My profile' and set a language in your profile settings.\nUntil you set a language Hedy will be shown in your browser language and, when this language is not supported, in English.\n"
    -   title: Kontoj de lernantoj
        text: "Estas 2 manieroj lasi viajn studentojn aliĝi al via klaso: Vi povas lasi ilin fari siajn proprajn kontojn aŭ vi povas krei kontojn por ili.\n\n**Studentoj faras siajn proprajn kontojn**\nViaj studentoj povas iri al la retejo de Hedy kaj krei siajn proprajn kontojn, same kiel vi faris. Por eniri ilin en vian klason, ili simple devas alklaki la invitligon.\nVi povas trovi la invitligon sur la klaspaĝo kaj sendi ĝin al viaj studentoj. Atentu, ke viaj studentoj devas esti ensalutitaj al Hedy kiam ili alklakas la ligilon, do faru ĝin glate.\n\n**Vi kreas kontojn por viaj studentoj**\nKelkfoje estas pli facile krei tutan aron da kontoj por viaj studentoj mem. Ĉi tio povas esti farita alklakante la butonon 'krei studentajn kontojn' kaj kompletigante uzantnomojn kaj pasvortojn por ili.\nLa studentoj povas ensaluti kun la uzantnomo kaj pasvorto, kiujn vi elektis. Poste, ili povas ŝanĝi sian uzantnomon aŭ pasvorton, se ili volas, kaj ili ankoraŭ restos en via klaso.\n"
    -   title: Agordi preferatan lingvon
        text: "Kiam lernantoj kreas profilon ili laŭsupoze elektas «preferatan lingvon». Hedy ĉiam estos ŝarĝita en ĉi tiu elektita lingvo.\nŜanĝi ĉi tiun lingvon ĉiam povas esti farita poste per navigado al «Mia konto» kaj «Miaj personaj agordoj» denove.\nEkde decembro 2021 agordo de preferata lingvo estas deviga por ĉiu Hedy-konto.\nKiam via konto aŭ la kontoj de viaj studentoj estas kreitaj pli frue ol ĉi tiu dato, vi ricevos mesaĝon ke preferata lingvo mankas.\nNe zorgu! Iru al «Mia profilo» kaj agordu lingvon en viaj profilaj agordoj.\nĜis vi fiksos lingvon, Hedy estos montrata en via retumila lingvo kaj, kiam ĉi tiu lingvo ne estas subtenata, en la angla.\n\n**Por ne-anglalingvanoj**\nNe nur vi povas ŝanĝi la lingvon de la aventuroj al via propra lingvo. Vi ankaŭ povas elekti en kiu lingvo la ŝlosilvortoj (ekzemple 'print' aŭ 'demandi') devas esti.\nTiel vi povas instrui viajn studentojn kodi per anglaj ŝlosilvortoj, sed vi ankaŭ povas lasi ilin programi en sia propra lingvo. Ekzemple Esperantistaj lernantoj povas uzi la komandon «presu» anstataŭ «print».\n"
    -   title: Konservi programojn
        text: "Because you are now logged in, you'll see the blue banner with My profile and My programs.\nThese tabs exist for your students too. In My programs you can find all the codes that you've saved.\n\nYou can save your projects easily by giving your project a name in the white bar and pressing the green button Save Code.\nYou (and your students) can also share programs. These programs will be posted on our explore page, for everybody to see and use.\nIf you want to unshare your program, go to 'My programs' and click 'Unshare'.\n"
-   subsections:
    -   title: Instruado per Hedy
        text: "Hedy contains a lot of different levels that each teach a different new skill. We recommend to teach one level per lesson.\nThis gives your students the time to fully grasp a new command or concept and practice with it, before moving on to the next level.\nWe use this structure in our lessons:\n"
    -   title: Enkonduko
        text: "You can start your lessons by activating your students' prior knowledge: What do they already know about the subject, what did they learn in the previous lesson and which mistakes did they make that they've now learned from?\nThis way all the previously learned commands and frequently made mistakes are fresh in your students' memories, when you strat introducing the new lesson.\n"
    -   title: Enkondukado de novaj konceptoj kaj komandoj
        text: "The new concepts and commands can be very hard for some students to fully understand.\nThat's why it's of importance to model the proper use of the new commands to your students.\nEspecially in the lower levels, where some students have no experience whith programming at all, it can be hard for them to understand the new abstract concepts.\nShowing a lot of examples makes an abstract concept (for instance: 'What is a variable?') more recognizable and easier to understand ('Look, the variable pet changed into dog').\n"
    -   title: Let's get to work
        text: "Each level contains different adventures that you can find in the pink tabs. The first pink tab explains the new commands in this level.\nThe following tabs are adventures that the students can try out and make their own.\nThe adventures are arranged from easiest to hardest, so we recommend to start on the left and your your way to the right.\nThe last tab 'what's next' gives a little teaser of what you'll learn in the next level. Of course, you can select the adventures you want your students to do for each level.\nThey don't always have to make every adventure. Every adventure contains an example code, that the students can try out with the green button.\nThe example code gets copied to the workfield, where the students can try out the code and adjust it to make it their own.\nStimulate your students to turn the example codes into their own projects by adding their own ideas and making their own variation of the adventure.\n"
    -   title: Kvizo
        text: "To test whether your students have picked up all the new info in the level, you can let them make the quiz.\nThe quiz contains 10 multiple choice questions about the new concepts and command to that level.\nNot every level has a quiz yet, as we are still building the quizzes.\n"
    -   title: Taksado
        text: "Round up your lesson by having a brief evaluation. What did the students learn? Which hardships did they come across?\nHow did they learn from their mistakes? And of course: What did they create?\nStudents are often very proud of their own creations, so it's nice to save a little time and gove your students the opportunity to show their work to their classmates.\n"
    title: Instruado per Hedy
    key: instruado
-   title: "Extra Hedy features"
    key: "features"
    subsections:
    -   title: "Teacher Statistics"
        text: |
            This [video](https://www.youtube.com/watch?v=iwHVG4NRKI4&t=5s) shows you more information on how to use the teacher statistics in your class.
    -   title: "Make your own adventure"
        text: |
            It is also possible for teachers to create your own adventure. [This video](https://www.youtube.com/watch?v=A0zbXpxX4q4) shows you how to create your own adventure as a teacher and add it to your class(es).
    -   title: "Explore page"
        text: |
            On the [explore](https://hedycode.com/explore) page you can view the work of other Hedy users. You can try out their programs and use them as inspiration to create something cool yourself.
            You can also add a program you've made to the explore page yourself by clicking 'Save and share code' in the coding screen or go to My Programs and click 'Share'.
            Don't want to share your work anymore? Simply go to 'My Programs' and click 'Unshare'.
            If you want more information about the explore page, check out this [video](https://www.youtube.com/watch?v=26boFjqvS5Q).
    -   title: "My achievements"
        text: |
            If you click on your username in the topright corner of your screen, you can go to [My achievements](https://hedycode.com/my-achievements). On this page you achievements are collected. Your students have such a page as well.
            When you hover over the badge with your mouse, you'll see how to earn the badge. There are hidden badges too, of which you'll have to find out yourself how to earn them.
            If you want more information on the achievements, check out this [video](https://www.youtube.com/watch?v=-FjmKejukCs).
    -   title: "High Scores"
        text: |
            On [this page](https://hedycode.com/highscores) you can see the high scores of all Hedy users.
            In this [video](https://www.youtube.com/watch?v=IqTiUkBVTo8) you can learn some more about the high scores.
    -   title: "Debugger"
        text: |
            Is your (student's) code not working? There must be a bug (coding mistake) in it! You can use the debugger to find the mistake.
            The debugger is the ladybig button in your coding screen. If you press it, you can run your code line by line to find your mistake.
            Have you found the mistake? Press the red stop button and the debugger will shut off.
    -   title: "Read aloud"
        text: |
            Do you want the output of your program to be read aloud? Then you can use the read aloud function that is found under the 'run code' button in your coding screen.
    -   title: "Programmers mode"
        text: |
            Distracted by all the adventures, or do you want to make a long program? Then check out the 'Programmers Mode' switch at the bottom of your coding screen.
            Programmers mode allows you and your students to use a bigger coding screen.
    -   title: "Other useful features"
        text: |
            This [video](https://www.youtube.com/watch?v=c4MntPPgl1Y) shows you even more features of Hedy, like the cheatsheets and the keyboard switcher.
-   levels:
    -   level: '1'
        sections:
        -   title: Lernantoj forgesas tajpi komandojn
            example:
                error_text: "For example they type a sentence without using print.\n"
                error_code: "Jen tekst' ne presebla de Hedy\n"
                solution_text: "Teach your students to always start a line of code with a command.\n"
                solution_code: "presu Hedy povas presi tion!\n"
        -   title: Students use capitals when typing commands
            example:
                error_text: "Commands won't work if they are in capitals.\n"
                error_code: "Ask Why does my code fail?\nPrint Because I'm using capitals.\n"
                solution_text: "Minuskligu la majusklojn.\n"
                solution_code: "ask Why does my code work now?\nprint Because I removed the capitals!\n"
        -   title: Students use echo without ask
            example:
                error_text: "Echo is made to repeat an answer after an ask command. Without ask echo won't do anything.\n"
                error_code: "eĥu Via nomo estas\n"
                solution_text: "Add an ask command to make it work.\n"
                solution_code: "demandu Kio estas via nomo?\neĥu Via nomo estas\n"
        -   title: Students want their echo word (variable) to be in the middle of a sentence
            example:
                error_text: "And they are right! That's why they will learn to use proper variables in the next level.\n"
                error_code: "ask Which programming language is the most fun?\necho is the best!\n"
                solution_text: "In level 1 we have to keep it at this:\n"
                solution_code: "ask Which programming language is the most fun?\necho The best is...\n"
        -   title: 'Turtle: Students let the turtle walk off of the screen'
            example:
                error_text: "Often students love to try out big numbers when using the turtle, which causes the arrow to walk off the screen.\n"
                error_code: "antaŭen 300\nturnu 90\n"
                solution_text: "In the example. students tend to think that the turn command doesn't work. Eventhough is does work, but you can't see it happening off screen. Use smaller numbers to prevent this from happening.\n"
                solution_code: "antaŭen 100\nturnu 90\n"
        -   title: "Turtle: Students use the command backward, but that doens't exist"
            example:
                error_text: "Backward is not a command.\n"
                error_code: "malantaŭen 100\n"
                solution_text: "To make the turtle go backwards, you use the forward command and a negative number. For example:\n"
                solution_code: "antaŭen -100\n"
    -   level: '2'
        sections:
        -   title: Students make typos in their commands
            example:
                error_text: "Hedy can't recognize a command with a typo.\n"
                error_code: "prinnt Don't make typos!\n"
                solution_text: "Teach your students to read the error messages. This way they can find out themselves what went wrong.\n"
                solution_code: "print Don't make typos!\n"
        -   title: Students forget that the ask command has changed
            example:
                error_text: "In this level students learn about variables. The ask command requires a variable as well, but students forget this.\n"
                error_code: "ask what would you like to eat?\n"
                solution_text: "In this level you have to tell Hedy where to save your answer, so it can be used later on. This is called a variable.\n"
                solution_code: "order is What would you like to eat?\n"
        -   title: 'Students try to use the echo command. '
            example:
                error_text: "For some students it might be frustrating to learn that the echo command doesn't work anymore. That's why it's very important to explain the advantages of using variables. For example you can use multiple variables in a code, and you can put them anywhere you like in a sentence!\n"
                error_code: "answer is ask Why doesn't echo work anymore?!\necho\n"
                solution_text: "Uzu variablon anstataŭe.\n"
                solution_code: "answer is ask Why doens't echo work anymore?!\nprint answer\n"
        -   title: Students use a variable name or as a normal word
            example:
                error_text: "In the example below the word 'name' is used a a variable, but also as a normal text. The output of this code will be 'Hi my Hedy is Hedy'.\n"
                error_code: "name is Hedy\nprint Hi my name is name\n"
                solution_text: "So don't use a word you want to use in the text as a variable name. In level 4 this is solved with quotation marks.\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n"
        -   title: Students use long variable names containing two words.
            example:
                error_text: "A variable should be named with one word. You could use an underscore to connect two words. That counts as one.\n"
                error_code: "chosen door is ask Which door do you pick?\n"
                solution_text: "Add an underscore.\n"
                solution_code: "chosen_door is ask which door do you pick?\n"
        -   title: Students might use two different names for the same variable
            example:
                error_text: "In this example the student has used 'horse' and 'name' for the same variables.\n"
                error_code: "horse is ask What is your horse called?\nprint Your horse is called name\n"
                solution_text: "Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.\n"
                solution_code: "name is ask What is your horse called?\nprint Your horse is called name\n"
    -   sections:
        -   title: Students try to print whole lists
            example:
                error_text: "A list can't be printed. You can only print one item from the list with at random.\n"
                error_code: "groceries is apples, milk, chocolate\nprint groceries\n"
                solution_text: "To print a list of all the groceries, you simply need to put them after a print command. Else you can use the list to print one item with at random.\n"
                solution_code: "print apples, milk, chocolate\n\nor\n\ngroceries is apples, milk, chocolate\nprint groceries at random\n"
        -   title: Students use the name of a variable or list as regular text.
            example:
                error_text: "This problem probably occured in level 2 as well. Now it can happen with lists too.\n"
                error_code: "name is Hedy\nprint Hi my name is name\n\nor\n\nanimal is rhino, bee, swan\nprint The best animal is... animal at random\n"
                solution_text: "Don;t use the names of variables or lists in regular text to print. In level 4 this problem is solves with quotation marks.\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n\nor\n\nanimals is rhino, bee, swan\nprint The best animal is... animals at random\n"
        -   title: Students forget at in at random
            example:
                error_text: "Kiel en la ekzemplo\n"
                error_code: "birds is sparrow, seagull, robin\nprint birds random\n"
                solution_text: "This problem is solved by adding the word at.\n"
                solution_code: "birds is sparrow, seagull, robin\nprint birds at random\n"
        -   title: Students forget to use the print command when also using the at random command.
            example:
                error_text: "Or they will sometimes put at random at the beginning of the line.\n"
                error_code: "fruit is apple, cherry, banana\nfruit at random\n"
                solution_text: "Emphasize to your students that you always need a print to print text.\n"
                solution_code: "fruit is apple, cherry, banana\nprint fruit at random\n"
        -   example:
                solution_code: "picoj estas funga, tinusa, kvarsezona\npresu picoj laŭ hazardo\n"
                error_text: "In a list items are seperated with a comma.\n"
                error_code: "pizzas is funghi tonno quattro stagioni\nprint pizzas at random\n"
                solution_text: "After each item on your list, there should be a comma\n"
            title: Students forget to use commas in their lists
        -   title: Students try to use at random without a list.
            example:
                error_text: "Ekzemple,\n"
                error_code: "kluboj estas Manĉestro Unuiĝinta\npresu kluboj laŭ hazardo\n"
                solution_text: "Hedy can't print anything at random, because there is no list to choose from.\n"
                solution_code: "kluboj estas Manĉestro Unuiĝinta, Bavario Munkeno, FK Barcelono\npresu kluboj laŭ hazardo\n"
        -   title: 'Students try to use add/remove without a list '
            example:
                error_text: "In the example below 'names' is not a list, but a variable. You cannot add anything to it.\n"
                error_code: "nomoj estas Jake\nvia_nomo estas demandu Kiu vi estas?\naldonu via_nomo al nomoj\npresu nomoj laŭ hazardo\n"
                solution_text: "There has to be a list first, so you have to add a second name to turn names into a list, for example Amy. If you don't want amy on your list, you can use remove to remove it after.\n"
                solution_code: "names is Jake, Amy\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
        -   title: Students forget to use to/from in add/remove.
            example:
                error_text: "Without to/from the add/remove command won't work.\n"
                error_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice\nremove dice\nprint I love adventures at random\n"
                solution_text: "Hedy has to know which list the item should be added to/removed from.\n"
                solution_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice to adventures\nremove dice from adventures\nprint I love adventures at random\n"
        level: '3'
    -   level: '4'
        sections:
        -   title: Students forget to use quotation marks on both sides of the text
            example:
                error_text: "In this level print and ask need a set of quotation marks. One before of the text and one after.\n"
                error_code: "presu Saluton\nsento estas demandu 'Kiel vi fartas?\n"
                solution_text: "Add the correct quotation marks.\n"
                solution_code: "presu 'Saluton'\nsento estas demandu 'Kiel vi fartas?'\n"
        -   title: Students use the wrong quotation marks
            example:
                error_text: "It is important to start your lesson by checking if the students know how to type a quotation mark properly. ELse they might use the \"double quotes\" or the `skewed one`.\n"
                error_code: "print `Welcome to the restaurant`\nfood is ask \"What would you like to order?\"\n"
                solution_text: "These are the correct quotation marks:\n"
                solution_code: "print 'Welcome to the restaurant'\nfood is ask 'What would you like to order?'\n"
        -   title: Students use an apostrophe in their text
            example:
                error_text: "From this level on apostrophes are not allowed. They are often used in English when thyping contractions like you're, don't or what's.\n"
                error_code: "presu 'Jen eraro pri l' sintakso'\n"
                solution_text: "You can choose to use the wrong grammar and just leave the apostrophe out. Or you could use the ` as an apostrophe.\n"
                solution_code: "presu 'Tio ne estas eraro pri l sintakso'\npresu 'Tio ne estas eraro pri l` sintakso'\n"
    -   sections:
        -   title: Students forget to use print in an if command
            example:
                error_text: "After students use if or else they forget to use a second command like print or ask.\n"
                error_code: "se nomo estas Hedy 'Bonege!'\nalie 'Hedy estus pli bona!'\n"
                solution_text: "Add the print command to fix it.\n"
                solution_code: "se nomo estas Hedy 'Bonege!'\nalie presu 'Hedy estus pli bona!'\n"
        -   title: Students might use two different names for the same variable
            example:
                error_text: "In this example the student has used 'horse' and 'name' for the same variables.\n"
                error_code: "horse is ask 'What is your horse called?'\nif name is Bonfire print 'cool'\nelse print 'less cool!'\n"
                solution_text: "Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.\n"
                solution_code: "horse is ask 'What is your horse called'\nif horse is Bonfire print 'cool!'\nelse print 'less cool!'\n"
        -   title: Students still forget the quotes on both sides.
            example:
                error_text: "If commandos can get very long and students tend to forget to use quotes.\n"
                error_code: "if name is Hedy print fun\nelse print 'meh!\n"
                solution_text: "Always use 2 quotes in a print command.\n"
                solution_code: "se nomo estas Hedy presu 'amuza'\nalie presu 'ba!'\n"
        -   title: Students use quotes around variable names.
            example:
                error_text: "In this level there are no quotes around variable names.\n"
                error_code: "if 'name' is 'Hedy' print 'fun'\nelse print 'meh!'\n"
                solution_text: "Remove the quotes to get the code to work.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!\n"
        -   title: Students use long variable names containing two words.
            example:
                error_text: "A variable should be named with one word. You could use an underscore to connect two words. That counts as one.\n"
                error_code: "chosen door is ask 'Which door do you pick?'\n"
                solution_text: "Add an underscore.\n"
                solution_code: "chosen_door is ask 'which door do you pick?'\n"
        -   example:
                error_text: "For example this student Hedy to tell all his friends that they are funny, but other classmates would be told that they are not.\n"
                error_code: "if name is Jesse, David, Souf print 'You are funny' else print 'You are not funny'\n"
                solution_text: "You could use the `in` command for that. It is explained in a higher level, but it does already work in level 5.\nAnother solution is to use multiple if commands and no else command. The disadvantage is that it won't tell the other classmates that they are not funny.\n"
                solution_code: "friends is Jesse, David, Souf\nname is ask 'Who are you?'\nif name in friends print 'You are funny'\nelse print 'You are not funny'\n\nor\n\nname is ask 'Who are you?'\nif naam is Jesse print 'You are funny'\nif naam is David print 'You are funny'\nif naam is Souf print 'You are funny'\n"
            title: Students want multiple answers to be correct
        -   example:
                solution_text: "Pick a different name for your variable.\n"
                error_text: "In the example below the password is 'password'. This will result in it always being correct.\n"
                error_code: "password is ask 'What is the password?'\nif password is password print 'Access granted'\nelse print 'Acces denied!'\n"
                solution_code: "secret_password is ask 'What is the password'\nif secret_password is password print 'Access granted!'\nelse print 'Access denied!'\n"
            title: The students make the variable name the same as the value in the if statement
        level: '5'
    -   level: '6'
        sections:
        -   title: Students struggle with quotation marks
            example:
                error_text: "Some students struggle with adding quotattion marks or not. If you add quotation marks, the output screen will literally show '5+5'.\n"
                error_code: "print '5 + 5'\n"
                solution_text: "In this code the output screen will print '10'.\n"
                solution_code: "print 5 + 5\n"
        -   example:
                error_text: "Some students will find it hard to do maths with variables. Try to show them very simple examples, like:\n"
                error_code: "age = ask 'How old are you?'\nprint 'Next year you will be ' age + 1\n"
                solution_text: "Or take it a step further like this.\n"
                solution_code: "price = 0\nprint 'Welcome to our burger restaurant'\nburger = ask 'Would you like a burger?'\nif burger = yes price = price + 10\ndrink = ask 'Would you like a drink?'\nif drink = yes price = price + 4\nprint 'That will be ' price ' euros please'\n"
            title: Students struggle with the concept of doing maths with a variable
    -   level: '7'
        sections:
        -   title: Students forget one of the word of the repeat command, or they forget the print command
            example:
                error_text: "Make sure that the students know to use both the full repeat command and the print command.\n"
                error_code: "repeat 3 times 'For he`s a jolly good fellow'\nrepeat 3 print 'Which nobody can deny!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "repeat 3 times print 'For he`s a jolly good fellow'\nrepeat 3 times print 'Which nobody can deny!'\n"
        -   title: Students try to repeat multiple lines
            example:
                solution_text: "You should go to the next level to be able to repeat multiple lines. So on this level you'll have to print everything seperately.\n"
                solution_code: "drink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\n"
                error_text: "In this level you can only repeat one line of code multiple times. In this code the student wanted to print 3 different drinks, but it won't work. It will ask the question 3 times and only print the last answer.\n"
                error_code: "repeat 3 times drink = ask 'What would you like to drink?'\nprint drink\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                error_code: "repeat 100 times print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times print 'This is enough'\n"
    -   level: '8'
        sections:
        -   title: Students use the indentation wrong
            example:
                error_code: "repeat 3 times\nprint 'hello'\n"
                solution_text: "This is the correct code:\n"
                error_text: "Indentation is a new concept in this level, that is hard to use for some students. Make sure they practise some simple codes before making a whole program with it.\n"
                solution_code: "repeat 3 times\n    print 'hello'\n"
        -   title: Students only repeat 1 line when they wanted to repeat multiple lines
            example:
                error_text: "For instance, in the code below the student wanted to take the drinks order of 3 people. But insted the program asked 3 times, but only wrote down one order.\n"
                error_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
                solution_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\n    print drink\n"
        -   title: Students want to nest if statements, or put if statements inside a loop
            example:
                error_text: "In this level students aren't allowed yet to put if statements inside other if statements or inside repeat loops.\nIn the next level this is allowed.\n"
                error_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    repeat 3 times\n        print 'Hip Hip Hooray!'\n"
                solution_text: "This is the correct code for this level:\n"
                solution_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                error_code: "repeat 100 times\n    print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times\n    print 'This is enough'\n"
        -   title: Students use the if command to check if the variable value is the same as the variable name
            example:
                error_text: "We have seen this mistake by some of our students. They make a password for their computer, but they make the password 'password'.\nIn line 2 the computer is asked to check wheter the variable password is the same as the variable password, so itself. Which means the answer is alway yes.\nSo with this code the answer will always be 'You can come in' no matter what the player fills in.\n"
                solution_text: "You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.\n"
                solution_code: "password is ask 'What is the password?'\nif password is 'password'\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                error_code: "password is ask 'What is the password?'\nif password is password\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
    -   level: '9'
        sections:
        -   example:
                solution_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n    if book is yes\n        print 'Robin buys the book and goes home'\n    else\n        print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
                error_text: "The hardest part about this level is getting the indentation right. Students love nesting if statements, sometimes even inside other nested if statements. Keeping track of indentation can get pretty tough.\n"
                solution_text: "This is the correct code. Try to keep track of all the different constructions when putting if statements inside other if statements.\n"
                error_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n        if book is yes\nprint 'Robin buys the book and goes home'\nelse\n    print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
            title: Students make mistakes with indentation
    -   level: '10'
        sections:
        -   title: Students so not use the for command correctly
            example:
                error_text: "We often see that students try to print the list (in the example animals) instead of the items of the list.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animals\n"
                solution_text: "The word animals in the last line should be changed into animal.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
        -   title: Students forget the indentation
            example:
                solution_text: "You should use indentation after a for command.\n"
                error_text: "Students tend to forget to use indentation after a for command.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\nprint 'I love ' animals\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
    -   level: '11'
        sections:
        -   title: Students forget to use indentation
            example:
                error_text: "Make sure that the students use indentation.\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "This is the correct code:\n"
                solution_code: "for i in range 1 to 5\n    print i\n"
        -   title: Students don't understand the i
            example:
                error_text: "Some students don't understand that i is a variable. i is chosen, because it is used in Python programming, but you could just as easily use a different variable name.\nFor example, this code:\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "Could just as well be replaced with this code. It works the same.\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
    -   sections:
        -   example:
                error_text: "Students need more quotation marks now than in the previous levels. In this example quotation marks were forgotten in the list and in the if command.\n"
                error_code: "superheroes = Spiderman, Batman, Iron Man\nsuperhero = superheroes at random\nif superhero = Batman\n    print 'IM BATMAN!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "superheroes = 'Spiderman', 'Batman', 'Iron Man'\nsuperhero = superheroes at random\nif superhero is 'Batman'\n    print 'IM BATMAN!'\n"
            title: Students forget quotation marks
        -   example:
                solution_text: "This is the correct code:\n"
                error_text: "You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.\nIn the example below, you can't do maths with the number 25, because it's in quotation marks.\n"
                error_code: "score = '25'\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
                solution_code: "score = 25\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
            title: Students use quotation marks on numbers they want to use for calculations
        -   title: Students use commas instead of periods in decimal numbers
            example:
                error_text: "Decimal numbers can be used from this level on, but you can't use commas.\n"
                error_code: "print 2,5 + 2,5\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print 2.5 + 2.5\n"
        level: '12'
    -   level: '13'
        sections:
        -   title: Students confuse `and` with `or`
            example:
                error_text: "Both commands might appear similar, but their functions are very different.\n"
                error_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' or time is 'yes'\n    print 'Lets play!'\n"
                solution_text: "In this case, the person should answer yes on both questions, so you should use `and`.\n"
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
    -   level: '14'
        sections:
        -   title: Students confuse the < and > signs
            example:
                error_text: "Often, students are already familiar with these signs from maths class. But if your students don't know these signs yet, they might have a challenge with it.\n"
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
                solution_text: "This is the correct code:\n"
        -   title: Students use the wrong signs for `!=` `<=` and `>=`
            example:
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                error_code: "name = ask 'What is your name?'\nif name =< 'Hedy'\n    print 'You are not Hedy'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "name = ask 'What is your name?'\nif name != 'Hedy'\n    print 'You are not Hedy'\n"
        -   title: Students forget to use the == sign
            example:
                error_text: "In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.\n"
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "name = ask 'What is your name?'\nif name == 'Hedy'\n    print 'You are cool!'\n"
    -   level: '15'
        sections:
        -   example:
                error_text: "Indentation is often hard for students.\n"
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
            title: Students forget indentation in the while loop
    -   sections:
        -   title: Students forget the brackets
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = 'starwberry', 'chocolate'\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students use the wrong brackets
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   example:
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream at random ' icecream'\n"
                solution_text: "This is the correct code:\n"
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
            title: Students still use the old at random command
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        level: '16'
    -   level: '17'
        sections:
        -   title: Students use elif like else, so without a condition
            example:
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
                error_text: "The elif command needs a condition behind it. It cannot be used like else, without a condition.\n"
                error_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif:\n    print 'I like green'\n"
                solution_text: "This is the correct code:\n"
        -   title: Students forget the colon
            example:
                solution_text: "This is the correct code:\n"
                solution_code: "answer = ask 'How are you doing?'\nif answer is 'great':\n    print 'Me too!'\nelif answer is 'bad':\n    print 'Let me cheer you up!'\nelse:\n    print 'Im great!'\n"
                error_text: "After each command that requires indentation, a colon should be used.\n"
                error_code: "answer = ask 'How are you doing?'\nif answer is 'great'\n    print 'Me too!'\nelif answer is 'bad'\n    print 'Let me cheer you up!'\nelse\n    print 'Im great!'\n"
    -   sections:
        -   title: Students forget to use the brackets
            example:
                error_text: "Students will forget to put brackets around their text.\n"
                error_code: "print 'my name is Hedy!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print('my name is Hedy!')\n"
        -   title: Students will still use the ask command
            example:
                error_text: "The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.\n"
                error_code: "print('My name is Hedy!')\nname = ask('What is your name?')\nprint('So your name is ', name)\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print('My name is Hedy!')\nname = input('What is your name?')\nprint('So your name is ', name)\n"
        -   title: Students might use the brackets as quotation marks
            example:
                error_text: "They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.\n"
                error_code: "temperature = 25\nprint('It is ') temperature ('degrees outside')\n"
                solution_text: "This is the correct code:\n"
                solution_code: "temperature = 25\nprint('It is ', temperature, 'degrees outside')\n"
        level: '18'
    title: Oftaj eraroj
    key: oftaj_eraroj
    intro: "You can learn from your mistakes, especially in coding!\nMaking mistakes is unavoidable, and a great opportunity to learn, but for teachers it can be a challenge to find the correct fix for a mistake!\nEspecially as the codes get longer and longer as the levels progress. That's why we've made a list with frequently made mistakes in each level, and their solutions.\n"
start-sections:
-   title: Kio estas laŭgrada programlingvo?
    text: "Lerni programi povas esti malfacile. Nu, la programado mem *ne* estas malfacila! Sed estas multaj reguloj parkerigendaj, same kiel kiam vi komencis lerni Esperanton.\nSimile, vi bezonos multan praktikon por lerni programadon.\n\nVi povas legi ĉi tiujn frazojn facile. Sed ĉu vi memoras, kiam vi lernis eklegi? Tiam, vi postulis iom da tempo por ĉiu litero!\nTio validas ankaŭ por programado: tio eble estos malfacile komence, sed ĝi plifaciliĝos!\n\nAgrable, Hedy estas *laŭgrada*. Tio signifas, ke vi ne devas lerni ĉiujn regulojn samtempe.\nLa unuaj kelkaj niveloj ne havas multajn regulojn; tial, vi povas komforte alkutimiĝi al programado.\nEn ĉiu nivelo ni enkondukas novajn regulojn, pliigante la nombron da komandoj, kiujn vi konas. Komandoj estas instrukcioj por komputilo.\n"
-   title: Kial Hedy estas laŭgrada?
    text: "En la jena anglalingva video, Felienne, la kreinto de Hedy, klarigas kial Hedy estas laŭgrada.\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/fmF7HpU_-9k\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"
-   title: Por kiuj estas Hedy?
    text: "Hedy estas por ĉiuj infanoj, kiuj volas lerni programadon! Tamen, ni postulas al vi la kapablon legi Esperanton facile.\n"
-   title: "Multi-lingual programming"
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: Ĉu mi bezonas sperton pri programado?
    text: "Ne, tio ne estas bezonata. Tamen, se vi programis per Scratch aŭ Python, kelkaj komandoj aspektos konataj al vi.\n"
-   title: Ĉu Hedy estas senkosta?
    text: "Jes! La Universitato de Lejdeno permesas al ni disponigi ĝin senpage. Hedy ankaŭ estas «Malfermita Fonto», kio signifas, ke ĉiuj, kiuj povas programi, rajtas helpi nin plibonigi Hedy.\nVi povas trovi la kodon ĉe [GitHub](https://github.com/hedyorg/hedy).\nSe vi ŝatas Hedy kaj volas kontribui, ni ja akceptas [donacojn](https://github.com/sponsors/hedyorg) (kaj dankegas pro ajnaj donacoj)!\n"
-   title: Ĉu mi devas instali ion?
    text: Ne. Hedy funkcias en la TTT-legilo, kiu estas la programo, kiun vi uzas por legi ĉi tiun paĝon. Verŝajne Chrome aŭ Edge aŭ Firefox. Hedy ankaŭ funkcias sur via telefono aŭ tabulkomputilo.
learn-more-sections:
-   title: Ĉu Hedy plaĉas al vi?
    text: "We love to hear from you!\n\n[Click here to send us a message](mailto:hello@hedy.org \"About Hedy\")\n"
-   title: Ĉu vi trovis cimon?
    text: "[Sciigu nin ĉe GitHub](https://github.com/hedyorg/hedy/issues/new/choose)\n"
-   title: Ĉu vi volas helpi?
    text: "The easiest way is to help with [translating Hedy](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nBelow the current status, help us complete a language, or add a new one.\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
    title: Translating Hedy
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
