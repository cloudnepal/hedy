title: "Hedy dokumentation"
sections:
-   title: "Einführung zu Hedy"
    key: "intro"
    subsections:
    -   title: "Was ist Hedy?"
        text: |
            Hedy ist eine textuelle Programmiersprache, die speziell für (Pre-)Teens (10 bis 15 Jahre alt) entwickelt wurde.
            Im Gegensatz zu Programmiersprachen für Kinder, wie Scratch, verwendet Hedy keine Codeblöcke, sondern textuellen Code.
            Mit Hedy lernt man also, Code zu tippen, wie es echte Programmierer tun, aber in kleinen Schritten mit spielerischen Übungen.
            Auf diese Weise kann Hedy als Sprungbrett zu echten Programmiersprachen wie Python dienen, und das auf eine zugängliche und vor allem spaßige Weise!
            Hier können Sie sich ein [Video](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) über die Entwicklung von Hedy als Programmiersprache ansehen.
    -   title: "Zielgruppe"
        text: |
            Hedy wurde für Schüler der Unter- und Mittelstufe entwickelt (10 – 15 Jahre).
            Es ist wichtig, dass die Schüler gut lesen können. Wir empfehlen, erst mit Hedy anzufangen, wenn die Schüler mindestens das Leseniveau der 3. Klasse erreicht haben.
            Schüler (und Lehrer!) brauchen keine Programmiererfahrung, bevor sie mit Hedy beginnen.
    -   title: "Wie funktioniert Hedy?"
        text: |
            Hedy ist in Level unterteilt, in denen neue Befehle gelehrt werden. Jede Stufe enthält eine Vielzahl von Abenteuern, in denen die neu erlernten Befehle geübt werden können.
            Als Lehrer können Sie entscheiden, welche Abenteuer für Ihre Schüler zur Verfügung stehen. Werden sie in diesem Level ein Restaurant, eine Rechenmaschine oder ein Spukhaus bauen? Innerhalb jedes Levels sind die Abenteuer vom einfachsten zum schwierigsten geordnet.
            So werden Ihre Schüler immer wieder neu herausgefordert. Die Abenteuer können von den Schülern einzeln gelöst werden, oder Sie können sie in einem klassischen Unterricht einsetzen.

            Zu den Abenteuern gehört auch ein Code-Beispiel, damit auch weniger digital informierte Lehrer Hedy nutzen können!
            Natürlich ist Hedy auch für die kreativen Lehrer gedacht, die gerne ihre eigenen Unterrichtspläne und Abenteuer erstellen!

            Nachdem Sie alle Abenteuer eines bestimmten Levels programmiert haben, können Ihre Schüler ihr Wissen in einem Quiz testen.
            Sie können die Arbeit und den Fortschritt Ihrer Schüler auf der Klassenseite verfolgen.
    -   title: "Geräte"
        text: |
            Hedy ist webbasiert, d.h. es funktioniert auf jedem Gerät mit einem Browser (Chrome, Firefox, Edge usw.), sodass Laptops, Chromebooks, Tablets und sogar Smartphones geeignet sind, um Hedy zu verwenden.
            Du musst nichts herunterladen, bevor du mit Hedy arbeitest, geh’ einfach auf die Website und schon kannst du loslegen!
    -   title: Die Hedy Community
        text: "Alle Hedy-Lehrpersonen, Programmierer und andere Fans sind auf unserem [Discord-Server](https://discord.gg/8yY7dEme9r) willkommen. Dies ist der ideale Ort, um sich über Hedy auszutauschen: wir haben Channel, wo du deine coolen Projekte und Lektionen zeigen kannst, Channel um Fehler zu melden, und Channel um sich mit anderen Lehrpersonen und dem Hedy-Team zu unterhalten.\n[Hier](https://www.youtube.com/watch?v=Lyz_Lnd-_aI) findest du ein Video darüber, wie man der Discord Community beitritt.\n"
-   title: "Tutorial"
    key: "tutorial"
    subsections:
    -   title: "Tutorial"
        text: |
            Do you want to follow the tutorial (again)? Click [here](https://hedycode.com/tutorial)
-   title: "Vorbereitungen"
    key: "vorbereitungen"
    subsections:
    -   title: "Klasse Anlegen"
        text: |
            Als Lehrer oder Lehrerin kannst du eine Klasse für deine Schülerinnen und Schüler erstellen. In dieser Klasse kannst du die SuS-Accounts und ihre Programme sehen und ihren Fortschritt beobachten.
            Du kannst deine Klasse modifizieren und auswählen, welche Abenteuer für sie verfügbar sind. Auf diese Weise werden deine Schülerinnen und Schüler nicht von der Anzahl der Abenteuer und Level überfordert und sie können sich speziell auf die Abenteuer konzentrieren, mit denen sie üben sollen.
    -   title: "Customize your Class"
        text: |
            You can also customize your class and choose which adventures are available for them. This way your students won't be overwhelmed by the amount of adventures and levels, and they can specifically focus on the adventures you'd like them to practice with.
            This [video](https://www.youtube.com/watch?v=qva9gXBoUwY&t=10s) shows you how to customize your class.
    -   title: Schüler-Accounts
        text: "Es gibt 2 Wege, wie deine Schülerinnen und Schüler einer Klasse beitreten: Du kannst sie ihre eigenen Accounts erstellen lassen oder für sie Accounts anlegen.\n\n**Du erstellst Accounts für deine Schülerinnen und Schüler**\nDer einfachste Weg Schülerinnen und Schüler zu deiner Klasse hinzuzufügen ist Accounts für sie anzulegen. Dies geht, indem man auf \"Erstelle SuS-Accounts\" klickt und die Nutzernamen und Passwörter für sie ausfüllt.\nDie Schülerinnen und Schüler können sich mit den Nutzernamen und Passwörtern deiner Wahl einloggen. Danach können sie beides ändern, wenn sie möchten, und bleiben trotzdem in deiner Klasse.\nDieses [Video](https://www.youtube.com/watch?v=eEQvik-Ce5M) zeigt wie du am schnellsten und einfachsten SuS zu deiner Klasse hinzufügst.\n\n**Schülerinnen und Schüler machen ihre eigenen Accounts**\nDeine Schülerinnen und Schüler gehen auf die Hedy Website und erstellen ihre eigenen Accounts, so wie du es getan hast. Um sie deiner Klasse hinzuzufügen, müssen sie nur auf den Einladungs-Link klicken.\nDu findest den Einladungs-Link auf der Klassenseite, um ihn deinen Schülerinnen und Schülern zu schicken. Beachte, dass deine Schülerinnen und Schüler eingeloggt sein müssen, wenn sie den Link anklicken, damit es reibungslos läuft.\nDu kannst eine Schülerin oder einen Schüler manuell einladen, indem du den \"Einladen mit Nutzername\"-Knopf drückst.\n"
    -   title: Bevorzugte Sprache einstellen
        text: "Wenn Schülerinnen und Schüler Konten erstellen, sollen sie eine 'bevorzugte Sprache' auswählen. Hedy wird immer in dieser Sprache geladen werden.\nDiese Sprache kann später geändert werden in dem man zu 'Mein Konto' und dann zu 'Meine persönlichen Einstellungen' navigiert.\nAb Dezember 2021 ist die Einstellung einer bevorzugten Sprache für jedes Hedy Konto obligatorisch.\nWenn dein Konto oder das Konto von Schülerinnen und Schülern früher als dieses Datum erstellt wurde, erhält das entsprechende Konto eine Nachricht, dass die bevorzugte Sprache fehlt.\nKeine Sorge! Navigiere zu 'Mein Konto' und stelle eine Sprache in den Profil-Einstellungen ein.\nBis eine Sprache eingestellt wurde, wird Hedy in der Browser Sprache angezeigt, sofern sie unterstützt wird, ansonsten auf Englisch.\n\n**Für Nicht-Englischsprachige**\nDu kannst nicht nur die Sprache der Abenteuer auf deine eigene Sprache festlegen. Auch die Schlüsselwörter (wie z.B. 'print' oder 'ask') können in der eigenen Sprache angezeigt werden.\nSo kannst du deinen Schülern programmieren mit englischen Schlüsselwörter beibringen, du kannst sie aber auch in ihrer eigenen Sprache programmieren lassen. Zum Beispiel können niederländische Schüler den Befehl 'vraag' anstatt 'ask' benutzen.\n\n**Video**\nDieses [Video](https://www.youtube.com/watch?v=QrVZETj4oLM) zeigt dir, wie man eine präferierte Sprache setzt und die Schlüsselwörter ebenfalls zur präferierten Sprache ändert.\n"
    -   title: Programme speichern
        text: "Weil du jetzt eingeloggt bist, siehst du das blaue Banner mit \"Mein Profil\" und \"Meine Programme\".\nDiese Tabs existieren ebenfalls für deine Schülerinnen und Schüler. Unter \"Meine Programme\" kannst du alle Programme finden, die du gespeichert hast.\n\nDu kannst deine Programme einfach speichern, indem du ihnen im weißen Balken einen Namen gibst und den grünen Speichern-Knopf drückst.\nDu (und deine Schülerinnen und Schüler) können auch Programme teilen. Diese Programme werden auf unserer [Entdecke-Seite](https://hedycode.com/explore) für jedermann zum Ansehen und Benutzen gepostet.\nWenn du das Programm nicht mehr teilen möchtest, gehe zu \"Meine Programme\" und klicke \"Zurückziehen\".\n"
-   title: "Unterricht mit Hedy"
    key: "unterricht"
    subsections:
    -   title: " "
        text: |
            Hedy contains a lot of different levels that each teach a different new skill. We recommend to teach one level per lesson.
            This gives your students the time to fully grasp a new command or concept and practice with it, before moving on to the next level.
            We use this structure in our lessons:
    -   title: "Slides"
        text: |
            **COMING SOON** Here you'll soon find slides to use in your lessons.
    -   title: "Introduction"
        text: |
            Du kannst deine Lektion damit beginnen, das Vorwissen deiner Schülerinnen und Schüler zu aktivieren: Was wissen sie bereits über das Thema, was haben sie in der vorherigen Stunde gelernt und welche Fehler haben sie gemacht, aus denen sie nun gelernt haben?
            Auf diese Weise sind alle zuvor gelernten Befehle und häufig gemachten Fehler noch frisch im Gedächtnis deiner Schüler, wenn du in die neue Lektion einführst.
    -   title: "Einführung neuer Konzepte und Befehle"
        text: |
            Die neuen Konzepte und Befehle können für einige Schülerinnen und Schüler sehr schwer vollständig zu verstehen sein.
            Deshalb ist es wichtig, dass du deinen Schülerinnen und Schülern den richtigen Umgang mit den neuen Befehlen vorleben.
            Vor allem in den unteren Leveln, in denen einige Schüler überhaupt keine Erfahrung mit der Programmierung haben, kann es für sie schwierig sein, die neuen abstrakten Konzepte zu verstehen.
            Durch das Aufzeigen vieler Beispiele wird ein abstraktes Konzept (z.B. "Was ist eine Variable?") besser erkennbar und leichter verständlich ("Sieh mal, die Variable haustier wurde zu hund").
    -   title: "Lass uns loslegen"
        text: |
            Jedes Level enthält verschiedene Abenteuer, die du in den rosa Tabs findest. Das erste rosa Tab erklärt die neuen Befehle in diesem Level.
            Die folgenden Tabs sind Abenteuer, die die Schülerinnen und Schüler ausprobieren und selbst gestalten können.
            Die Abenteuer sind vom einfachsten zum schwierigsten geordnet, daher empfehlen wir, auf der linken Seite zu beginnen und sich nach rechts vorzuarbeiten.
            Das letzte Tab "Was kommt als Nächstes" gibt einen kleinen Vorgeschmack auf das, was du im nächsten Level lernen wirst. Natürlich kannst du die Abenteuer auswählen, die deine Schülerinnen und Schüler in jeder Stufe machen sollen.
            Sie müssen nicht immer jedes Abenteuer machen. Jedes Abenteuer enthält Beispiel-Code, den die Schülerinnen und Schüler mit der grünen Schaltfläche ausprobieren können.
            Der Beispiel-Code wird in das Arbeitsfeld kopiert, wo die Schülerinnen und Schüler den Code ausprobieren und anpassen können, um ihn zu ihrem eigenen zu machen.
            Rege deine Schülerinnen und Schüler dazu an, den Beispiel-Codes in ihre eigenen Projekte zu verwandeln, indem sie ihre eigenen Ideen hinzufügen und ihre eigene Variante des Abenteuers erstellen.
    -   title: "Quizze und Puzzle"
        text: |
            Um zu überprüfen, ob deine Schülerinnen und Schüler alle neuen Infos in diesem Level aufgenommen haben, kannst du sie ein Quiz machen lassen.
            Das Quiz enthält 10 Multiple-choice-Fragen über die neuen Konzepte und Befehle des Levels.
            Nicht jedes Level hat bereits ein Quiz, weil wir die Quizze erst noch erstellen.
            Manche Level enthalten auch Puzzles. Puzzles zeigen den Schülerinnen und Schüler ein paar Zeilen Code, die die Schülerinnen und Schüler in die richtige Reihenfolge bringen müssen.

            Dieses [Video](https://www.youtube.com/watch?v=lNh5EdZVUwc) zeigt die Quizze und Puzzles.
    -   title: "Auswertung"
        text: |
            Runde deine Lektion mit einer kurzen Evaluation ab. Was haben die Schülerinnen und Schüler gelernt? Auf welche Schwierigkeiten sind sie gestoßen?
            Wie haben sie aus ihren Fehlern gelernt? Und natürlich: Was haben sie kreiert?
            Schülerinnen und Schüler sind oft sehr stolz auf ihre Kreationen, daher ist es nett etwas Zeit einzuplanen, um ihnen die Möglichkeit zu geben ihren Mitschülerinnen und Mitschülern ihre Arbeitsergebnisse zu zeigen.
-   title: "Extra Hedy-Features"
    key: "Features"
    subsections:
    -   title: "Lehrstatistiken"
        text: |
            Dieses [Video](https://www.youtube.com/watch?v=iwHVG4NRKI4&t=5s) zeigt dir mehr Infos, wie man die Lehrstatistiken in deiner Klasse benutzt.
    -   title: "Erstelle dein eigenes Abenteuer"
        text: |
            Für Lehrpersonen ist es auch möglich eigene Abenteuer zu erstellen. [Dieses Video](https://www.youtube.com/watch?v=A0zbXpxX4q4) zeigt dir, wie du dein eigenes Abenteuer erstellst und es zu deinen Klassen hinzufügst.
    -   title: "Seite entdecken"
        text: |
            Auf der [Entdecke](https://hedycode.com/explore)-Seite kannst du die Arbeit anderer Hedy-Nutzer einsehen. Du kannst ihre Programme ausprobieren und sie als Inspiration für deine eigenen coolen Kreationen nutzen.
            Du kannst auch ein selbst erstelltes Programm auf der Entdecke-Seite verfügbar machen, indem du "Code speichern und teilen" im Programmierteil klicken oder unter "Meine Programme" auf "Teilen" klicken.
            Möchtest du dein Programm nicht mehr teilen? Gehe einfach zu "Meine Programme" und klicke "Zurückziehen".
            Wenn du mehr Informationen über die Entdecke-Seite möchtest, schau dir dieses [Video](https://www.youtube.com/watch?v=26boFjqvS5Q) an.
    -   title: "Meine Errungenschaften"
        text: |
            Wenn du auf deinen Nutzernamen in der oberen, rechten Ecke klickst, kannst du zu [Meine Errungenschaften](https://hedycode.com/my-achievements) gehen. Auf dieser Seite werden deine Errungenschaften gesammelt. Deine Schülerinnen und Schüler haben ebenfalls so eine Seite.
            Wenn du mit der Maus über die Medaille gehst, siehst du wie man sie sich verdient. Es gibt auch versteckte Medaillen, bei denen du selbst herausfinden musst, wie man sie sich verdient.
            Wenn du mehr Informationen über Errungenschaften möchtest, schau dir dieses [Video](https://www.youtube.com/watch?v=-FjmKejukCs) an.
    -   title: "Highscores"
        text: |
            Auf [dieser Seite](https://hedycode.com/highscores) kannst du die Highscores aller Hedy-Nutzer sehen.
            In diesem [Video](https://www.youtube.com/watch?v=IqTiUkBVTo8) kannst du mehr über Highscores erfahren.
    -   title: "Debugger"
        text: |
            Funktioniert dein Code (oder der deiner Schülerinnen und Schüler) nicht? Dann muss ein Bug (Programmierfehler) drin sein! Du kannst den Debugger verwenden, um den Fehler zu finden.
            Der Debugger ist der Marienkäferknopf im Programmierbereich. Wenn du ihn drückst, kannst du deinen Code Zeile für Zeile ausführen, um deinen Fehler zu finden.
            Hast du den Fehler gefunden? Drück den roten Stoppknopf und der Debugger wird abschalten.
    -   title: "Vorlesen"
        text: |
            Möchtest du die Ausgabe deines Programms vorlesen lassen? Dann kannst du die Vorlesen-Funktion nutzen, die du unter dem "Ausführen"-Knopf auf dem Code-Bereich findest.
    -   title: "Programmiermodus"
        text: |
            Bist du von all den Abenteuern abgelenkt oder möchtest du ein langes Programm schreiben? Dann schau dir den "Programmiermodus"-Schalter am unteren Ende deines Programmierbereichs an.
            Der Programmiermodus erlaubt es dir und deinen Schülerinnen und Schüler einen größeren Programmierbereich zu nutzen
    -   title: "Cheat sheets"
        text: |
            In every level there is a button with this emoji 🤔. You and your students can find the "cheat sheets" there. On this cheat sheet, you can find all the commands that are usable in this level in their correct form.
            So if you've forgotten how a command works, simply take a peek at the cheat sheet!
    -   title: "Andere nützliche Features"
        text: |
            Dieses [Video](https://www.youtube.com/watch?v=c4MntPPgl1Y) zeigt dir noch mehr Features von Hedy, wie die Cheatsheets und den Schlüsselwortumschalter.
-   title: "Häufige Fehler"
    key: "häufige_fehler"
    intro: |
        Du kannst aus deinen Fehlern lernen, ganz besonders beim Programmieren!
        Fehler zu machen ist unausweichlich, und eine großartige Gelegenheit zum Lernen, jedoch kann es für Lehrpersonen eine Herausforderung sein den korrekten Fix für einen Fehler zu finden.
        Ganz besonders, wenn die Programme länger werden je weiter die Level fortschreiten. Deshalb haben wir eine Liste mit den häufigsten Fehlern und ihren Lösungen für jedes Level erstellt.
    levels:
    -   level: '1'
        sections:
        -   title: "Schülerinnen und Schüler vergessen Befehle einzutippen"
            example:
                error_text: |
                    Beispielsweise schreiben sie einen Satz ohne den drucke-Befehl zu benutzen.
                error_code: |
                    Hedy kann dies nicht ausgeben
                solution_text: |
                    Sag deinen Schülerinnen und Schüler eine Zeile immer mit einem Befehl zu starten.
                solution_code: |
                    drucke Hedy kann dies drucken!
        -   title: "Schülerinnen und Schüler schreiben Befehle in Großbuchstaben"
            example:
                error_text: |
                    Befehle funktionieren nicht mit Großbuchstaben.
                error_code: |
                    Frage warum schlägt mein Code fehl?
                    Drucke Weil Ich Großbuchstaben benutze.
                solution_text: |
                    Entferne die Großbuchstaben.
                solution_code: |
                    frage Warum funktioniert mein Code jetzt?
                    drucke Weil ich die Großbuchstaben entfernt habe!
        -   title: "Schülerinnen und Schüler benutzen echo ohne frage"
            example:
                error_text: |
                    Echo ist gemacht um Antworten wiederzugeben nachdem man sie mit dem frage-Befehl eingelesen hat. Ohne frage würde echo nichts tun.
                error_code: |
                    echo Dein Name ist
                solution_text: |
                    Füge einen frage-Befehl hinzu, um es zum Laufen zu bringen.
                solution_code: |
                    frage Was ist dein Name?
                    echo Dein Name ist
        -   title: "Schülerinnen und Schüler möchten ihr echo Wort (Variable) in der Mitte eines Satzes"
            example:
                error_text: |
                    Und sie haben Recht! Deshalb werden sie im nächsten Level lernen echte Variablen zu benutzen.
                error_code: |
                    frage Welche Programmiersprache macht am meisten Spaß?
                    echo ist die Beste!
                solution_text: |
                    In Level 1 müssen wir es wie folgt belassen:
                solution_code: |
                    frage Welche Programmiersprache macht am meisten Spaß?
                    echo Die Beste ist...
        -   title: "Schildkröte: Schülerinnen und Schüler lassen die Schildkröte vom Bildschirm runter laufen"
            example:
                error_text: |
                    Schülerinnen und Schüler probieren oft große Zahlen mit der Schildkröte aus, was dazu führt, dass der Pfeil aus der Bildfläche geht.
                error_code: |
                    vorwärts 300
                    drehe 90
                solution_text: |
                    Im Beispiel denken die Schülerinnen und Schüler, dass der drehe-Befehl nicht funktioniert. Obwohl er dennoch funktioniert, kann man es ausserhalb der Bildfläche nicht sehen. Benutze kleinere Zahlen, um zu verhindern, dass dies passiert.
                solution_code: |
                    vorwärts 100
                    drehe 90
        -   title: "Schildkröte: Schülerinnen und Schüler benutzen den Befehl rückwärts, aber der existiert nicht"
            example:
                error_text: |
                    Rückwärts ist kein Befehl.
                error_code: |
                    rückwärts 100
                solution_text: |
                    Um die Schildkröte rückwärts gehen zu lassen, benutzt man den vorwärts-Befehl und eine negative Zahl. Zum Beispiel:
                solution_code: |
                    vorwärts -100
    -   level: '2'
        sections:
        -   title: "Schülerinnen und Schüler machen Tippfehler in ihren Befehlen"
            example:
                error_text: |
                    Hedy kann keinen Befehl mit Tippfehler erkennen.
                error_code: |
                    prinnt Mach keine Tippfehler!
                solution_text: |
                    Unterrichte deine Schülerinnen und Schüler im Lesen der Fehlermeldungen. Auf diese Weise können sie selbst herausfinden, was schiefgelaufen ist.
                solution_code: |
                    print Mach keine Tippfehler!
        -   title: "Schülerinnen und Schüler vergessen, dass sich der frage-Befehl geändert hat"
            example:
                error_text: |
                    In diesem Level lernen Schülerinnen und Schüler Variablen kennen. Der frage-Befehl braucht ebenso eine Variable, aber Schülerinnen und Schüler vergessen dies.
                error_code: |
                    frage Was möchten Sie essen?
                solution_text: |
                    In diesem Level musst du Hedy sagen, wo die Antwort gespeichert werden soll, sodass sie später benutzt werden kann. Dies nennt man eine Variable.
                solution_code: |
                    bestellung ist Was möchten Sie essen?
        -   title: "Schülerinnen und Schüler versuchen den echo-Befehl zu verwenden "
            example:
                error_text: |
                    Für einige Schülerinnen und Schüler könnte es frustrierend sein zu erfahren, dass der echo-Befehl nicht mehr funktioniert. Daher ist es sehr wichtig, die Vorteile der Benutzung von Variablen zu erklären. Zum Beispiel kannst du mehrere Variablen in einem Programm verwenden und du kannst sie beliebig in Sätze einbauen!
                error_code: |
                    antwort ist frage Warum funktioniert echo nicht mehr?!
                    echo
                solution_text: |
                    Benutze stattdessen eine Variable.
                solution_code: |
                    antwort ist frage Warum funktioniert echo nicht mehr?!
                    drucke antwort
        -   title: "Schülerinnen und Schüler benutzen einen Variablennamen als normales Wort"
            example:
                error_text: |
                    Im Beispiel unten wird 'Name' als Variable benutzt, aber auch als normaler Text. Die Ausgabe wird 'Hi mein Hedy ist Hedy' sein.
                error_code: |
                    Name ist Hedy
                    drucke Hi mein Name ist Name
                solution_text: |
                    Benutze also keine Wörter aus dem Text als Variablennamen. In Level 4 wird dies durch Anführungszeichen gelöst.
                solution_code: |
                    name ist Hedy
                    drucke Hi ich bin name
        -   title: "Schülerinnen und Schüler benutzen lange Variablennamen, die zwei Wörter enthalten."
            example:
                error_text: |
                    Eine Variable sollte mit einem Wort benannt werden. Du kannst einen Unterstrich verwenden, um zwei Wörter zu verbinden. Dies zählt als eins.
                error_code: |
                    gewählte Tür ist frage Welche Tür wählst du?
                solution_text: |
                    Füge einen Unterstrich hinzu.
                solution_code: |
                    gewählte_tür ist frage Welche Tür wählst du?
        -   title: "Schülerinnen und Schüler könnten zwei verschiedene Namen für die gleiche Variable verwenden"
            example:
                error_text: |
                    In diesem Beispiel hat der Schüler "Pferd" und "Name" für die gleiche Variable verwendet.
                error_code: |
                    Pferd ist frage Wie heißt dein Pferd?
                    drucke Dein Pferd heißt Name
                solution_text: |
                    Prüfe immer, ob die Variable durchgehend den gleichen Namen im Code hat. Kleine Unterschiede können schwer zu erkennen sein (z.B. Plural), sie werden jedoch den Code stören.
                solution_code: |
                    Name ist frage Wie heißt dein Pferd?
                    drucke Dein Pferd heißt Name
    -   level: '3'
        sections:
        -   title: "Schülerinnen und Schüler versuchen ganze Listen zu drucken"
            example:
                error_text: |
                    Eine Liste kann nicht gedruckt werden. Du kannst nur ein Element der Liste ausgeben mit at random.
                error_code: |
                    einkäufe ist Äpfel, Milch, Schokolade
                    drucke einkäufe
                solution_text: |
                    Um eine Liste aller Einkäufe auszugeben, musst du sie nur nach einem drucke-Befehl platzieren. Sonst kannst du die Liste ausgeben, indem du at random nutzt.
                solution_code: |
                    drucke Äpfel, Milch, Schokolade

                    oder

                    einkäufe ist Äpfel, Milch, Schokolade
                    drucke einkäufe at random
        -   title: "Schülerinnen und Schüler nutzen den Namen einer Variablen oder Liste als ganz normalen Text"
            example:
                error_text: |
                    Dieses Problem ist wahrscheinlich auch in Level 2 aufgetreten. Nun kann es auch mit Listen passieren.
                error_code: |
                    Name ist Hedy
                    drucke Hi mein Name ist Name

                    oder

                    Tier ist Nashorn, Biene, Schwan
                    drucke Das beste Tier ist... Tier at random
                solution_text: |
                    Verwende die Namen von Variablen oder Listen nicht in regulärem Text zur Ausgabe. In Level 4 wird dieses Problem mit Anführungszeichen gelöst.
                solution_code: |
                    Name ist Hedy
                    drucke Hi ich bin Name

                    oder

                    tiere ist Nashorn, Biene, Schwan
                    drucke Das beste Tier ist... tiere at random
        -   title: "Schülerinnen und Schüler vergessen at random"
            example:
                error_text: |
                    Wie im Beispiel
                error_code: |
                    vögel ist Spatz, Möwe, Rotkehlchen
                    drucke vögel random
                solution_text: |
                    Dieses Problem wird durch das Hinzufügen des Wortes at gelöst.
                solution_code: |
                    vögel ist Spatz, Möwe, Rotkehlchen
                    drucke vögel at random
        -   title: "Schülerinnen und Schüler vergessen den Ausgabebefehl zu nutzen während sie auch den zufällig-Befehl benutzen"
            example:
                error_text: |
                    Oder manchmal schreiben sie at random an den Beginn der Zeile.
                error_code: |
                    obst ist Apfel, Kirsche, Banane
                    obst at random
                solution_text: |
                    Betone ggü. deinen Schülerinnen und Schülern, dass man immer drucke braucht um Text auszugeben.
                solution_code: |
                    obst ist Apfel, Kirsche, Banane
                    drucke obst at random
        -   title: "Schülerinnen und Schüler vergessen Kommas in ihren Listen zu benutzen"
            example:
                error_text: |
                    In einer Liste werden Elemente mit einem Komma getrennt.
                error_code: |
                    pizzas ist funghi tonno quattro stagioni
                    drucke pizzas at random
                solution_text: |
                    Nach jedem Element in deiner Liste sollte ein Komma sein
                solution_code: |
                    pizzas ist funghi, tonno, quattro stagioni
                    drucke pizzas at random
        -   title: "Schülerinnen und Schüler versuchen den zufällig-Befehl ohne eine Liste zu verwenden"
            example:
                error_text: |
                    Zum Beispiel
                error_code: |
                    clubs ist Manchester United
                    drucke clubs at random
                solution_text: |
                    Hedy kann nichts at random drucken, weil keine Liste existiert von der gewählt werden kann.
                solution_code: |
                    clubs ist Manchester United, Bayrn Munchen, FC Barcelona
                    drucke clubs at random
        -   title: "Schülerinnen und Schüler versuchen add/remove ohne eine Liste zu verwenden "
            example:
                error_text: |
                    Im unteren Beispiel ist "Namen" keine Liste, aber eine Variable. Du kannst nichts hinzufügen.
                error_code: |
                    Namen ist Jake
                    dein_name ist frage Wer bist du?
                    add dein_name to Namen
                    drucke Namen at random
                solution_text: |
                    Es muss zuerst eine Liste geben, daher musst du einen zweiten Namen hinzufügen, um aus Namen eine Liste zu machen, z.B. Amy. Wenn du Amy nicht in deiner Liste möchtest, kannst du sie sofort danach entfernen.
                solution_code: |
                    Namen ist Jake, Amy
                    dein_name ist frage Wer bist du?
                    füge dein_name zu Namen
                    drucke Namen at random
        -   title: "Schülerinnen und Schüler vergessen zu/aus beim addiere/entferne zu verwenden"
            example:
                error_text: |
                    Ohne zu/von funktionieren füge/entferne-Befehle nicht.
                error_code: |
                    Abenteuer ist Geschichte, Papagei, Würfel
                    wahl ist Welches Abenteuer gefällt dir am Besten?
                    füge wahl
                    entferne Würfel
                    drucke Ich mag Abenteuer at random
                solution_text: |
                    Hedy muss wissen zu welcher Liste ein Element hinzugefügt oder entfernt werden soll.
                solution_code: |
                    Abenteuer ist Geschichte, Papagei, Würfel
                    wahl ist Welches Abenteuer gefällt dir am Besten?
                    füge wahl zu Abenteuer
                    entferne Würfel von Abenteuer
                    drucke Ich mag Abenteuer at random
    -   level: '4'
        sections:
        -   title: "Schülerinnen und Schüler vergessen Anführungszeichen auf beiden Seiten des Textes"
            example:
                error_text: |
                    In diesem Level benötigen drucke und frage Anführungszeichen. Eines vor dem Text und eines dahinter.
                error_code: |
                    drucke Hallo
                    stimmung ist frage 'Wie geht es dir?'
                solution_text: |
                    Füge die richtigen Anführungszeichen hinzu.
                solution_code: |
                    drucke 'Hallo'
                    stimmung ist frage 'Wie geht es dir?'
        -   title: "Schülerinnen und Schüler verwenden die falschen Anführungszeichen"
            example:
                error_text: |
                    Es ist wichtig die Lektion mit einer Überprüfung zu beginnen, ob die Schülerinnen und Schüler wissen wie man einfache Anführungszeichen eintippt. Sonst könnten sie die "doppelten" oder die `schrägen` verwenden.
                error_code: |
                    drucke `Willkommen im Restaurant`
                    essen ist frage "Was möchten Sie bestellen?"
                solution_text: |
                    Dies sind die richtigen Anführungszeichen:
                solution_code: |
                    drucke 'Willkommen im Restaurant'
                    essen ist frage 'Was möchten Sie bestellen?'
        -   title: "Schülerinnen und Schüler verwenden ein Apostroph in ihrem Text"
            example:
                error_text: |
                    Ab diesem Level sind Apostrophe nicht erlaubt. Im Englischen werden sie oft benutzt, um Zusammenziehungen zu schreiben, wie z.B. you're, don't oder what's.
                error_code: |
                    drucke 'Hedy's Restaurant darfst du nicht tippen'
                solution_text: |
                    Du kannst die falsche Grammatik verwenden und das Apostroph einfach weglassen. Oder du kannst ` als Ersatz für das Apostroph verwenden.
                solution_code: |
                    drucke 'Hedys ist erlaubt zu tippen'
                    drucke 'Und Hedy`s ist erlaubt'
    -   level: '5'
        sections:
        -   title: "Schülerinnen und Schüler vergessen drucke innerhalb eines falls-Befehls zu verwenden"
            example:
                error_text: |
                    Schülerinnen und Schüler vergessen nach einem falls oder sonst einen zweiten Befehl wie drucke oder frage zu verwenden.
                error_code: |
                    falls name ist Hedy 'Großartig!'
                    sonst 'Hedy ist besser!'
                solution_text: |
                    Füge den drucke-Befehl hinzu, um es zu reparieren.
                solution_code: |
                    falls name ist Hedy drucke 'Großartig!'
                    sonst drucke 'Hedy ist besser!'
        -   title: "Schülerinnen und Schüler könnten zwei verschiedene Namen für die gleiche Variable verwenden"
            example:
                error_text: |
                    In diesem Beispiel hat der Schüler oder die Schülerin 'Pferd' und 'Name' für die gleiche Variables benutzt.
                error_code: |
                    Pferd ist frage 'Wie heißt dein Pferd?'
                    falls Name ist Bonfire drucke 'cool'
                    sonst drucke 'weniger cool!'
                solution_text: |
                    Prüfe immer, ob die Variable durchgehend den gleichen Namen im Code hat. Kleine Unterschiede können schwer zu erkennen sein (z.B. Plural), sie werden jedoch den Code stören.
                solution_code: |
                    Pferd ist frage 'Wie heißt dein Pferd?'
                    falls Pferd ist Bonfire drucke 'cool'
                    sonst drucke 'weniger cool!'
        -   title: "Schülerinnen und Schüler vergessen immer noch die Anführungszeichen auf beiden Seiten"
            example:
                error_text: |
                    Programme mit falls-Befehl können sehr lang werden und Schülerinnen und Schüler tendieren dazu, die Anführungszeichen zu vergessen.
                error_code: |
                    falls name ist Hedy drucke Spaß
                    sonst drucke 'bäh!
                solution_text: |
                    Benutze immer 2 Anführungszeichen in einem drucke-Befehl.
                solution_code: |
                    falls name ist Hedy drucke 'Spaß'
                    sonst drucke 'bäh!'
        -   title: "Schülerinnen und Schüler nutzen Anführungszeichen um Variablennamen herum"
            example:
                error_text: |
                    In diesem Level sind keine Anführungszeichen um Variablennamen herum.
                error_code: |
                    falls 'name' ist 'Hedy' drucke 'Spaß'
                    sonst drucke 'meh!'
                solution_text: |
                    Entferne die Anführungszeichen, um den Code zum Laufen zu kriegen.
                solution_code: |
                    falls name ist Hedy drucke 'Spaß'
                    sonst drucke 'bäh!
        -   title: "Schülerinnen und Schüler verwenden lange Variablennamen bestehend aus zwei Worten"
            example:
                error_text: |
                    Eine Variable sollte mit einem Wort benannt werden. Du kannst ein Apostroph verwenden, um zwei Wörter zu verbinden. Dies zählt als eins.
                error_code: |
                    gewählte Tür ist frage 'Welche Tür wählst du?'
                solution_text: |
                    Füge einen Unterstrich hinzu.
                solution_code: |
                    gewählte_tür ist frage 'Welche Tür wählst du?'
        -   title: "Schülerinnen und Schüler möchten, dass mehrere Antworten richtig sind"
            example:
                error_text: |
                    Zum Beispiel lässt die Schülerin oder der Schüler Hedy all seinen Freunden sagen, dass sie lustig sind, aber anderen Klassenkameraden, dass sie es nicht sind.
                error_code: |
                    falls name ist Jesse, David, Souf drucke 'Du bist lustig' sonst drucke 'Du bist nicht lustig'
                solution_text: |
                    Du kannst den `in` Befehl dafür verwenden. Er wird in einem höheren Level erklärt, aber er funktioniert bereits in Level 5.
                    Eine andere Lösung ist es, mehrere falls-Befehle und keinen sonst-Befehl zu verwenden. Der Nachteil ist, dass dies den anderen Mitschülern nicht sagen wird, dass sie nicht lustig sind.
                solution_code: |
                    freunde ist Jesse, David, Souf
                    name ist frage 'Wer bist du?'
                    falls name in freunde drucke 'Du bist lustig'
                    sonst drucke 'Du bist nicht lustig'

                    oder

                    name ist frage 'Wer bist du?'
                    falls name ist Jesse drucke 'Du bist lustig'
                    falls name ist David drucke 'Du bist lustig'
                    falls name ist Souf drucke 'Du bist lustig'
        -   title: "Die Schülerinnen und Schüler machen den Variablennamen zum Gleichen wie den Wert im falls-Befehl"
            example:
                error_text: |
                    Im Beispiel ist das Passwort 'Passwort'. Dies führt dazu, dass es immer richtig ist.
                error_code: |
                    passwort ist frage 'Was ist das Passwort?'
                    falls passwort ist passwort drucke 'Zugang gewährt'
                    sonst drucke 'Zugang verwehrt!'
                solution_text: |
                    Wähle einen anderen Namen für deine Variable.
                solution_code: |
                    geheimes_passwort ist frage 'Was ist das Passwort?'
                    falls geheimes_passwort ist passwort drucke 'Zugang gewährt'
                    sonst drucke 'Zugang verwehrt!'
    -   level: '6'
        sections:
        -   title: Schülerinnen und Schüler kämpfen mit Anführungszeichen
            example:
                error_text: "Einige Schüler haben Probleme damit, Anführungszeichen hinzuzufügen oder nicht. Wenn du Anführungszeichen hinzufügst, wird auf dem Ausgabebildschirm buchstäblich \"5+5\" angezeigt.\n"
                error_code: "drucke '5 + 5'\n"
                solution_text: "In diesem Code wird auf dem Ausgabebildschirm '10' ausgegeben.\n"
                solution_code: "drucke 5 + 5\n"
        -   title: Schülerinnen und Schüler haben Schwierigkeiten mit dem Konzept Berechnungen mit einer Variablen durchzuführen
            example:
                error_text: "Einigen Schülerinnen und Schülern fällt es schwer, mit Variablen zu rechnen. Zeige ihnen sehr einfache Beispiele, wie z.B.:\n"
                error_code: "alter = frage 'Wie alt bist du?'\ndrucke 'Nächstes Jahr bist du ' alter + 1\n"
                solution_text: "Oder gehe noch einen Schritt weiter wie hier.\n"
                solution_code: "preis = 0\ndrucke 'Willkommen in unserem Burger-Restaurant'\nburger = frage 'Möchten Sie einen Burger?\nfalls burger = ja preis = preis + 10\ngetränk = frage 'Möchten Sie ein Getränk?\nfalls getränk = ja preis = preis + 4\ndrucke 'Das macht dann ' preis ' Euro bitte'\n"
    -   level: '7'
        sections:
        -   title: Schülerinnen und Schüler vergessen ein Wort des Wiederholungsbefehls oder sie vergessen den Ausgabebefehl
            example:
                error_text: "Stelle sicher, dass die Schülerinnen und Schüler wissen wie man sowohl den vollständigen Wiederholungsbefehl als auch den Ausgabebefehl verwendet.\n"
                error_code: "wiederhole 3 mal 'Denn er ist ein toller Kerl'\nwiederhole 3 mal 'Das kann niemand leugnen!'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "wiederhole 3 mal drucke 'For he`s a jolly good fellow'\nwiederhole 3 mal drucke 'Which nobody can deny!'\n"
        -   title: Schülerinnen und Schüler versuchen mehrere Zeilen zu wiederholen
            example:
                error_text: "In diesem Level kannst du nur eine Zeile mehrfach wiederholen. In diesem Code wollte die Schülerin oder der Schüler 3 verschiedene Getränke ausgeben, aber es wird nicht funktionieren. Es wird die Frage 3 mal stellen und nur die letzte Antwort ausgeben.\n"
                error_code: "wiederhole 3 mal getränk = frage 'Was möchten Sie trinken?'\ndrucke getränk\n"
                solution_text: "Du solltest ins nächste Level gehen, um mehrere Zeilen wiederholen zu können. In diesem Level wirst du alles separat drucken müssen.\n"
                solution_code: "getränk = frage 'Was möchten Sie trinken?'\ndrucke getränk\ngetränk = frage 'Was möchten Sie trinken?'\ndrucke getränk\ngetränk = frage 'Was möchten Sie trinken?'\ndrucke getränk\n"
        -   title: Schülerinnen und Schüler erstellen Programme, die zu lang zum Ausführen brauchen
            example:
                error_text: "In diesem Level ist es sehr leicht langen Code zu erstellen. Die Schülerinnen und Schüler dürfen keine Programme erstellen, die zu lange zum Ausführen brauchen (um unsere Server zu retten).\n"
                error_code: "wiederhole 100 mal drucke 'Wie oft kann ich dies wiederholen?'\n"
                solution_text: "Stelle sicher, dass der Code nicht zu lang ist\n"
                solution_code: "wiederhole 20 mal drucke 'Dies ist genug'\n"
    -   level: '8'
        sections:
        -   title: Schülerinnen und Schüler benutzen die falsche Einrückung
            example:
                error_text: "Einrückung ist ein neues Konzept in diesem Level, welches einigen Schülerinnen und Schülern schwerfällt. Stelle sicher, dass sie einige einfache Beispiele üben, bevor sie ein ganzes Programm damit erstellen.\n"
                error_code: "wiederhole 3 mal\ndrucke 'hallo'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "wiederhole 3 mal\n    drucke 'hallo'\n"
        -   title: Schülerinnen und Schüler wiederholen nur 1 Zeile, obwohl sie mehrere Zeilen wiederholen wollten
            example:
                error_text: "Zum Beispiel wollte die Schülerin oder der Schüler im Code unten die Getränkebestellung von 3 Leuten aufnehmen. Aber anstatt dessen hat das Programm 3 mal gefragt, aber nur eine Bestellung aufgeschrieben.\n"
                error_code: "wiederhole 3 mal\n    getränk = frage 'Was möchten Sie trinken?'\ndrucke getränk\n"
                solution_text: "Im korrekten Code beginnt die dritte Zeile auch mit Einrückung. Auf diese Weise gehört sie zum wiederhole-Block und wird daher 3 mal wiederholt.\nZeige deinen Schülerinnen und Schülern diese Unterschiede, um ihnen dabei zu helfen zu verstehen, warum wir Einrückung brauchen, um unsere Programme zum Laufen zu bringen.\n"
                solution_code: "wiederhole 3 mal\n    getränk = frage 'Was möchten Sie trinken?'\n    drucke getränk\n"
        -   title: Schülerinnen und Schüler möchten falls-Befehle verschachteln oder falls in eine Schleife packen
            example:
                error_text: "In diesem Level dürfen die Schülerinnen und Schüler noch keine falls-Befehle in andere falls-Befehle oder Wiederholungsschleifen stecken.\nIm nächsten Level ist dies erlaubt.\n"
                error_code: "geburtstag = frage 'Hast du Geburtstag?'\nfalls geburtstag = ja\n    wiederhole 3 mal\n        drucke 'Hip Hip Hooray!'\n"
                solution_text: "Dies ist der korrekte Code für dieses Level:\n"
                solution_code: "geburtstag = frage 'Hast du Geburtstag?'\nfalls geburtstag = ja\n    drucke 'Hip Hip Hooray!'\n    drucke 'Hip Hip Hooray!'\n    drucke 'Hip Hip Hooray!'\n"
        -   title: Schülerinnen und Schüler erstellen Programme, die zu lang zum Ausführen brauchen
            example:
                error_text: "In diesem Level ist es sehr leicht lang laufende Programme zu erstellen. Den Schülerinnen und Schülern ist es nicht erlaubt lang laufende Programme zu erstellen (um unsere Server zu retten).\n"
                error_code: "wiederhole 100 mal\n    drucke 'Wie oft kann ich dies wiederholen?'\n"
                solution_text: "Stelle sicher, dass die Programme nicht zu lange laufen\n"
                solution_code: "wiederhole 20 mal\n    drucke 'Dies ist genug'\n"
        -   title: Die Schülerinnen und Schüler nutzen den falls-Befehl, um zu prüfen, ob der Variablenwert das Gleiche ist wie der Variablenname
            example:
                error_text: "Wir haben diesen Fehler bei einigen unserer Schülerinnen und Schüler gesehen. Sie erstellen ein Passwort für ihren Computer, verwenden als Passwort jedoch 'Passwort'.\nIn Zeile 2 wird der Computer beauftragt zu prüfen, ob die Variable passwort das Gleiche ist wie die Variable passwort, also sich selbst. Was bedeutet, dass die Antwort immer ja ist.\nAlso wird mit diesem Code die Antwort immer 'Du kannst reinkommen' sein, was auch immer der Spieler einträgt.\n"
                error_code: "passwort ist frage 'Was ist das Passwort?'\nfalls passwort ist passwort\n    drucke 'Du kannst reinkommen'\nsonst\n    drucke 'Du hast keine Erlaubnis'\n"
                solution_text: "Du kannst diesen Fehler beheben, indem du Anführungszeichen hinzufügst. Auf diese Weise weiß der Computer, dass das zweite Passwort ein Zeichenkettenwert (also normaler Text) ist und kein Variablenname.\n"
                solution_code: "passwort ist frage 'Was ist das Passwort?'\nfalls passwort ist 'passwort'\n    drucke 'Du kannst reinkommen'\nsonst\n    drucke 'Du hast keine Erlaubnis'\n"
    -   level: '9'
        sections:
        -   title: Schülerinnen und Schüler machen Fehler bei der Einrückung
            example:
                error_text: "Der schwerste Teil an diesem Level ist, die Einrückung hinzubekommen. Schülerinnen und Schüler lieben es, falls-Befehle zu verschachteln, manchmal sogar innerhalb anderer verschachtelter falls-Befehle. Mit der Einrückung Schritt zu halten kann ziemlich schwer sein.\n"
                error_code: "drucke 'Robin geht in die Stadt'\nort = frage 'Geht Robin in den Laden, oder geht sie nach Hause?'\nfalls ort ist Laden\n    drucke 'Sie betritt den Laden.'\n    drucke 'Robin sieht ein interessant aussehendes Buch'\n    buch = frage 'Kauft Robin das Buch?'\n        falls buch ist ja\ndrucke 'Robin kauft das Buch und geht nach Hause'\nsonst\n    drucke 'Robin verlässt den Laden und geht nach Hause'\nsonst\n    drucke 'Robin geht nach Hause'\n"
                solution_text: "Dies ist der korrekte Code. Versuche all die verschiedenen Konstruktionen im Blick zu behalten, wenn du falls-Befehle in andere falls-Befehle steckst.\n"
                solution_code: "drucke 'Robin geht in die Stadt'\nort = frage 'Geht Robin in den Laden, oder geht sie nach Hause?'\nfalls ort ist Laden\n    drucke 'Sie betritt den Laden.'\n    drucke 'Robin sieht ein interessant aussehendes Buch'\n    buch = frage 'Kauft Robin das Buch?'\n    falls buch ist ja\n        drucke 'Robin kauft das Buch und geht nach Hause'\n    sonst\n        drucke 'Robin verlässt den Laden und geht nach Hause'\nsonst\n    drucke 'Robin geht nach Hause'\n"
    -   level: '10'
        sections:
        -   title: Schülerinnen und Schüler benutzen den für-Befehl nicht richtig
            example:
                error_text: "Wir sehen oft, dass die Schülerinnen und Schüler versuchen die Liste (in diesem Beispiel tiere) auszugeben, anstatt die Elemente in der Liste auszugeben.\n"
                error_code: "tiere ist Hund, Katze, Blobfisch\nfür tier in tiere\n  drucke 'Ich liebe ' tiere\n"
                solution_text: "Das Wort tiere in der letzten Zeile sollte zu tier geändert werden.\n"
                solution_code: "tiere ist Hund, Katze, Blobfisch\nfür tier in tiere\n  drucke 'Ich liebe ' tier\n"
        -   title: Schülerinnen und Schüler vergessen die Einrückung
            example:
                error_text: "Schülerinnen und Schüler tendieren dazu nach einem für-Befehl die Einrückung zu vergessen.\n"
                error_code: "tiere ist Hund, Katze, Blobfisch\nfür tier in tiere\ndrucke 'Ich liebe ' tiere\n"
                solution_text: "Du solltest nach einem für-Befehl Einrückung benutzen.\n"
                solution_code: "tiere ist Hund, Katze, Blobfisch\nfür tier in tiere\n  drucke 'Ich liebe ' tier\n"
    -   sections:
        -   title: Schülerinnen und Schüler vergessen Einrückung zu benutzen
            example:
                error_text: "Stelle sicher, dass die Schülerinnen und Schüler Einrückung verwenden.\n"
                error_code: "für i in bereich 1 bis 5\ndrucke i\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "für i in bereich 1 bis 5\n    drucke i\n"
        -   example:
                error_code: "für i in bereich 1 bis 5\ndrucke i\n"
                error_text: "Manche Schülerinnen und Schüler verstehen nicht, dass i eine Variable ist. i wurde gewählt, weil es in Python-Programmen verwendet wird, aber du könntest genauso gut auch einen anderen Variablennamen verwenden.\nZum Beispiel, dieser Code:\n"
                solution_text: "Könnte genauso gut mit diesem Code ersetzt werden. Es funktioniert genauso.\n"
                solution_code: "für banane in bereich 1 bis 5\n    drucke banane\n"
            title: Schülerinnen und Schüler verstehen das i nicht
        level: '11'
    -   level: '12'
        sections:
        -   title: Schülerinnen und Schüler vergessen Anführungszeichen
            example:
                error_code: "superhelden = Spiderman, Batman, Iron Man\nsuperheld = superhelden at random\nfalls superheld = Batman\n    drucke 'IM BATMAN!'\n"
                error_text: "Schülerinnen und Schüler brauchen nun mehr Anführungszeichen als in vorigen Leveln. In diesem Beispiel wurden Anführungszeichen in der Liste und im falls-Befehl vergessen.\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "superhelden = 'Spiderman', 'Batman', 'Iron Man'\nsuperheld = superhelden at random\nfalls superheld ist 'Batman'\n    drucke 'IM BATMAN!'\n"
        -   title: Schülerinnen und Schüler nutzen Anführungszeichen bei Zahlen, die sie für Berechnungen verwenden wollen
            example:
                error_text: "Du kannst Anführungszeichen um Zahlen verwenden, aber nur falls du möchtest, dass der Computer denkt, dass es Text ist. Dies bedeutet, dass du keine Berechnungen mit den Zahlen machen kannst.\nIm Beispiel unten kannst du keine Berechnungen mit der Zahl 25 machen, weil sie in Anführungszeichen steht.\n"
                error_code: "punkte = '25'\nantwort ist frage 'Möchtest du einen Punkt?'\nfalls antwort ist 'ja'\n    punkte = punkte + 1\n    drucke punkte\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "punkte = 25\nantwort ist frage 'Möchtest du einen Punkt?'\nfalls antwort ist 'ja'\n    punkte = punkte + 1\n    drucke punkte\n"
        -   title: Schülerinnen und Schüler verwenden Kommas anstatt Punkte in Dezimalzahlen
            example:
                error_text: "Ab diesem Level können Dezimalzahlen benutzt werden, jedoch kannst du keine Kommas verwenden.\n"
                error_code: "drucke 2,5 + 2,5\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "drucke 2.5 + 2.5\n"
    -   level: '13'
        sections:
        -   title: Schülerinnen und Schüler verwechseln `und` mit `oder`
            example:
                error_text: "Beide Befehle können ähnlich erscheinen, aber ihre Funktion ist sehr verschieden.\n"
                error_code: "spiel ist frage 'Möchtest du ein Spiel spielen?'\nzeit ist frage 'Hast du Zeit zum Spielen?'\nfalls spiel ist 'ja' oder zeit ist 'ja'\n    drucke 'Lass uns spielen!'\n"
                solution_text: "In diesem Fall soll die Person auf beide Fragen mit ja antworten, also solltest du `und` benutzen.\n"
                solution_code: "spiel ist frage 'Möchtest du ein Spiel spielen?'\nzeit ist frage 'Hast du Zeit zum Spielen?'\nfalls spiel ist 'ja' und zeit ist 'ja'\n    drucke 'Lass uns spielen!'\n"
    -   sections:
        -   example:
                error_text: "Oft kennen die Schülerinnen und Schüler diese Zeichen bereits aus dem Mathematikunterricht. Aber, falls deine Schülerinnen und Schüler diese Zeichen noch nicht kennen, könnte es eine Hürde darstellen.\n"
                error_code: "alter = frage 'Wie alt bist du?'\nfalls alter < 12\n    drucke 'Du bist älter als ich!'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "alter = frage 'Wie alt bist du?'\nfalls alter > 12\n    drucke 'Du bist älter als ich!'\n"
            title: Schülerinnen und Schüler verwechseln die < und > Zeichen
        -   title: Schülerinnen und Schüler verwenden oft die falschen Zeichen für `!=` `<=` und `>=`
            example:
                error_text: "Diese Zeichen sind möglicherweise für die meisten Schülerinnen und Schüler neu. Stelle sicher, dass du diese Zeichen deinen Schülerinnen und Schülern erklärst.\n"
                error_code: "name = frage 'Wie heißt du?'\nfalls name =< 'Hedy'\n    drucke 'Du bist nicht Hedy'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "name = frage 'Wie heißt du?'\nfalls name != 'Hedy'\n    drucke 'Du bist nicht Hedy'\n"
        -   title: Schülerinnen und Schüler vergessen das == Zeichen zu benutzen
            example:
                error_text: "In diesem Level dürfen Schülerinnen und Schüler weiterhin = oder ist benutzen. Aber in anderen Leveln oder in Python werden sie damit in Schwierigkeiten geraten. Also ist es besser, sie zu trainieren es zu benutzen.\n"
                error_code: "name = frage 'Wie heißt du?'\nfalls name = 'Hedy'\n    drucke 'Du bist cool!'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "name = frage 'Wie heißt du?'\nfalls name == 'Hedy'\n    drucke 'Du bist cool!'\n"
        level: '14'
    -   level: '15'
        sections:
        -   title: Schülerinnen und Schüler vergessen die Einrückung in der Wiederholungsschleife
            example:
                error_text: "Einrückung ist oft schwer für Schülerinnen und Schüler.\n"
                error_code: "antwort = 0\nsolange antwort != 25\nantwort = frage 'Was ist 5 mal 5?'\ndrucke 'Eine richtige Antwort wurde gegeben'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "antwort = 0\nsolange antwort != 25\n    antwort = frage 'Was ist 5 mal 5?'\ndrucke 'Eine richtige Antwort wurde gegeben'\n"
    -   level: '16'
        sections:
        -   title: Schülerinnen und Schüler vergessen die Klammern
            example:
                error_text: "Ab diesem Level sollten Listen in Klammern stehen.\n"
                error_code: "eis = 'Erdbeer', 'Schokoladen'\ndrucke 'Ich liebe ' eis[zufällig] 'eis'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "eis = ['Erdbeer', 'Schokoladen']\ndrucke 'Ich liebe ' eis[zufällig] 'eis'\n"
        -   title: Schülerinnen und Schüler benutzen die falschen Klammern
            example:
                error_text: "Ab diesem Level sollten Listen in Klammern stehen.\n"
                error_code: "eis = ('Erdbeer', 'Schokoladen'}\ndrucke 'Ich liebe ' eis[zufällig] 'eis'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "eis = ['Erdbeer', 'Schokoladen']\ndrucke 'Ich liebe ' eis[zufällig] 'eis'\n"
        -   title: Schülerinnen und Schüler vergessen die Anführungszeichen während sie sich auf die Klammern konzentrieren
            example:
                error_text: "Schülerinnen und Schüler konzentrieren sich manchmal sehr auf den neuen Aspekt der Syntax, sodass sie die Anführungszeichen vergessen.\n"
                error_code: "eis = [Erdbeer, Schokoladen]\ndrucke 'Ich liebe ' icecream[zufällig] 'eis'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "eis = ['Erdbeer', 'Schokoladen']\ndrucke 'Ich liebe ' icecream[zufällig] 'eis'\n"
        -   title: Schülerinnen und Schüler verwenden immer noch den alten at random Befehl
            example:
                error_text: "Schülerinnen und Schüler konzentrieren sich manchmal sehr auf den neuen Aspekt der Syntax, sodass sie die Anführungszeichen vergessen.\n"
                error_code: "eis = [Erdbeer, Schokoladen]\ndrucke 'Ich liebe ' eis at random 'eis'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "eis = ['Erdbeer', 'Schokoladen']\ndrucke 'Ich liebe ' eis[zufällig] 'eis'\n"
        -   title: Schülerinnen und Schüler vergessen die Anführungszeichen während sie sich auf die Klammern konzentrieren
            example:
                error_text: "Schülerinnen und Schüler sind manchmal sehr auf die neuen Aspekte der Syntax konzentriert, sodass sie die Anführungszeichen vergessen.\n"
                error_code: "eis = [Erdbeer, Schokoladen]\ndrucke 'Ich liebe ' eis[zufällig] 'eis'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "eis = ['Erdbeer', 'Schokoladen']\ndrucke 'Ich liebe ' eis[zufällig] 'eis'\n"
    -   sections:
        -   title: Schülerinnen und Schüler benutzen sofalls wie sonst, also ohne Bedingung
            example:
                error_text: "Der sofalls Befehl benötigt eine Bedingung dahinter. Er kann nicht wie sonst benutzt werden, ohne Bedingung.\n"
                error_code: "farbe = frage 'Was ist deine Lieblingsfarbe?'\nfalls farbe == 'grün':\n    drucke 'Grün ist nett'\nsofalls:\n    drucke 'Ich mag grün'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "farbe = frage 'Was ist deine Lieblingsfarbe?'\nfalls farbe == 'grün':\n    drucke 'grün ist nett'\nsofalls farbe == gelb:\n    drucke 'gelb ist OK'\nsonst:\n    drucke 'Ich mag grün'\n"
        -   example:
                error_code: "antwort = frage 'Wie geht es dir?'\nfalls antwort ist 'großartig'\n    drucke 'Ich auch!'\nsofalls antwort ist 'schlecht'\n    drucke 'Lass mich dich aufheitern!'\nsonst\n    drucke 'Großartig!'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                error_text: "Nach jedem Befehl der Einrückung verlangt, sollte ein Doppelpunkt verwendet werden.\n"
                solution_code: "antwort = frage 'Wie geht es dir?'\nfalls antwort ist 'großartig':\n    drucke 'Ich auch!'\nsofalls antwort ist 'schlecht':\n    drucke 'Lass mich dich aufheitern!'\nsonst:\n    drucke 'Großartig!'\n"
            title: Schülerinnen und Schüler vergessen den Doppelpunkt
        level: '17'
    -   level: '18'
        sections:
        -   title: Schülerinnen und Schüler vergessen die Klammern
            example:
                error_text: "Schülerinnen und Schüler vergessen Klammern um ihren Text zu setzen\n"
                error_code: "drucke 'mein Name ist Hedy!'\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "drucke('mein Name ist Hedy!')\n"
        -   title: Schülerinnen und Schüler verwenden weiterhin den frage-Befehl
            example:
                error_text: "Der frage-Befehl wurde seit Level 1 benutzt. Also könnte es schwierig für die Schülerinnen und Schüler sein zu input anstelle von frage zu wechseln.\n"
                error_code: "drucke('Mein Name ist Hedy!')\nname = frage('Was ist dein Name?')\ndrucke('Also ist dein Name ', name)\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "drucke('Mein Name ist Hedy!')\nname = input('Was ist dein Name?')\ndrucke('Also ist dein Name ', name)\n"
        -   title: Schülerinnen und Schüler könnten die Klammern als Anführungszeichen verwenden
            example:
                error_text: "Sie haben gelernt die Variablen außerhalb der Anführungszeichen zu halten, also könnten sie das Gleiche mit den Klammern tun. Was nicht der richtige Weg ist sie zu benutzen.\n"
                error_code: "temperatur = 25\ndrucke('Es ist ') temperatur ('Grad draußen')\n"
                solution_text: "Dies ist der korrekte Code:\n"
                solution_code: "temperatur = 25\ndrucke('Es ist ', temperatur, 'Grad draußen')\n"
learn-more-sections:
-   title: "Komm in die Hedy-Gemeinschaft"
    text: |
        Wir hören gern von dir! Die beste Kontaktmöglichkeit ist unser [Discord-Server](https://discord.gg/8yY7dEme9r).

        Du kannst uns auch eine [E-Mail schicken](mailto:hello@hedy.org "Über Hedy").
-   title: "Ein tiefes Eintauchen!"
    text: |
        Möchtest du mehr über Hedys Philosophie und Design erfahren? Schau dir den Vortrag von Felienne bei der StrangeLoop Conference 2022 an:

        <iframe width="560" height="315" class="mx-auto mt-4" src="https://www.youtube.com/embed/fmF7HpU_-9k?wmode=opaque" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
-   title: "Hedy in den Nachrichten"
    text: |
        Manche Websites und Zeitungen haben seit unserem Release im Frühjahr 2020 über Hedy geschrieben. Hier pflegen wir eine Liste:
        * [Tech Optimism - A Solution to the IT Shortage (Dutch), August 2022](https://pom.show/2022/08/12/een-oplossing-voor-het-it-tekort/)
        * [Codeweek Podcast, July 2022](https://codeweek.eu/podcast/26)
        * [Heise.de (Deutsch), Januari 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)
        * [Strumenta, November 2021](https://tomassetti.me/teaching-programming-with-hedy/)
        * [Vives (Dutch), CodeWeek Special October 2021](images/Vives-174-Codeweek.pdf)
        * [CodeWeek.eu - Haunted House Challenge, September 2021](https://codeweek.eu/2021/challenges/haunted-house)
        * [Opensource.com, April 2021](https://opensource.com/article/21/4/hedy-teach-code)
        * [IO Magazine, April 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)
        * [Ingeniería De Software (Spanish), February 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)
        * [Hello World Magazine, February 2021](images/Hello_World_15_Hedy.pdf)
        * [Discoro, January 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)
        * [Felienne wins the Dutch award for ICT research for Hedy, January 2021](https://www.nwo.nl/en/news/felienne-hermans-receives-dutch-prize-ict-research-2021)
        * [SlashDot, August 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)
        * [GenBeta (Spanish), August 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)
        * [Developpez (French), August 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)
        * [Vives (Dutch), October 2020](images/artikel_vives.pdf) "Met Hedy stap voor stap leren programmeren"
        * [Leiden University, April 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)
        * [Mare (Dutch), April 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)
        * [AG Connect (Dutch), April 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)
start-sections:
-   title: "Textbasierte Programmierung in einfach!"
    text: |
        Viele Schulen und Lehrpersonen auf der Welt möchten ihren Schülerinnen und Schülern Programmieren unterrichten. Zu Beginn wird dies oft mit spielerischen Werkzeugen vom Beebot robot bis
        Scratch Junior oder Scratch gemacht. Nachdem sie diese Werkzeuge verwendet haben, wollen Kinder oft zu mächtigeren, textbasierten Programmiersprachen, wie Python, wechseln.

        Python ist jedoch schwer, weil es nur auf Englisch verfügbar ist und es verlangt komplexe Programmierkonzepte und Syntax gleichzeitig zu lernen.
        Hedy ist der einfache Weg mit textbasierten Sprachen zu beginnen! Hedy ist frei verfügbar, open source, und anders als andere textbasierte Programmiersprachen auf drei Arten und Weisen:

        1. Hedy ist mehrsprachig, du kannst Hedy in deiner eigenen Sprache verwenden
        2. Hedy ist graduell, daher kannst du ein Konzept und die zugehörige Syntax einzeln lernen
        3. Hedy ist für den Klassenraum gebaut und erlaubt Lehrpersonen die Lernumgebung vollständig anzupassen
-   title: "Mehrsprachige Programmierung"
    text: |
        Während fast alle textbasierten Programmiersprachen Schlüsselwörter auf Englisch haben, wie `for` oder `repeat`, kann Hedy in jeder Sprache benutzt werden! Wir unterstützen derzeit 39 verschiedene Sprachen, inklusive Spanisch, Arabisch, vereinfachtes Chinesisch und Hindi. Falls deine Sprache nicht verfügbar ist, kannst du jederzeit eine neue Übersetzung beginnen.
-   title: "Multi-lingual programming"
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: "Programmierung im Kontext"
    text: |
        Hedy ist für alle Kinder gedacht, die programmieren lernen wollen! Du solltest schon gut lesen können.
-   title: "Brauche ich Programmiererfahrung?"
    text: |
        Ja! Hedy ist "Open Source", was bedeutet, dass jede und jeder uns helfen kann Hedy zu verbessern.
        Du kannst unseren Code auf [GitHub](https://github.com/hedyorg/hedy) finden.
        Falls du Hedy magst und etwas beitragen möchtest, akzeptieren (und sind sehr dankbar für) [Spenden](https://github.com/sponsors/hedyorg)!
-   title: "Muss ich etwas installieren?"
    text: |-
        Nein. Hedy funktioniert im Browser, welches das Programm ist mit dem diese Seite ansiehst. Wahrscheinlich Chrome oder Edge oder Firefox. Hedy funktioniert auch auf Smartphones und Tablets.
-   title: Brauche ich zum Unterrichten mit Hedy Programmiererfahrung?
    text: "Nein, das wird nicht benötigt. Alle Konzepte sind in den Folien und in der Benutzeroberfläche für Lernende erklärt.\nWenn du einen kostenfreien Lehrpersonen-Account erstellst, bekommst du Zugang zur Lehrpersonenanleitung mit Informationen zum Unterrichten\nund häufig gemachten Fehlern."
join-sections:
-   text: "# Es gibt drei Wege auf denen du Hedy unterstützen kannst!\n"
    title: Hedy unterstützen
-   title: Die Sprache verbessern
    text: "Die graduelle und multilinguale Natur von Hedy führen zu vielen, interessanten, technischen Herausforderungen.\nDu findest diese auf [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Hedy übersetzen
    text: "Kein Programmierer? Kein Problem! Ein anderer Weg Hedy zu unterstützen ist es zu [Übersetzen](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nDies ist der aktuelle Stand, hilf uns eine Sprache zu vervollständigen, oder füge eine neue hinzu!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Lehrpersonen helfen loszulegen
    text: "Hedy wurde gestaltet, um Lehrpersonen dabei zu unterstützen Programmierlektionen im Unterricht durchzuführen. Wir haben spezifische Lehrpersonen-Features, wie die Option Klassen zu erstellen, anzupassen und zu sehen wie deine Schülerinnen und Schüler sich machen.\nFalls du Hedy magst, kannst du Schulen ansprechen, um Lehrpersonen zu helfen anzufangen! Wir können dir helfen Schulen oder Lehrpersonen über unseren [Discord](https://discord.gg/8yY7dEme9r) zu finden.\n"
