title: Hedy belgeleri
home-sections:
-   title: Metinsel programlama kolaylaştı!
    text: |-
        Dünya çapında birçok okul ve öğretmen öğrencilerine programlamayı öğretmek istiyor. Başlangıçta bu genellikle Beebot robotundan Scratch Junior veya Scratch'a kadar değişen
        eğlenceli araçlarla yapılır. Bu tür araçları kullandıktan sonra, çocuklar genellikle Python gibi daha güçlü, metinsel programlama dillerine geçmek isterler.

        Ancak Python zordur, çünkü yalnızca İngilizce olarak mevcuttur ve öğrencilerin karmaşık programlama kavramlarını ve sözdizimini bir kerede öğrenmelerini gerektirir.
        Hedy, metinsel programlama dillerine başlamanın kolay yoludur! Hedy'nin kullanımı ücretsizdir, açık kaynak kodludur ve diğer metinsel programlama dillerinden üç yönden farklıdır.

        1. Hedy çok dillidir, Hedy'yi kendi dilinizde kullanabilirsiniz
        2. Hedy aşamalıdır, böylece bir seferde bir kavramı ve sözdizimini öğrenebilirsiniz
        3. Hedy sınıf için tasarlanmıştır ve öğretmenlerin öğrencilerinin deneyimini tamamen özelleştirmesine olanak tanır
-   title: Dilin iyileştirilmesi/geliştirilmesi
    text: Neredeyse tüm metinsel programlama dillerinde `for` veya `repeat` gibi İngilizce anahtar kelimeler bulunurken, Hedy her dilde kullanılabilir! Şu anda Türkçe, Hollandaca, İspanyolca, Arapça, Çince ve Hintçe dahil olmak üzere 47 farklı dili destekliyoruz. Eğer diliniz mevcut değilse her zaman yeni bir çeviri başlatabilirsiniz.
-   title: Hedy için çeviri yapılması
    text: Bir programlama dilini öğrenmek çok zorlayıcı ve ağır gelebilir, çünkü öğrenciler aynı anda hem kavramları (örneğin if-else veya döngüler) hem de sözdizimini (tırnak işaretleri veya yuvarlak parantezler gibi) öğrenmek zorundadır. Hedy'de kavramlar önce çok az sözdizimi ile tanıtılır ve daha sonra geliştirilir. Öğrenmenin bilimsel olarak kanıtlanmış bir yolu!
-   title: Öğretmenlerin başlamasına yardımcı olun
    text: |-
        Hedy, öğretmenlerin sınıfta programlama dersleri vermelerini desteklemek için tasarlanmıştır. Bir sınıf oluşturma, onu özelleştirme ve öğrencilerinizin neler yaptığını görme seçeneği gibi belirli öğretmen özelliklerine sahibiz.
        Hedy'yi beğendiyseniz, öğretmenlerin başlamasına yardımcı olmak için tanıdığınız okullara ulaşabilirsiniz! <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord</a> aracılığı ile okul veya öğretmen bulmanıza yardımcı olabiliriz.
-   title: Bağlam içinde programlama
    text: Hedy, programlamayı mümkün olan en geniş şekilde gösterir ve çeşitli heyecan verici şekillerde kullanılabilir. Hedy, dijital ve etkileşimli hikayelerin, ekranda gösterilebilmelerinin yanı sıra bir kalem çiziciyle çizilebilen veya bir tişört üzerine işlenebilen renkli çizimlerin, ve düğmeler ve klavye eylemleriyle oynanabilir oyunların veya uygulamaların oluşturulmasına olanak tanır.
-   title: Hedy ücretsiz mi?
    text: |-
        Evet! Hedy 'Açık kaynak kodludur', yani herkes Hedy'yi daha iyi hale getirmemize yardımcı olabilir.
        Kaynak kodumuzu <a href="https://github.com/hedyorg/hedy" target="_blank">Github</a> adresinde bulabilirsiniz.
        Hedy'yi sevdiyseniz ve katkıda bulunmak isterseniz, <a href="https://github.com/sponsors/hedyorg" target="_blank">bağışları</a> kabul ediyoruz (ve çok minnettarız)!
-   title: Bir şey yüklemem gerekiyor mu?
    text: Hayır. Hedy, bu sayfaya bakmak için kullandığınız program olan tarayıcıda çalışır. Muhtemelen Chrome veya Edge veya Firefox. Hedy telefon ve tabletlerde de çalışır.
-   title: Hedy ile ders vermek için programlama deneyimine ihtiyacım var mı?
    text: |-
        Hayır, buna gerek yok. Tüm kavramlar slaytlarda ve öğrenciler için olan arayüzde açıklanmıştır.
        Ücretsiz bir öğretmen hesabı oluşturursanız, nasıl öğretileceği ve sık yapılan hatalar hakkında bilgi içeren öğretmen kılavuzuna da erişebilirsiniz.
        (Bu süreçte programlama temellerini siz de öğrenebilirsiniz).
join-sections:
-   title: Hedy'yi Desteklemek
    text: '# Hedy''yi destekleyebileceğiniz üç yol var!'
-   title: Dilin iyileştirilmesi/geliştirilmesi için yardım edin
    text: |-
        Hedy'nin kademeli ve çok dilli yapısı birçok ilginç teknik zorluk karşımıza çıkarıyor.
        Bu problemleri <a href="https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage" target="_blank">Github</a> üzerinde bulabilirsiniz.
-   title: Hedy için çeviri yapın
    text: |-
        Programcı değil misiniz? Sorun değil! Hedy'yi desteklemenin bir başka yolu da <a href="https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial" target="_blank"> anahtar kelimeleri, hata mesajlarını, maceraları ve diğer içerikleri çevirmek</a>.
        Mevcut durum şu, bir dili tamamlamamıza veya yeni bir dil eklememize yardımcı olun!
        <a href="https://hosted.weblate.org/engage/hedy/">
        <img src="https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg" alt="Translation status" /></a>
-   title: Öğretmenlerin başlamasına yardımcı olun
    text: |-
        Hedy, öğretmenlerin sınıfta programlama dersleri vermelerini desteklemek için tasarlanmıştır. Bir sınıf oluşturma, onu özelleştirme ve öğrencilerinizin neler yaptığını görme seçeneği gibi belirli öğretmen özelliklerine sahibiz.
        Hedy'yi beğendiyseniz, öğretmenlerin başlamasına yardımcı olmak için tanıdığınız okullara ulaşabilirsiniz! <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord</a> aracılığı ile okul veya öğretmen bulmanıza yardımcı olabiliriz.
learn-more-sections:
-   title: Hedy Topluluğuna Katılın
    text: |-
        Sizden haber almak isteriz! Bizimle iletişime geçmenin en iyi yolu <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord sunucumuz</a> 'a katılmaktır.

        Ayrıca bize [e-posta gönderbilirsiniz](mailto:hello@hedy.org "About Hedy").

        En son haberleri takip etmek için, [haber bültenimize abone olun](/subscribe).
-   title: Derin bir dalış!
    text: |-
        Hedy'nin felsefesi ve tasarımı hakkında daha fazla bilgi edinmek ister misiniz? Felienne'in 2022'de StrangeLoop Konferansında yaptığı bu konuşmaya göz atın:

        <iframe width="560" height="315" class="mx-auto mt-4" src="https://www.youtube.com/embed/fmF7HpU_-9k?wmode=opaque" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
-   title: Haberlerde Hedy
    text: |-
        2020'nin başlarında yayınlandığımızdan bu yana bazı web siteleri ve gazeteler Hedy hakkında yazdı. Burada bir liste tutuyoruz:
        * [Tech Optimism - A Solution to the IT Shortage (Hollandaca), Ağustos 2022](https://pom.show/2022/08/12/een-oplossing-voor-het-it-tekort/)
        * [Codeweek Podcast, Temmuz 2022](https://codeweek.eu/podcast/26)
        * [Heise.de (Almanca), Ocak 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)
        * [Strumenta, Kasım 2021](https://tomassetti.me/teaching-programming-with-hedy/)
        * [Vives (Hollandaca), CodeWeek Special Ekim 2021](images/Vives-174-Codeweek.pdf)
        * [CodeWeek.eu - Haunted House Challenge, Eylül 2021](https://codeweek.eu/2021/challenges/haunted-house)
        * [Opensource.com, Nisan 2021](https://opensource.com/article/21/4/hedy-teach-code)
        * [IO Magazine, Nisan 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)
        * [Ingeniería De Software (İspayolca), Şubat 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)
        * [Hello World Magazine, Şubat 2021](images/Hello_World_15_Hedy.pdf)
        * [Discoro, Ocak 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)
        * [Felienne wins the Dutch award for ICT research for Hedy, Ocak 2021](https://www.nwo.nl/en/news/felienne-hermans-receives-dutch-prize-ict-research-2021)
        * [SlashDot, Ağustos 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)
        * [GenBeta (İspanyolca), Ağustos 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)
        * [Developpez (Fransızca), Ağustos 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)
        * [Vives (Hollandaca), Ekim 2020](images/artikel_vives.pdf) "Met Hedy stap voor stap leren programmeren"
        * [Leiden University, Nisan 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)
        * [Mare (Hollandaca), Nisan 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)
        * [AG Connect (Hollandaca), Nisan 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)
start-sections:
-   title: Hedy ile çalışmaya başlamak
    text: '*Öğretmen hesapları, slaytlar vb. hakkında bir kaç şey*'
-   title: Diğer öğretmenler Hedy hakkında ne diyor
    text: "Bir süre önce birkaç kısa Hedy öğretmen anketi düzenledik.\nSorular, iyileştirme önerileri ile Hedy'nin en iyi özellikleri arasında gidip geliyor.\nAşağıda onların ne düşündükleri hakkında beyanları yer almaktadır:\n\nBasit arayüz ve iyi örnekler. *Öğretmen: 3. - 6. sınıflar (temel)*\n\nÇok dilli programlama ve kademeli programlama kavramının kendisi. - *US: ortaokul, 6-8. sınıf*\n\nProgramlamaya girişin aşamalı doğası. *Avustralya: Lise*\n\nYapılandırması çok iyi. *Hollanda: Ortaokul HAVO-VWO*\n\nSınıfın hızına ayak uydurabilirim. *Hollanda: grup 7 ve 8* \n\nOtomatik olarak devam ediyor. *Hollanda: 2 HAVO-VWO*\n\nHem açıklamanın Hollandaca (ve kodun İngilizce) olabilmesi hem de daha fazla \nve daha fazla olasılık. *Hollanda: Artı sınıf grubu 7*\n\nProgramlamanın 'gerçekliği', gerçekte nasıl olduğuna benziyor. *Hollanda: Artı sınıf grubu 4 ten 8 e*\n\nAdım adım aktiviteler. Eğlenceli aktiviteler. *Hollanda: 1e Tüm seviyeler, 2e VWO/HAVO 2e VWO +, 3e HAVO 3e VWO*\n\nAma Hedy ve kademeli seviyeleri... Ne fikir ama, \nBunu yarattığınız için size şahsen teşekkür etmek istedim. Size ne kadar teşekkür etsem azdır. Ayrıca, Hedy'de gördüğüm \nkadar öğrencilerimin katılım ve coşku düzeyini hiç görmemiştim. Seviye 5'e kadar işledik ve Python'a başlamadan önce \nsınıflarda ve laboratuvarlarda bir hafta daha geçirmeyi planlıyoruz.  *Pakistan*\n\nHedy'yi gerçekten çok beğendim ve aynı zamanda güzel bir şekilde kurulmuş, bu da onu ilkokulda kullanmak için iyi kılıyor.\nHedy'nin kademeli yaklaşımı çok işe yarıyor.\nHer seviyenin başındaki kısa açıklama ve kısa örnek programlar, çocuklara seçilen seviyede neyin yeni olduğu konusunda \nhızlı bir fikir vermeye yardımcı oluyor.\nÇocukların seçebileceği farklı ödevler de çok işe yarıyor.\nÇocukların kendilerine hitap eden ödevleri seçtiklerini ve daha sonra seviyeler boyunca onlarla birlikte çalıştıklarını görüyorsunuz. \nHedy, programlamada iyi olan ve gerçek bir programlama dilinin tadına varmak isteyen çocuklar için çok eğlencelidir. Ortaokulda \ndaha fazla ICT eğitimi verilmeye başlanır başlanmaz, ortaokul için iyi bir hazırlıktır. *Netherlands: Oegstgeest Montessori school*\n\n<img width=\"500px\" src=\"static/images/teacherfeedback/Fkids1.JPG\"></img>"
teacher-guide:
-   title: Giriş
    key: tanıtım
    subsections:
    -   title: Hedy nedir?
        text: |-
            Hedy, özellikle (ön)gençler (10 ila 15 yaş arası) için geliştirilmiş metinsel bir programlama dilidir.
            Scratch gibi çocuklara yönelik programlama dillerinin aksine, Hedy kod blokları değil, metinsel kod kullanır.
            Böylece Hedy ile gerçek programcıların yaptığı gibi kod yazmayı öğreneceksiniz, ancak eğlenceli alıştırmalarla ve küçük adımlarla.
            Bu şekilde Hedy, Python gibi gerçek programlama dillerine doğru erişilebilir ve çoğunlukla eğlenceli bir şekilde bir basamak olarak işlev görebilir!
            Daha fazlasını öğrenmek istiyorsanız, Hedy'nin bir programlama dili olarak gelişimi hakkındaki bu <a href="https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s" target="_blank">video</a> 'yu izleyebilirsiniz.
    -   title: Hedef kitle
        text: |-
            Hedy, ortaokul ve lise öğrencileri (10 - 15 yaş) düşünülerek geliştirilmiştir.
            Öğrencilerin iyi okuyabilmeleri önemlidir. Öğrenciler en az 3. sınıf okuma seviyesine ulaşmadan Hedy ile başlamamalarını öneririz.
            Öğrencilerin (ve öğretmenlerin!) Hedy ile başlamadan önce herhangi bir programlama deneyimine ihtiyaçları yoktur.
    -   title: Hedy nasıl işliyor?
        text: |-
            Hedy, her birinde yeni komutların öğretildiği seviyelere ayrılmıştır. Her seviye, yeni öğrenilen komutları uygulamak için çeşitli maceralar içerir.
            Bir öğretmen olarak, öğrencilerinizin hangi maceraları yaşayacağına siz karar verirsiniz. Bu seviyede bir restoran mı, hesap makinesi mi yoksa perili bir ev mi yapacaklar? Her seviyede maceralar en kolaydan en zora doğru sıralanmıştır.
            Böylece öğrencilerinize meydan okumaya devam eder. Maceralar öğrenciler tarafından bireysel olarak yapılabilir veya bunları klasik bir eğitimde kullanabilirsiniz.

            Maceralar, dijital bilgisi daha az olan öğretmenlerin de Hedy'yi kullanabilmelerini sağlamak için bir kod örneği de içerir!
            Elbette Hedy, kendi ders planlarını ve maceralarını yapmayı seven yaratıcı öğretmenlere de hitap ediyor!

            Belirli bir seviyedeki tüm maceraları programladıktan sonra, öğrencileriniz bilgilerini kısa sınavda test edebilirler.
            Öğrencilerinizin çalışmalarını ve ilerlemelerini sınıf sayfasından takip edebilirsiniz.
    -   title: Cihazlar
        text: |-
            Hedy web tabanlıdır, yani tarayıcısı olan herhangi bir cihazda (Google Chrome, Firefox, Edge vb.) çalışır, bu sayede dizüstü bilgisayarlar, Chromebook'lar, tabletler ve hatta akıllı telefonlar Hedy'yi kullanmak için uygundur.
            Hedy ile çalışmadan önce herhangi bir şey indirmenize gerek yok, sadece web sitesine gidin ve her şey çalışmaya hazır sizi bekler!
    -   title: Hedy Topluluğu
        text: |-
            Bütün Hedy öğretmenleri, programcıları ve diğer hayranları <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord sunucumuza</a> katılmaya davetlidir. Burası Hedy hakkında sohbet etmek için ideal bir yer: harika projelerinizi ve derslerinizi gösterebileceğiniz kanallarımız, hataları bildirebileceğiniz kanallarımız ve diğer öğretmenlerle ve Hedy ekibiyle sohbet edebileceğiniz kanallarımız var.
            <a href="https://www.youtube.com/watch?v=Lyz_Lnd-_aI" target="_blank">Burada</a> Discord Topluluğuna nasıl katılacağınıza dair bir video bulabilirsiniz.
    -   title: Hedy and the GDPR
        text: |-
            Organizations in the EU have to comply with the GDPR (General Data Protection Regulation) when processing personal data.
            Because this is a complex issue for many schools, you can use all Hedy programming functionalities without sharing personal data.
            The easiest way to do this is to use Hedy without creating accounts for the teacher and students. Without accounts, all functionality is available, with the exception of personalizing levels, saving students' programs and viewing their progress. That is limiting, but there are schools that use Hedy in that way.

            A second way is for a teacher to create an account with an email address without personal data, for example "docent25@email.com". Apart from an email address, which is only required to reset your password, you do not need to share any information when you create a teacher account.
            With a teacher account, you can create anonymous accounts for students, e.g. rainbow-student1, rainbow-student2, etc (See 'Teaching preparations' for a detailed manual). This way you can use all functionality of Hedy, including saving progress, without sharing personal data of yourself or your students.

            If the above is not sufficient for your context, we can sign a processing agreement for the processing of your personal data.
-   title: Öğretici
    key: öğretici
    subsections:
    -   title: Öğretici
        text: Öğreticiyi (tekrar) izlemek ister misiniz? <a href="https://hedy.org/tutorial" target="_blank">Buraya</a> tıklayın.
-   title: Öğretim hazırlıkları
    key: hazırlıklar
    subsections:
    -   title: Öğretmenler için
        text: Sınıflarınızın hazırlığını <a href="https://hedy.org/for-teachers" target="_blank">Öğretmenler İçin</a> sayfasında yapabilirsiniz. Bu sayfada sınıflarınız, maceralarınız ve slaytlarınız gibi Hedy ile öğretmek için ihtiyaç duyacağınız her şeyi bulacaksınız. Öğretmenler için sayfasının tüm işlevleri aşağıda açıklanmıştır.
    -   title: Sınıf Oluşturma
        text: |-
            Bir öğretmen olarak, öğrencileriniz için bir sınıf oluşturabilirsiniz. Bu sınıfta öğrencilerin hesaplarını ve programlarını görebilir ve ilerlemelerini izleyebilirsiniz.
            Bu <a href="https://www.youtube.com/watch?v=Y3RTIWftJQg" target="_blank">video</a> Hedy'de nasıl hızlı bir şekilde sınıf oluşturacağınızı gösterir.
    -   title: Duplicate a class
        text: |-
            Are you teaching multiple classes? Then you don't have to customize each class individually. Simply make a class, costumize the class (see "Customize your Class" to learn how) and then duplicate this class as many times as you want.
            You can duplicate the class on the 'For Teachers' page. If you duplicate a class, all the class settings are duplicated as well. This means that all the levels and adventures you've mande unavailable for the first class will now be unavailable for the new class(es) as well.
            The student accounts and second teacher accounts in your class will not be duplicated into the new class.
    -   title: Add a second teacher
        text: |-
            Are you not the only teacher that teaches your class? Then you can now add another teacher to the class. Go to the 'For teachers' page and click on the class. Then choose 'Invite a teacher' and fill in the username of your colleague.
            Your colleague will get an invitation on their account to join your class. They can see that invitation message by clicking on their username in the upper right corner of the screen and selecting 'My account'.
            Once the other teacher accepts the invitation they can customize the class as well.
            To remove a second teacher from your class, go to the class page and remove the second teacher. The teacher who's created the class cannot be removed.
    -   title: Sınıfınızı Özelleştirin
        text: |-
            Ayrıca, sınıfınızı özelleştirebilir ve onlar için hangi maceraların kullanılabilir olacağını seçebilirsiniz. Bu şekilde öğrencileriniz maceraların ve seviyelerin çokluğundan bunalmayacak ve özellikle pratik yapmalarını istediğiniz maceralara odaklanabilecekler.
            This way your students won't be overwhelmed by the amount of adventures and levels, and they can specifically focus on the adventures you'd like them to practice with.
            Click on your class on the for teachers page and choose 'customize class'. On this page you can select levels, set opening dates, unlock level thresholds and more.

            **Select and order adventures**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df38cbb2-468e-4317-ac67-92eaf4212adc" width="1000">
            In this section you can select and order adventures. The pink tabs are adventures with new commands. The gray tabs are regular adventures. To rearrange the order of the adventures, you can drag the tabs. However, we do advise you to use the regular order of adventures as the Hedy team made sure the adventures go from easiest to hardest.
            If you want to remove an adventure for your students, simply click the cross on the adventure's tab.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0ddd10b5-ef60-4480-a0c4-fc9a0f323baa" width="300">
            If you want to add adventures, for instance your own adventure or an adventure you accidentally removed, use this menu to add the adventure to your students' adventures. Simply click the adventure you want to add and it (re)appears in the line of adventures. To undo all your changes to the adventures, click 'Reset'.

            **Opening dates**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/4e59acfa-4772-429f-8328-babb43c942d5" width="300">
            With this feature you can set opening dates for the levels. This way you can make a lesson plan before your course begins and not worry about opening new levels each week. In the image above the first level is opened directly, the second will open the 23th of september, and the 3rd level the week after. The other levels are closed.
            Don't want to set opening dates? No problem, just leave this section blank.

            **Unlock level thresholds**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/99a34dab-f112-459e-bfd1-07618be4715a" width = "1000">
            This featue allows you to set a threshold for your students' quiz grade, before they can continue to the next level. For example, if you enter "80" your students have to score at least 80% on the quiz before they are allowed to go to the next level. If they haven't met the threshold, they are not allowed to continue and have to retake the quiz.
            Don't want to use the threshold? No worries, just keep this section blank.

            **Other settings**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/a8491d67-6d6e-42a7-b672-fd3d083a76f8"/>
            There are some other setting that could be usefu to you aswell. Our first extra setting is 'Mandatory developer's mode'. In developers mode the students only see their input and output screens and the run button. The adventures are hidden and there are no cheatsheets available. This might come in handy in a test situation.
            If this option is not selected the developer's mode is available for students too as a voluntary option.

            If you want all your students to be visible in de class highscore, you can select the second option.
            With all the other options you can choose to hide some functions or content for your students, this might help them focus more.

            **Save**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df179df3-3073-4d15-bba6-62e58fb675be" width="300">
            Don't forget to save your changes when you're done customizing your class.
    -   title: Öğrenci Hesapları
        text: |-
            Öğrencilerinizin sınıfınıza katılmasını sağlamanın 2 yolu vardır: Onlar için hesap oluşturabilirsiniz ya da onlar kendi hesaplarını oluşturabilirler.

            **Öğrencileriniz için hesapları siz oluşturursunuz**
            Sınıfınıza öğrenci eklemenin en kolay yolu onlar için bir hesap oluşturmaktır. Bu, 'öğrenci hesapları oluştur' düğmesine tıklayarak ve onlar için kullanıcı adlarını ve şifreleri doldurarak yapılabilir.
            Öğrenciler seçtiğiniz kullanıcı adı ve şifre ile giriş yapabilirler. Daha sonra, isterlerse kullanıcı adlarını veya şifrelerini değiştirebilirler ve sınıfınızda kalmaya devam ederler.
            Bu <a href="https://www.youtube.com/watch?v=eEQvik-Ce5M" target="_blank">video</a> sınıfınıza en hızlı ve en kolay şekilde nasıl öğrenci ekleyeceğinizi gösterir.

            **Öğrenciler kendi hesaplarını oluşturur**
            Öğrencileriniz de Hedy web sitesine gidebilir ve tıpkı sizin yaptığınız gibi kendi hesaplarını oluşturabilirler. Onları sınıfınıza almak için davet bağlantısını tıklamaları yeterlidir.
            Davet bağlantısını sınıf sayfasında bulabilir ve öğrencilerinize gönderebilirsiniz. Bunun sorunsuz çalışması için öğrencilerinizin bağlantıya tıkladıklarında Hedy'de oturum açmış olmaları gerektiğini unutmayın.
            Ayrıca 'Kullanıcı adı ile davet' düğmesini kullanarak bir öğrenciyi sınıfınıza kendiniz davet edebilirsiniz.
            If a student wants to switch languages, they can click the keyword switcher. It will switch the keywords from English to the preferred language and back.
            Fun fact! Students are allowed program in both English and their own language at the same time! So, if they have trouble remembering some keywords in English, but easily remember other ones they can use both at the same time.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0b3122e6-ff22-43d7-b8b6-62f47f485293" width="100">

            **Video**
            This <a href="https://www.youtube.com/watch?v=QrVZETj4oLM" target="_blank">video</a> show you how to set a preferred language and change the keywords to you preferred language as well.
    -   title: Tercih edilen dili ayarlama
        text: |-
            Öğrenciler profil oluşturduklarında bir 'tercih edilen dil' seçmeleri gerekmektedir. Hedy her zaman bu seçilen dilde yüklenecektir.
            Bu dilin değiştirilmesi daha sonra 'Hesabım' ve 'Kişisel ayarlarım' bölümlerine tekrar gidilerek her zaman yapılabilir.
            Aralık 2021'den itibaren, her Hedy hesabı için tercih edilen bir dilin belirlenmesi zorunludur.
            Hesabınız veya öğrencilerinizin hesapları bu tarihten daha önce oluşturulmuşsa, tercih edilen dilin eksik olduğunu belirten bir mesaj alacaksınız.
            Endişelenmeyin! 'Profilim' bölümüne gidin ve profil ayarlarınızdan bir dil belirleyin.
            Siz bir dil belirleyene kadar Hedy, tarayıcınızın ayarlı dilinde ve eğer bu dil desteklenmiyorsa İngilizce olarak gösterilecektir.

            **İngilizce bilmeyenler için**
            Sadece maceraların dilini kendi dilinize çevirmekle kalmazsınız. Ayrıca anahtar kelimelerin (örneğin 'yazdır' veya 'sor') hangi dilde olması gerektiğini de seçebilirsiniz.
            Bu şekilde öğrencilerinize İngilizce anahtar kelimelerle kodlamayı öğretebilir, ancak kendi dillerinde programlamalarını da sağlayabilirsiniz. Örneğin, Türk öğrenciler 'ask' yerine 'sor' komutunu kullanabilirler.

            **Video**
            Bu <a href="https://www.youtube.com/watch?v=QrVZETj4oLM" target="_blank">video</a> tercih edilen bir dili nasıl ayarlayacağınızı ve anahtar kelimeleri de tercih ettiğiniz dile nasıl değiştireceğinizi gösterir.
    -   title: Programların kaydedilmesi
        text: |-
            Giriş yaptığınızda, profil simgenizin yanında Programlarım'ı göreceksiniz.
            Bu seçenek öğrencileriniz için de mevcuttur. Programlarım bölümünde üzerinde çalıştığınız tüm programları bulabilirsiniz.
            Varsayılan olarak programlar, kodu çalıştırdığınızda ve her 10 saniyede bir varsayılan isimleri ve seviyeleri (örneğin: Hikaye 5) altında 'Programlarım'a kaydedilecektir.
            Bir programı yeni bir isim altında saklamak isterseniz, isim çubuğuna yeni ismini yazmanız yeterlidir.
            Şu anda, seviye ve sekme başına yalnızca bir program kaydedilebilmektedir.

            Siz (ve öğrencileriniz) ayrıca program adlarının yanındaki paylaş düğmesini kullanarak programları paylaşabilirsiniz de.
            Bu programlar, herkesin görmesi ve kullanması için, sitemizin <a href="https://hedy.org/explore" target="_blank">Keşfet sayfaları</a> içinde yayınlanacaktır.
            Programınızın paylaşımını kaldırmak istiyorsanız, 'Programlarım'a gidin ve 'Paylaşımı kaldır'a tıklayın.

            Kağıt uçak simgesi, programları bir sınıfın öğretmenine teslim etmek için kullanılabilir. Teslim edilen programlar artık düzenlenemeyecektir.
-   title: Hedy ile Öğretme
    key: öğretim
    subsections:
    -   title: Hedy ile Öğretme
        text: |-
            Hedy, her biri farklı bir yeni beceri öğreten birçok farklı seviye içerir. Her ders için bir seviye öğretilmesini öneriyoruz.
            Bu, öğrencilerinize bir sonraki seviyeye geçmeden önce yeni bir komutu veya kavramı tam olarak kavramaları ve onunla pratik yapmaları için zaman verir.
            Derslerimizde bu yapıyı kullanıyoruz: Giriş, Yeni kavramlar ve komutlar, Hadi çalışalım, yap-bozlar ve kısa sınavlar.
    -   title: Slaytlar
        text: |-
            Talimatları verirken slaytlarımızı kullanmak isteyebilirsiniz. Slaytlarımız 'Öğretmenler için' sayfasında mevcuttur. Her seviye için bir dizi slayt vardır. Slaytlarda o seviye için gelen tüm yeni komutlar açıklanmaktadır. Bu değişikliklerin neden gerekli olduğunu veya yeni komutların nasıl kullanışlı hale geldiğini açıklamayı amaçladık.
            Ayrıca yeni komutların nasıl kullanılabileceğine dair bazı örnekler de veriyoruz. Elbette kendi slaytlarınızı da kullanabilir veya sadece Hedy'yi açıp öğrencilerinize web sitesini gezdirebilirsiniz. Hedy derslerini en iyi şekilde vermek için hangisini tercih edeceğiniz size kalmış!
    -   title: Giriş
        text: |-
            Derslerinize öğrencilerinizin ön bilgilerini harekete geçirerek başlayabilirsiniz: Konu hakkında zaten ne biliyorlar, bir önceki derste ne öğrendiler ve şimdi ders çıkardıkları hangi hataları yaptılar?
            Bu şekilde, yeni dersi anlatmaya başladığınızda daha önce öğrenilen tüm komutlar ve sık yapılan hatalar öğrencilerinizin hafızasında tazelenmiş olur.
    -   title: Yeni kavram ve komutlara giriş
        text: |-
            Yeni kavramlar ve komutlar bazı öğrenciler için tam olarak anlaşılması oldukça zor olabilir.
            Bu nedenle, öğrencilerinize yeni komutların doğru kullanımını modellemeniz önemlidir.
            Özellikle bazı öğrencilerin programlama konusunda hiç deneyimi olmadığı alt seviyelerde, yeni soyut kavramları anlamaları zor olabilir.
            Çok sayıda örnek göstermek, soyut bir kavramı (örneğin: "Değişken nedir?") daha tanınabilir ve daha kolay anlaşılabilir hale getirir ("Bakın, evcil_hayvan değişkeni şimdi bir köpeğe dönüştü"). Slaytlarımız bunun için yardımcı olabilir.
    -   title: Hadi çalışalım
        text: |-
            Her seviye, pembe sekmelerde bulabileceğiniz farklı maceralar içerir. İlk pembe sekme bu seviyedeki yeni komutları açıklar.
            Sonraki sekmeler öğrencilerin deneyebilecekleri ve kendilerinin yapabilecekleri maceralardır.
            Maceralar en kolaydan en zora doğru sıralanmıştır, bu nedenle soldan başlayıp sağa doğru ilerlemenizi öneririz.
            Son sekme olan 'sırada ne var', bir sonraki seviyede neler öğreneceğinize dair küçük bir ipucu verir. Elbette, öğrencilerinizin her seviye için yapmasını istediğiniz maceraları seçebilirsiniz.
            Öğrenciler her zaman her macerayı yapmak zorunda değiller. Her macera, öğrencilerin yeşil düğme ile deneyebilecekleri örnek bir kod içerir.
            Örnek kod çalışma alanına kopyalanabilir ve öğrenciler burada kodu deneyebilir ve kendilerine göre değiştirebilirler.
            Öğrencilerinizi, kendi fikirlerini eklemeleri ve maceraya kendi yorumlarını ekleyerek örnek kodları kendilerine ait projelere dönüştürmeleri için teşvik edin.
    -   title: Kısa sınavlar ve yap-bozlar
        text: |-
            Öğrencilerinizin, bir seviyedeki tüm yeni bilgileri anlayıp anlamadıklarını test etmek için, kısa bir sınava girmelerini sağlayabilirsiniz.
            Sınav, bu seviyedeki yeni kavramlarla ve komutlarla ilgili 10 çoktan seçmeli soru içerir.
            Bu sınavları hazırlamaya devam ettiğimiz için henüz her seviye için sınavlar tamamlanmış değil.
            Bazı seviyelerde yap-bozlar da bulunuyor. Bu yap-bozlar öğrencilere, çalışması için doğru sıraya koymaları gereken birkaç kod satırı verir.

            Bu <a href="https://www.youtube.com/watch?v=lNh5EdZVUwc" target="_blank">video</a> kısa sınavları ve yap-bozlar gösterir.
    -   title: Değerlendirme
        text: |-
            Dersinizi kısa bir değerlendirme yaparak tamamlayın. Öğrenciler ne öğrendi? Hangi zorluklarla karşılaştılar?
            Hatalarından nasıl ders çıkardılar? Ve tabii ki: Neler oluşturdular?
            Öğrenciler genellikle kendi eserleriyle gurur duyarlar, bu nedenle öğrencilerinize çalışmalarını sınıf arkadaşlarına gösterme fırsatı verecek molalar verin.
-   title: Teacher Statistics
    key: teacher_statistics
    subsections:
    -   title: Live Dashboard
        text: |-
            If you would like to keep track of your students' progress, you can make use of the live dashboard. You can find the live dashboard by clicking 'Live statistics' on your class page.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/97a54679-b1d6-46b4-a633-ab0161114642" width="1000">
            All the features of this dashboard are explained below.
    -   title: Level Selection
        text: |-
            <img src="https://github.com/hedyorg/hedy/assets/80678586/94dc891d-cdd6-4311-91f2-51900eaf4c2a" width="500">
            Firstly, you can select the levels you'd like to see on the dahsboard. Select the levels your students are currently working on by clicking on the number of that level. Deselect levels that you do not want to see by clicking them again.
            In this example level 1 and 2 are selected. You can click on refresh to refresh the dashboard and get the most current stats.
    -   title: Class Overview
        text: |-
            <img src="https://github.com/hedyorg/hedy/assets/80678586/b2c30ef9-6eba-4c02-92a3-9669504a54a8" width="1000">
            In the class overview you can see which adventure your students are working on right now. You can see that one student is working on the 'Rock, Paper, Scissors' adventure in level 1, one is working on the 'Fortune Teller' in level 1 and one student is working on the 'Rock, Paper, Scissors' adventure in level 2.
            If you'd like to know which of your students is working on the adventure, simply click the number and their accountnames will appear.
            You can also see how many of your students have finished the quiz. In this case, one student finished the quiz in level 1. Again, you can click the 1 to see which of your students it is.

            You can also see one of the students is 'missing' from this overview. That's because he's working on an adventure in level 4, which is not selected.
    -   title: Student List
        text: |-
            <img src="https://github.com/hedyorg/hedy/assets/80678586/693e976c-199f-46f4-abae-3f18f9854cd0" width="1000">
            Here you can find a list of your students and you can see their individual progress. The blue ring shows you what your students are currently working on.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/c7e2150f-60de-4ef7-8862-5901a7fb6609" width="150">
            It is important to notice that the blue dots means that a students 'attempted' the adventure. This means that they ran a code in this adventure and went on to the next adventure, so this does not automatically mean that they did a good job!
            If you want to see how an individual student is getting along, you can click their name in this overview. This is what you see if you click on marleen_h3a for example:
            <img src="https://github.com/hedyorg/hedy/assets/80678586/f8c2480d-c724-46f9-a702-33532828de70" width="800">
            You see that Marleen is having some trouble programming. She tried to run a program that contains blanks multiple times, so she probably doesn't know that she has to change something to the example codes before running them.
            In this way this overview can give you a better understanding of what a student is struggling with.
    -   title: Common Errors
        text: |-
            <img src="https://github.com/hedyorg/hedy/assets/80678586/e7af5ce3-ca74-48e7-9654-f17435596fbc" width="500">
            If you're not only interested in individual struggles of your students, but you'd like to know what the whole class seems to be doing wrong, you can use this oversight of common errors.
            The most common error messages that your students are recieving will appear in this oversight for you, so you could give some more instructions to the whole class if needed.
            By clicking the error, you can see which students are having trouble with this error. By clicking resolve, you'll remove this error from the list.
    -   title: Overview of programs per adventure
        text: |-
            <img src="https://github.com/hedyorg/hedy/assets/80678586/f07bf714-7250-4711-82a1-616f9f7b55e8" width="1000">
            Another useful overview of all the programs your students made in a level can be found on your class page. Go to the class page and click 'Overview of programs per adventure'. Here you'll find this overview.
            You could use this overview to check your students' work. If they have made a program in an adventure, an eye appears in your overview. Click the eye to view their work. Did you like it? Then you can check the box and a green tick will appear.
            This way you create a nice overview for yourself of your students' results.
-   title: Hedy'nin diğer özellikleri
    key: özellikler
    subsections:
    -   title: Kendi maceranızı oluşturun
        text: Öğretmenlerin kendi maceralarını oluşturmaları da mümkündür. Bu <a href="https://www.youtube.com/watch?v=A0zbXpxX4q4" target="_blank">video</a> bir öğretmen olarak kendi maceranızı nasıl yaratacağınızı ve sınıf(lar)ınıza nasıl ekleyeceğinizi gösteriyor.
    -   title: Keşfet sayfası
        text: |-
            <a href="https://hedy.org/explore" target="_blank">Keşfet sayfasında</a> diğer Hedy kullanıcılarının çalışmalarını görüntüleyebilirsiniz. Onların programlarını deneyebilir ve kendiniz harika bir şey oluşturmak için ilham kaynağı olarak kullanabilirsiniz.
            Ayrıca, kodlama ekranında 'Kodu kaydet ve paylaş'a tıklayarak veya 'Programlarım'a gidip 'Paylaş'a tıklayarak kendi yaptığınız bir programı da keşfet sayfasına ekleyebilirsiniz.
            Çalışmanızı artık paylaşmak istemiyor musunuz? Sadece 'Programlarım'a gidin ve 'Paylaşımı Kaldır'a tıklayın.
            Keşfet sayfası hakkında daha fazla bilgi istiyorsanız, bu <a href="https://www.youtube.com/watch?v=26boFjqvS5Q" target="_blank">video</a>'ya bir göz atın.
    -   title: Başarımlarım
        text: |-
            Ekranınızın sağ üst köşesindeki kullanıcı adınıza tıklarsanız, <a href="https://hedy.org/my-achievements" target="_blank">Başarımlarım</a> sayfasına gidebilirsiniz. Bu sayfada başarılarınız toplanıyor. Öğrencilerinizin de böyle bir sayfası var.
            Farenizle rozetin üzerine geldiğinizde, rozeti nasıl kazanacağınızı göreceksiniz. Nasıl kazanacağınızı kendiniz bulmanız gereken gizli rozetler de vardır.
            Başarılar hakkında daha fazla bilgi edinmek istiyorsanız, bu <a href="https://www.youtube.com/watch?v=-FjmKejukCs" target="_blank">video</a> 'ya bir göz atın.
    -   title: High Scores
        text: |-
            <a href="www.https://hedy.org/highscores" target="_blank">Bu sayfa</a> 'da, tüm Hedy kullanıcılarının yüksek puanlarını görebilirsiniz.
            Bu <a href="https://www.youtube.com/watch?v=IqTiUkBVTo8" target="_blank">video</a>'da, yüksek skorlar hakkında biraz daha bilgi edinebilirsiniz.
    -   title: Hata Ayıklayıcı
        text: |-
            Sizin (veya öğrencinizin) kodunuz çalışmıyor mu? İçinde bir hata (kodlama hatası) olmalı! Hatayı bulmak için hata ayıklayıcıyı kullanabilirsiniz.
            Hata ayıklayıcı, kodlama ekranınızdaki uğur böceği düğmesidir. Buna basarsanız, hatanızı bulmak için kodunuzu satır satır çalıştırabilirsiniz.
            Hatayı buldunuz mu? Kırmızı durdurma düğmesine basarsanız hata ayıklayıcı kapanacaktır.
    -   title: Sesli oku
        text: Programınızın çıktısının yüksek sesle okunmasını ister misiniz? O zaman kodlama ekranınızdaki 'kodu çalıştır' düğmesinin altında bulunan sesli okuma işlevini kullanabilirsiniz.
    -   title: Programcı kipi
        text: |-
            Tüm maceralar dikkatinizi mi dağıtıyor, yoksa uzun bir program mı yapmak istiyorsunuz? O zaman kodlama ekranınızın altındaki 'Programcı Kipi' anahtarına göz atın.
            Programcı modu, sizin ve öğrencilerinizin daha büyük bir kodlama ekranı kullanmasını sağlar.
    -   title: Kopya kağıdı
        text: |-
            Her seviyede üstünde 🤔 emojisi olan bir düğme vardır. Siz ve öğrencileriniz "kopya kağıdını" orada bulabilirsiniz. Bu kopya kağıdında, bu seviyede kullanılabilen tüm komutları doğru biçimlerinde bulabilirsiniz.
            Dolayısıyla, bir komutun nasıl çalıştığını unutacak olursanız, kopya kağıdına bir göz atmanız yeterli!
    -   title: Video
        text: Bu <a href="https://www.youtube.com/watch?v=c4MntPPgl1Y" target="_blank">video</a> size, Hedy'nin kopya kağıdı ve anahtar kelime değiştirici gibi diğer özelliklerini gösterir.
-   title: After Hedy
    key: after
    subsections:
    -   title: What to do after Hedy?
        text: |-
            Congratulations on reaching the end of Hedy! Your students have now learned how to create their own basic codes in the Python programming language.
            Of course, you could keep programming in our Hedy compiler, but it might be more exciting for your students to transfer to a "real" Python interface.
            Would you like to continue teaching Python? Then please visit <a href="https://www.python.org/about/gettingstarted/" target="_blank">the Python website</a> to learn how to get started in another compiler.

            Now that your students have a basic knowledge of programming in general, you could also show them around in other textual programming languages. The language might change but the concepts do not, so Hedy will still give them a big advantage.
-   title: Alıştırmaların cevapları
    key: cevaplar
    intro: |-
        Tüm alıştırmaların cevapları 'Hedy_answers' kullanıcı hesabının herkese açık profilinde bulunabilir. Öğrencileri genellikle cevaplarında kendi yaratıcılıklarını kullanmaya teşvik ediyoruz, bu nedenle bu cevaplar yalnızca olası bir doğru cevabın nasıl görünebileceğine dair bir kılavuz olarak kullanılmalıdır.

        'Hedy_answers' profiline gitmek için, lütfen <a href="https://hedy.org/user/hedy_answers" target="_blank">buraya</a> tıklayın.
-   title: Yaygın hatalar
    key: common_mistakes
    intro: |-
        Hatalarınızdan ders çıkarabilirsiniz, özellikle de kodlama yaparken!
        Hata yapmak kaçınılmazdır ve öğrenmek için harika bir fırsattır, ancak öğretmenler için bir hata olduğunda doğru çözümü bulmak zor olabilir!
        Özellikle de seviyeler ilerledikçe kodlar uzadıkça uzar. Bu yüzden her seviyede sıkça yapılan hataları ve çözümlerini içeren bir liste hazırladık.
    levels:
    -   level: '1'
        sections:
        -   title: Öğrenciler komutları yazmayı unutmuş olabilir
            example:
                error_text: Örneğin, yazdır kullanmadan bir cümle yazarlar.
                error_code: Hedy bunu yazdır'amaz
                solution_text: Bu seviyede, öğrencilerinize bir kod satırına her zaman bir komutla başlamalarını öğretin.
                solution_code: yazdır Hedy bunu yazdırabilir!
        -   title: Öğrenciler komutları yazarken büyük harf kullanmış olabilirler
            example:
                error_text: Komutlar büyük harflerle yazılırsa çalışamazlar.
                error_code: |-
                    Sor Kodum neden başarısız oldu?.
                    Yazdır Çünkü büyük harf kullanıyorum.
                solution_text: Büyük harfleri kaldırın.
                solution_code: |-
                    sor Kodum şimdi neden çalışıyor?
                    yazdır Çünkü büyük harfleri kaldırdım!
        -   title: Öğrenciler yakıla'yı sor olmadan kullanmış olabilir
            example:
                error_text: Bu seviyede, yankıla komutu bir sor komutundan sonra alınan cevabı tekrarlamak için yapıldı. sor komutu olmadan yankıla hiçbir şey yapmaz.
                error_code: yankıla Senin ismin
                solution_text: Kodun çalışabilmesi için bir sor komutu ekleyin.
                solution_code: |-
                    sor Adınız nedir?
                    yankıla Demek adınız
        -   title: Öğrenciler yankılanan kelimelerin (değişken) bir cümlenin ortasında olmasını istiyorlar
            example:
                error_text: Ve bunda haklılar! İşte bu yüzden değişkenleri kullanmayı öğrenecekler, ama bir sonraki seviyede.
                error_code: |-
                    sor En eğlenceli programlama dili hangisidir?
                    yankıla dili en iyisidir!
                solution_text: '1. seviye için bunu şu şekilde kullanmak gerekiyor:'
                solution_code: |-
                    sor En eğlenceli programlama dili hangisidir?
                    yankıla En iyi olan dil...
        -   title: 'Kaplumbağa: Öğrenciler kaplumbağanın ekrandan çıkıp gitmesine sebep olmuştur'
            example:
                error_text: Genellikle öğrenciler kaplumbağayı kullanırken büyük sayıları denemeyi severler, ama bu onun ekrandan çıkmasına neden olur.
                error_code: |-
                    ileri 300
                    döndür 90
                solution_text: Bu örnekte, öğrenciler dönüş komutunun çalışmadığını düşünme eğilimindedir. Çalışıyor olsa bile, ekran dışında olduğundan bunun gerçekleştiğini göremezsiniz. Bunun olmasını önlemek için daha küçük sayılar kullanın.
                solution_code: |-
                    ileri 100
                    döndür 90
        -   title: 'Kaplumbağa: Öğrenciler geriye gibi bir komutu kullanmayı deniyor, ancak böyle bir komut yok'
            example:
                error_text: geriye diye bir komutumuz yok.
                error_code: geriye 100
                solution_text: 'Kaplumbağanın geriye doğru gitmesini sağlamak için ileri komutu ile negatif bir sayı kullanırsınız. Örneğin:'
                solution_code: ileri -100
    -   level: '2'
        sections:
        -   title: Öğrenciler komutlarında yazım hataları yapmış olabilirler
            example:
                error_text: Hedy yazım hatası olan bir komutu tanıyamaz.
                error_code: yazzdır Yazım hatası yapma!
                solution_text: Öğrencilerinize hata mesajlarını okumayı öğretin. Bu şekilde neyin yanlış gittiğini kendileri bulabilirler.
                solution_code: yazdır Yazım hatası yapmayın!
        -   title: Öğrenciler sor komutunun artık değiştiğini unutmuş olabilir
            example:
                error_text: Bu seviyede öğrenciler değişkenleri öğrenirler. sor komutu da bir değişken kullanmayı gerektirir, ancak öğrenciler bu değişikliği unutabilirler.
                error_code: sor Ne yemek istersiniz?
                solution_text: Bu seviyede Hedy'ye cevabınızı nereye kaydedeceğinizi söylemeniz gerekir, böylece onu daha sonra kullanılabilirsiniz. Buna değişken denir.
                solution_code: sipariş eşit sor Ne yemek istersiniz?
        -   title: Öğrenciler `{echo}` komutunu kullanmayı deniyor olabilirler
            example:
                error_text: Bazı öğrenciler için `{echo}` komutunun artık çalışmadığını öğrenmek biraz sinir bozucu olabilir. Bu yüzden değişken kullanmanın avantajlarını açıklamak çok önemlidir. Örneğin, bir kodda birden fazla değişken kullanabilir ve bunları bir cümle içinde istediğiniz yere koyabilirsiniz!
                error_code: |-
                    cevap {is} {ask} {echo} neden artık çalışmıyor?!
                    {echo}
                solution_text: Bunun yerine bir değişken kullanın.
                solution_code: |-
                    cevap {is} {ask} {echo} komutu neden artık çalışmıyor?!
                    {print} cevap
        -   title: Öğrenciler bir değişken adını normal bir kelime gibi olarak kullanmaya çalışır
            example:
                error_text: Aşağıdaki örnekte 'adım' kelimesi hem bir değişken hem de normal bir metin olarak kullanılmıştır. Bu kodun çıktısı 'Merhaba, benim Hedy, Hedy' olacaktır.
                error_code: |-
                    adım eşit Hedy
                    yazdır Merhaba, benim adım, adım
                solution_text: Bu nedenle, metin içinde kullanmak istediğiniz bir kelimeyi değişken adı olarak kullanmayın. Seviye 4'te bu sorun tırnak işaretleri kullanımı ile çözülecek.
                solution_code: |-
                    isim eşit Hedy
                    yazdır Merhaba, benim adım isim
        -   title: Öğrenciler iki kelime içeren uzun değişken isimleri kullanmayı deneyebilir.
            example:
                error_text: Bir değişken tek bir kelime ile adlandırılmalıdır. İki kelime gerekiyorsa bunları bağlamak için alt çizgi kullanabilirsiniz. Bu şekilde yine bir kelime olarak sayılır.
                error_code: seçili kapı eşit sor Hangi kapıyı seçiyorsun?
                solution_text: Alt çizgi kullanın.
                solution_code: seçili_kapı eşit sor Hangi kapıyı seçiyorsun?
        -   title: Öğrenciler aynı değişken için iki farklı isim kullanmış olabilirler
            example:
                error_text: Bu örnekte öğrenci aynı değişken için 'at' ve 'isim' kelimelerini kullanmıştır.
                error_code: |-
                    at eşit sor Atının adı ne?
                    yazdır Demek, atınızın adı isim
                solution_text: Değişkenin kod boyunca aynı isme sahip olup olmadığını her zaman kontrol edin. Küçük farklılıkları fark etmek zor olabilir (örneğin çoğullar) ancak bunlar doğrudan koda etki edecektir.
                solution_code: |-
                    isim eşit sor Atının adı ne?
                    yazdır Demek, atınızın adı isim
    -   level: '3'
        sections:
        -   title: Öğrenciler bir listenin tamamını yazdırmaya çalışıyor olabilir
            example:
                error_text: Bir listenin tamamı yazdırılamaz. (şimdilik) yalnızca listeden bir öğeyi şuradan rastgele kullanarak yazdırabilirsiniz.
                error_code: |-
                    alışveriş eşit elma, süt, çikolata
                    yazdır alışveriş
                solution_text: Tüm yiyeceklerin bir listesini yazdırmak için, bunları bir `{print}` komutundan sonra tek tek koymanız yeterlidir. Aksi takdirde, listeyi `{at}` `{random}` ile kullanıp tek bir öğeyi yazdırmak için kullanabilirsiniz.
                solution_code: |-
                    yazdır elma, süt, çikolata

                    ya da

                    alışveriş eşit elma, süt, çikolata
                    yazdır alışveriş şuradan rastgele
        -   title: Öğrenciler bir değişkenin veya listenin adını normal metin gibi kullanıyor olabilir
            example:
                error_text: Bu sorun muhtemelen 2. seviyede de ortaya çıkmıştır. Şimdi listelerde de olabilir.
                error_code: |-
                    adım eşit Hedy
                    yazdır Merhaba, benim adım adım

                    ya da

                    hayvan eşit gergedan, arı, kuğu
                    yazdır En iyi hayvan ... hayvan şuradan rastgele
                solution_text: Yazdırmak için değişkenlerin veya listelerin adlarını normal metin içinde kullanmayın ya da onlara başka isimler verin. Seviye 4'te bu sorun tırnak işaretleri ile çözülecek.
                solution_code: |-
                    isim {is} Hedy
                    {print} Merhaba, benim adım isim

                    ya da

                    hayvanlar {is} gergedan, arı, kuğu
                    {print} En iyi hayvan ... hayvanlar {at} {random}
        -   title: Öğrenciler `{at}` `{random}` içinde `{at}` kullanmayı unutmuş olabilirler
            example:
                error_text: Örnekte olduğu gibi
                error_code: |-
                    kuşlar eşit serçe, martı, kızılgerdan
                    yazdır kuşlar rastgele
                solution_text: Bu sorun şuradan kelimesinin eklenmesiyle çözülür.
                solution_code: |-
                    kuşlar eşit serçe, martı, kızılgerdan
                    yazdır kuşlar şuradan rastgele
        -   title: Öğrenciler `{at}` `{random}` komutunu kullanırken de `{print}` komutunu kullanmayı unutmuş olabilirler
            example:
                error_text: Ya da bazen satırın başına `{at}` `{random}` koyarlar.
                error_code: |-
                    meyve eşit elma, kiraz, muz
                    meyve şuradan rastgele
                solution_text: Öğrencilerinize bir metni yazdırmak için her zaman bir yazdır kullanmaları gerektiğini vurgulayın.
                solution_code: |-
                    meyve {is} elma, kiraz, muz
                    {print} meyve {at} {random}
        -   title: Öğrenciler listelerinde virgül kullanmayı unutmuş olabilirler
            example:
                error_text: Bir listede öğeler virgülle ayrılır.
                error_code: |-
                    pizzalar {is} mantar ton balığı dört mevsim
                    {print} pizzalar {at} {random}
                solution_text: Listenizdeki her maddeden sonra bir virgül olmalıdır
                solution_code: |-
                    pizzalar eşit mantar, ton balığı, dört mevsim
                    yazdır pizzalar şuradan rastgele
        -   title: Öğrenciler liste olmadan `{at}` `{random}` kullanmaya çalışıyor olabilirler
            example:
                error_text: Örneğin
                error_code: |-
                    kulüpler {is} Manchester United
                    {print} kulüpler {at} {random}
                solution_text: Hedy rastgele bir şey yazdıramaz, çünkü seçim yapabileceği bir liste yoktur.
                solution_code: |-
                    kulüpler {is} Manchester United, Bayern Munchen, FC Barcelona
                    {print} kulüpler {at} {random}
        -   title: Öğrenciler liste olmadan ekle/kaldır yöntemini kullanmaya çalışıyor olabilirler
            example:
                error_text: Aşağıdaki örnekte 'isimler' bir liste değil, bir tekli değişkendir. İçine herhangi bir şey ekleyemezsiniz.
                error_code: |-
                    isimler {is} Jake
                    senin_ismin {is} {ask} Kimsin sen?
                    {add} senin_ismin {to} isimler
                    {print} isimler {at} {random}
                solution_text: Öncelikle elinizde bir liste olması gerekir, bu nedenle isimleri bir listeye dönüştürmek için ikinci bir isim eklemeniz gerekir, örneğin Amy. Amy'yi listenizde istemiyorsanız, daha sonra kaldırmak için kaldır kullanabilirsiniz.
                solution_code: |-
                    isimler {is} Jake, Amy
                    senin_ismin {is} {ask} Kimsin sen?
                    {add} senin_ismin {to} isimler
                    {print} isimler {at} {random}
        -   title: Öğrenciler ekle/kaldır işleminde şuraya/şuradan kullanmayı unuturlar
            example:
                error_text: şuraya/şuradan olmadan ekle/kaldır komutu çalışmayacaktır.
                error_code: |-
                    maceralar {is} hikaye, papağan, zar
                    seçim {is} En çok hangi macerayı seviyorsunuz?
                    {add} seçim
                    {remove} zar
                    {print} En çok sevdiğim maceralar {at} {random}
                solution_text: Hedy, öğenin hangi listeye ekleneceğini ve hangi listeden çıkarılacağını bilmelidir.
                solution_code: |-
                    maceralar eşit hikaye, papağan, zar
                    seçim eşit En çok hangi macerayı seviyorsunuz?
                    ekle seçim şuraya maceralar
                    kaldır zar şuradan maceralar
                    yazdır Benim sevdiğim adventures şurada rastgele
    -   level: '4'
        sections:
        -   title: Öğrenciler metnin her iki tarafında da tırnak işareti kullanmayı unutmuş olabilirler
            example:
                error_text: Bu seviyede yazdırmak ve sormak için artık bir çift tırnak işareti kullanmak gerekiyor. Biri metinden önce ve diğeri sonra.
                error_code: |-
                    yazdır Merhaba
                    ruh_hali eşit sor 'Nasılsın?
                solution_text: Doğru tırnak işaretlerini ekleyin.
                solution_code: |-
                    yazdır 'Hello'
                    ruh_hali eşit sor 'Nasılsın?'
        -   title: Öğrenciler yanlış tırnak işaretini kullanıyor
            example:
                error_text: Dersinize öğrencilerin tırnak işaretini doğru yazmayı bilip bilmediklerini kontrol ederek başlamanız önemlidir. Aksi takdirde "çift tırnak" veya `ters tırnak` kullanabilirler.
                error_code: |-
                    yazdır `Restorana hoş geldiniz`
                    yemek eşit sor "Ne sipariş etmek istersiniz?"
                solution_text: 'Doğrusu aşağıdaki gibi ''tek tırnak'' işaretleridir:'
                solution_code: |-
                    yazdır 'Restorana hoş geldiniz'
                    yemek eşit sor 'Ne sipariş etmek istersiniz?'
        -   title: Öğrenciler metinlerinde kesme işareti kullanmış olabilirler
            example:
                error_text: Bu seviyeden itibaren, kesme işaretlerine izin verilmez çünkü bunlarda tek tırnak işareti kullanırlar. İngilizce you're veya don't, Türkçe'de Ali'nin veya TC'de gibi ifadelerde kullanılırlar.
                error_code: yazdır 'Hedy'de böyle yazmaya izniniz yok.'
                solution_text: Yanlış dilbilgisini kullanmayı seçebilir ve kesme işaretini atlayabilirsiniz. Ya da kesme işareti olarak ters tırnak ` kullanabilirsiniz.
                solution_code: |-
                    yazdır 'Hedy de böyle yazmana izin var.'
                    yazdır 'Hedy`de böyle de yazabilirsin'
    -   level: '5'
        sections:
        -   title: Öğrenciler bir `{if}` komutunda `{print}` kullanmayı unutmuş olabilirler
            example:
                error_text: Öğrenciler `{if}` veya `{else}` komutlarını kullandıktan sonra `{print}` veya `{ask}` gibi ikinci bir komut kullanmayı unutabilirler.
                error_code: |-
                    eğer isim eşit Hedy 'Harika!'
                    değilse 'Hedy daha iyi!'
                solution_text: Düzeltmek için yazdır komutunu ekleyin.
                solution_code: |-
                    eğer isim eşit Hedy yazdır 'Harika!'
                    değilse yazdır 'Hedy daha iyi!'
        -   title: Öğrenciler aynı değişken için iki farklı isim kullanmış olabilir
            example:
                error_text: Bu örnekte öğrenci aynı değişkenler için 'at' ve 'isim' kelimelerini kullanmıştır.
                error_code: |-
                    at eşit sor 'Atının adı ne?'
                    eğer isim eşit 'Şenlik Ateşi' yazdır 'havalı'
                    değilse yazdır 'az havalı!'
                solution_text: Değişkenin kod boyunca aynı ada sahip olup olmadığını her zaman kontrol edin. Küçük farklılıkları fark etmek zor olabilir (örneğin çoğullar) ancak bunlar kodu doğrudan etkileyecektir.
                solution_code: |-
                    at eşit sor 'Atının adı ne?'
                    eğer at eşit 'Şenlik Ateşi' yazdır 'havalı'
                    değilse yazdır 'az havalı!'
        -   title: Öğrenciler hala her iki taraftaki tırnakları unutuyor olabilir
            example:
                error_text: '`eğer` komutunu kullanan kodlar çok uzun olabilir ve öğrenciler tırnak işaretlerini kullanmayı unutabilirler.'
                error_code: |-
                    eğer isim eşit Hedy yazdır eğlenceli
                    değilse yazdır 'eh işte!
                solution_text: yazdır komutunda her zaman 2 tırnak işareti kullanın.
                solution_code: |-
                    eğer isim eşit Hedy yazdır 'eğlenceli'
                    değilse yazdır 'eh işte!'
        -   title: Öğrenciler değişken isimlerinin etrafında tırnak işareti kullanıyor olabilir
            example:
                error_text: Bu seviyede değişken isimlerinin etrafında tırnak işareti yoktur.
                error_code: |-
                    eğer 'isim' eşit 'Hedy' yazdır 'eğlenceli'
                    değilse yazdır 'eh işte!'
                solution_text: Kodun çalışması için tırnak işaretlerini kaldırın.
                solution_code: |-
                    eğer isim eşit Hedy yazdır 'eğlenceli'
                    değilse yazdır 'eh işte!
        -   title: Öğrenciler iki sözcük içeren uzun değişken adları kullanmaya çalışabilirler
            example:
                error_text: Bir değişken tek bir kelime ile adlandırılmalıdır. İki kelimeyi bağlamak için aralarına alt çizgi koyabilirsiniz. Bu şekilde bir kelime olarak sayılır.
                error_code: seçilen kapı eşit sor 'Hangi kapıyı seçiyorsun?'
                solution_text: Bir alt çizgi ekleyin.
                solution_code: seçilen_kapı eşit sor 'Hangi kapıyı seçiyorsun?'
        -   title: Öğrenciler birden fazla cevabın doğru olmasını isteyebilir
            example:
                error_text: Örneğin bu Hedy isimli öğrenci tüm kendi arkadaşlarına komik olduklarını söylerken, diğer sınıf arkadaşlarına komik olmadıklarını söyleyecektir.
                error_code: eğer isim Jesse, David, Souf yazdır 'Komiksin' değilse yazdır 'Komik değilsin'
                solution_text: |-
                    Bunun için `içinde` komutunu kullanabilirsiniz. Bu daha ileriki bir seviyede açıklanmıştır, ancak 5. seviyede de çalışmaktadır.
                    Başka bir çözüm de birden fazla eğer komutu kullanmak ve değilse komutunu kullanmamaktır. Ama bunun kötü yanı, diğer sınıf arkadaşlarına komik olmadıklarını söyleyemeyecek olmasıdır.
                solution_code: |-
                    arkadaşlar eşit Jesse, David, Souf
                    isim eşit sor 'Kimsin sen?'
                    eğer isim içinde arkadaşlar yazdır 'Çok komiksin.'
                    değilse yazdır 'Hiç komik değilsin.'

                    ya da

                    isim eşit sor 'Kimsin sen?'
                    eğer isim eşit Jesse yazdır 'Çok komiksin.'
                    eğer isim eşit David yazdır 'Çok komiksin.'
                    eğer isim eşit Souf yazdır 'Çok komiksin.'
        -   title: Öğrenciler değişken adını `{if}` ifadesindeki değerle aynı yapmış olabilirler
            example:
                error_text: Aşağıdaki örnekte parola 'parola'dır. Bu, her zaman karşılaştırmanın doğru olmasıyla sonuçlanacaktır.
                error_code: |-
                    parola eşit sor 'Parola nedir?'
                    eğer parola eşit parola yazdır 'Erişim izni verildi'
                    değilse yazdır 'Erişim reddedildi!'
                solution_text: Değişkeniniz için farklı bir ad seçin.
                solution_code: |-
                    gizli_parola eşit sor 'Parola nedir'
                    eğer gizli_parola eşit parola yazdır 'Erişim izni verildi!'
                    değilse yazdır 'Erişim reddedildi!'
    -   level: '6'
        sections:
        -   title: Öğrenciler tırnak işaretleriyle mücadele etmeye devam ediyor
            example:
                error_text: Bazı öğrenciler tırnak işareti ekleyip eklememekte zorlanırlar. Tırnak işareti eklerseniz, çıktı ekranı tam anlamıyla '5+5' gösterecektir.
                error_code: yazdır '5 + 5'
                solution_text: Bu kodda ise, çıktı ekranı '10' yazdıracaktır.
                solution_code: yazdır 5 + 5
        -   title: Öğrenciler bir değişkenle matematik yapma kavramını anlamakta zorlanıyor olabilir
            example:
                error_text: 'Bazı öğrenciler değişkenlerle matematik yapmakta zorlanacaktır. Onlara çok basit örnekler göstermeye çalışın:'
                error_code: |-
                    yaş = sor 'Kaç yaşındasın?'
                    yazdır 'Gelecek sene yaşın şu olacak: ' yaş + 1
                solution_text: Ya da şu şekilde bir adım daha ileri gidin.
                solution_code: |-
                    ücret = 0
                    yazdır 'Burger restoranımıza hoş geldiniz'
                    burger = sor 'Burger ister misin?'
                    eğer burger = yes ücret = ücret + 10
                    içecek = sor 'İçecek bir şey ister misin?'
                    eğer içecek = evet ücret = ücret + 4
                    yazdır 'Borcunuz ' ücret ' lira, lütfen'
    -   level: '7'
        sections:
        -   title: Öğrenciler tekrarla komutunun bir kelimesini veya yazdır komutunu kullanmayı unutabilirler
            example:
                error_text: Öğrencilerin hem tekrarla komutunun tamamını hem de yazdır komutunu kullanmayı bildiklerinden emin olun.
                error_code: |-
                    tekrarla 3 kere 'Çünkü o çok iyi bir adam'
                    tekrarla 3 yazdır 'Bunu kimse inkar edemez!'
                solution_text: 'Doğru olan bu kod:'
                solution_code: |-
                    tekrarla 3 kere yazdır 'Çünkü o çok iyi bir adam'
                    tekrarla 3 kere yazdır 'Bunu kimse inkar edemez!'
        -   title: Öğrenciler birden fazla satırı tekrar etmeye çalışır
            example:
                error_text: Bu seviyede henüz sadece bir kod satırını birden fazla kez tekrarlayabilirsiniz. Bu kodda öğrenci 3 farklı içecek yazdırmak istemiştir, ancak bu işe yaramayacaktır. Soruyu 3 kez soracak ama sadece son cevabı yazdıracaktır.
                error_code: |-
                    tekrarla 3 kere içecek = sor 'Ne içmek istersiniz?'
                    yazdır içecek
                solution_text: Birden fazla satırı tekrarlayabilmek için bir sonraki seviyeye geçmelisiniz. Yani bu seviyede için her şeyi ayrı yazdırmanız gerekecek.
                solution_code: |-
                    içecek = sor 'Ne içmek istersiniz?'
                    yazdır içecek
                    içecek = sor 'Ne içmek istersiniz?'
                    yazdır içecek
                    içecek = sor 'Ne içmek istersiniz?'
                    yazdır içecek
        -   title: Öğrenciler çalışması çok uzun süren programlar yazabilirler
            example:
                error_text: Bu seviyede uzun kodlar yapmak çok kolaydır. Ancak öğrencilerin yüklenmesi çok uzun süren programlar yapmalarına izin verilmez (sunucularımızı korumak için).
                error_code: tekrarla 100 kere yazdır 'Bunu kaç kez tekrarlayabilirim?'
                solution_text: Kodların çok uzun olmadığından emin olun
                solution_code: tekrarla 20 kere yazdır 'Bu kadar yeterli olur'
    -   level: '8'
        sections:
        -   title: Öğrenciler girintiyi yanlış kullanabilirler
            example:
                error_text: Girintileme, bu seviyede gelen yeni bir kavramdır ve bazı öğrenciler için kullanımını anlamak zordur. Bununla bütün bir program yapmadan önce bazı basit kodları uyguladıklarından emin olun.
                error_code: |-
                    tekrarla 3 kere
                    yazdır 'hello'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    tekrarla 3 kere
                        yazdır 'Merhaba'
        -   title: Öğrenciler birden fazla satırı tekrar etmek istiyorlar ama sadece 1 satırı tekrar etmiş olabilirler
            example:
                error_text: Örneğin, aşağıdaki kodda öğrenci 3 kişinin içecek siparişini almak istemiştir. Ancak bunun yerine program 3 kez soru sordu, ama yalnızca bir siparişi yazdı.
                error_code: |-
                    tekrarla 3 kere
                        içecek = sor 'Ne içmek istersiniz?'
                    yazdır içecek
                solution_text: |-
                    Doğru kod için, üçüncü satır bir girinti ile başlar. Bu şekilde tekrarla bloğuna ait olur ve böylece 3 kez tekrarlanır.
                    Öğrencilerinize bu farklılıkları göstermek, programlarımızın çalışması için neden girintiye ihtiyaç duyduğumuzu anlamalarına yardımcı olabilir.
                solution_code: |-
                    tekrarla 3 kere
                        içecek = sor 'Ne içmek istersiniz?'
                        yazdır içecek
        -   title: Öğrenciler `{if}` deyimlerini iç içe yerleştirmek veya `{if}` deyimlerini bir döngünün içine koymak isteyebilirler
            example:
                error_text: |-
                    Bu seviyede henüz öğrencilerin `{if}` ifadelerini diğer `{if}` ifadelerinin içine veya tekrarla döngülerinin içine koymalarına henüz izin verilmemektedir.
                    Bir sonraki seviyede buna izin verilecektir.
                error_code: |-
                    doğum_günü = sor 'Bugün doğum günün mü?'
                    eğer doğum_günü = evet
                        tekrarla 3 kere
                            yazdır 'Yaşasın!'
                solution_text: 'Bu seviye için doğru kod şudur:'
                solution_code: |-
                    doğum_günü = sor 'Bugün doğum günün mü?'
                    eğer doğum_günü = evet
                        yazdır 'Yaşasın'
                        yazdır 'Yaşasın'
                        yazdır 'Yaşasın'
        -   title: Öğrenciler çalışması çok uzun süren programlar yaparlar
            example:
                error_text: Bu seviyede uzun kodlar yapmak çok kolaydır. Ancak öğrencilerin yüklenmesi çok uzun süren programlar yapmalarına izin verilmez (sunucularımızı korumak için).
                error_code: |-
                    tekrarla 100 kere
                        yazdır 'Bunu kaç kez tekrarlayabilirim?'
                solution_text: Kodların çok uzun olmadığından emin olun
                solution_code: |-
                    tekrarla 20 kere
                        yazdır 'Bu kadarı yeterli olur'
        -   title: Öğrenciler, değişken değerinin değişken adıyla aynı olup olmadığını kontrol etmek için `{if}` komutunu kullanır
            example:
                error_text: |-
                    Bu hatayı bazı öğrencilerimizde gördük. Bilgisayarları için bir şifre oluşturuyorlar, ancak şifreyi 'parola' yapıyorlar.
                    2. satırda bilgisayardan değişken ismi olan parola'nın değişken değeri olan parola ile aynı olup olmadığını kontrol etmesi istenir. Bu da cevabın her zaman evet olduğu anlamına gelir.
                    Yani bu kodla, oyuncu ne doldurursa doldursun cevap her zaman 'İçeri girebilirsiniz' olacaktır.
                error_code: |-
                    parola eşit sor 'Parola nedir?'
                    eğer parola eşit parola
                        yazdır 'İçeri gelebilirsin'
                    değilse
                        yazdır 'Giriş iznin yok'
                solution_text: Tırnak işareti ekleyerek bu hatayı düzeltebilirsiniz. Bu şekilde bilgisayar `{if} parola {is} 'parola'` içindeki ikinci parolanın değişken adı değil bir dize değeri (yani normal metin) olduğunu bilir.
                solution_code: |-
                    parola eşit sor 'Parola ne?'
                    eğer parola eşit 'parola'
                        yazdır 'İçeri gelebilirsin'
                    değilse
                        yazdır 'Giriş iznin yok'
    -   level: '9'
        sections:
        -   title: Öğrenciler girintilemede hata yapıyor
            example:
                error_text: Bu seviyenin en zor kısmı girintileri doğru yapmaktır. Öğrenciler `{if}` deyimlerini iç içe geçirmeye bayılırlar, hatta bazen iç içe geçmiş başka `{if}` deyimlerinin içinde bile. Bu durumda girintilemeyi takip etmek oldukça zor olabilir.
                error_code: |-
                    yazdır 'Robin şehir merkezinde yürüyor.'
                    konum = sor 'Robin bir dükkana mı giriyor, yoksa eve mi gidiyor?'
                    eğer konum eşit dükkan
                        yazdır 'Dükkana giriyor.'
                        yazdır 'Robin ilginç görünümlü bir kitap görür'
                        kitap = sor 'Robin kitabı satın alıyor mu?'
                            eğer kitap eşit evet
                    yazdır 'Robin kitabı satın alır ve eve gider.'
                    değilse
                        yazdır 'Robin dükkandan çıkar ve eve gider.'
                    değilse
                        yazdır 'Robin eve gider'
                solution_text: Doğru olan kod budur. Diğer `{if}` deyimlerinin içine `{if}` deyimlerini koyarken tüm farklı yapıları takip etmeye çalışın.
                solution_code: |-
                    yazdır 'Robin şehir merkezinde yürüyor.'
                    konum = sor 'Robin bir dükkana mı giriyor, yoksa eve mi gidiyor?'
                    eğer konum eşit dükkan
                        yazdır 'Dükkana giriyor.'
                        yazdır 'Robin ilginç görünümlü bir kitap görür'
                        kitap = sor 'Robin kitabı satın alıyor mu?'
                        eğer kitap eşit evet
                            yazdır 'Robin kitabı satın alır ve eve gider.'
                        değilse
                            yazdır 'Robin dükkandan çıkar ve eve gider.'
                    değilse
                        yazdır 'Robin eve gider'
    -   level: '10'
        sections:
        -   title: Öğrenciler için komutunu doğru kullanmıyor olabilirler
            example:
                error_text: Öğrencilerin listedeki öğeler yerine listeyi (hayvanlar örneğinde olduğu gibi) yazdırmaya çalıştıklarını sık görüyoruz.
                error_code: |-
                    hayvanlar eşit köpek, kedi, balık
                    için hayvan içinde hayvanlar
                      yazdır 'Benim sevdiğim ' hayvanlar
                solution_text: Son satırdaki hayvanlar kelimesi hayvan olarak değiştirilmelidir.
                solution_code: |-
                    hayvanlar eşit köpek, kedi, balık
                    için hayvan içinde hayvanlar
                      yazdır 'Benim sevdiğim ' hayvan
        -   title: Öğrenciler girintiyi unutuyor olabilirler
            example:
                error_text: Öğrenciler için komutundan sonra girinti kullanmayı unutma eğilimindedir.
                error_code: |-
                    hayvanlar eşit köpek, kedi, balık
                    için hayvan içinde hayvanlar
                    yazdır 'Benim sevdiğim ' hayvan
                solution_text: Bir için komutundan sonra girinti kullanmalısınız.
                solution_code: |-
                    hayvanlar eşit köpek, kedi, balık
                    için hayvan içinde hayvanlar
                      yazdır 'Benim sevdiğim ' hayvan
    -   level: '11'
        sections:
        -   title: Öğrenciler girinti kullanmayı unutuyorlar
            example:
                error_text: Öğrencilerin girinti kullandıklarından emin olun.
                error_code: |-
                    için i içinde aralık 1 şuraya 5
                    yazdır i
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    için i içinde aralık 1 şuraya 5
                        yazdır i
        -   title: Öğrenciler "i" nin ne olduğunu anlamamış olabilir
            example:
                error_text: |-
                    Bazı öğrenciler i'nin bir değişken olduğunu anlamıyor. Python programlamada sık kullanıldığı için "i" seçilmiştir, ancak farklı bir değişken adı da kullanabilirsiniz.
                    Örneğin, bu kod:
                error_code: |-
                    için i içinde aralık 1 şuraya 5
                        yazdır i
                solution_text: Bu kod aşağıdaki ile de değiştirilebilir. Aynı şekilde çalışır.
                solution_code: |-
                    için muzlu_süt içinde aralık 1 şuraya 5
                        yazdır muzlu_süt
    -   level: '12'
        sections:
        -   title: Öğrenciler tırnak işaretlerini unutmuş olabilirler
            example:
                error_text: Öğrenciler artık önceki seviyelere göre daha fazla tırnak işaretine ihtiyaç duymaktadır. Bu örnekte tırnak işaretleri listede ve `{if}` komutunda unutulmuştur.
                error_code: |-
                    süper_kahramanlar = Spiderman, Batman, Iron Man
                    süper_kahraman = süper_kahramanlar {at} {random}
                    {if} süper_kahraman = Batman
                        {print} 'BEN... BATMAN!'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    süper_kahramanlar = 'Spiderman', 'Batman', 'Iron Man'
                    süper_kahraman = süper_kahramanlar {at} {random}
                    {if} süper_kahraman = 'Batman'
                        {print} 'BEN... BATMAN!'
        -   title: Öğrenciler hesaplamalarda kullanmak istedikleri sayılar için tırnak işareti kullanmış olabilirler
            example:
                error_text: |-
                    Sayılar üzerinde tırnak işareti kullanabilirsiniz, ancak yalnızca bilgisayarın bunları metin olarak düşünmesini istiyorsanız. Bunu yaparsanız, sayı ile hesaplama yapamayacağınız anlamına gelir.
                    Aşağıdaki örnekte, 25 sayısı ile matematik yapamazsınız, çünkü tırnak işareti içindedir.
                error_code: |-
                    puan = '25'
                    cevap eşit sor 'Bir puan mı istiyorsun?'
                    eğer cevap eşit 'evet'
                        puan = puan + 1
                        yazdır puan
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    puan = 25
                    cevap eşit sor 'Bir puan mı istiyorsun?'
                    eğer cevap eşit 'evet'
                        puan = puan + 1
                        yazdır puan
        -   title: Öğrenciler ondalık sayılarda nokta yerine virgül kullanmış olabilir
            example:
                error_text: Bu seviyeden itibaren ondalık sayılar kullanılabilir, ancak bunlarda virgül kullanamazsınız. Ondalıkları ayırmak için nokta gerekiyor.
                error_code: yazdır 2,5 + 2,5
                solution_text: 'Doğru olan kod:'
                solution_code: yazdır 2.5 + 2.5
    -   level: '13'
        sections:
        -   title: Öğrenciler `ve` ile `veya`yı karıştırıyor
            example:
                error_text: Her iki komut da benzer görünebilir, ancak işlevleri çok farklıdır.
                error_code: |-
                    oyun eşit sor 'Oyun oynamak ister misin?'
                    zaman eşit sor 'Oynayacak vaktin var mı?'
                    eğer oyun eşit 'evet' veya zaman eşit 'evet'
                        yazdır 'Hadi oynayalım!'
                solution_text: Bu durumda, aslında oyun oynayabilmesi için kişinin her iki soruya da evet yanıtı vermesi gerekir, bu nedenle `ve` kullanmalısınız.
                solution_code: |-
                    oyun eşit sor 'Oyun oynamak ister misin?'
                    zaman eşit sor 'Oynayacak vaktin var mı?'
                    eğer oyun eşit 'evet' ve zaman eşit 'evet'
                        yazdır 'Hadi oynayalım!'
    -   level: '14'
        sections:
        -   title: Öğrenciler < ve > işaretlerini karıştırabilir
            example:
                error_text: 'Öğrenciler genellikle bu işaretlere matematik dersinden aşinadır. Ancak öğrencileriniz bu işaretleri henüz bilmiyorsa, bununla ilgili bir zorluk yaşayabilirler. (Buna yardımcı olmak için "büyük" ve "küçük" kelimelerinin ilk harflerinin yazımından dik çizgiyi kaldırmayı gösterebilirsiniz: "b" için ">" ve "k" için "<").'
                error_code: |-
                    yaş = sor 'Kaç yaşındasın?'
                    eğer yaş < 12
                        yazdır 'Sen benden daha yaşlısın!'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    yaş = sor 'Kaç yaşındasın?'
                    eğer yaş > 12
                        yazdır 'Sen benden daha yaşlısın!'
        -   title: Öğrenciler `!=`, `<=` ve `>=` için yanlış işaretler kullanabilir
            example:
                error_text: Bu işaretler muhtemelen çoğu öğrenci için yenidir. Bu işaretleri öğrencilerinize açıkladığınızdan emin olun.
                error_code: |-
                    isim = sor 'Adın ne?'
                    eğer isim =< 'Hedy'
                        yazdır 'Sen Hedy değilsin.'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    isim = sor 'Adın ne?'
                    eğer isim != 'Hedy'
                        yazdır 'Sen Hedy değilsin.'
        -   title: Öğrenciler == işaretini kullanmayı unutabilirler
            example:
                error_text: Bu seviyede, öğrencilerin "=" veya "eşit" kullanmalarına hala izin verilmektedir. Ancak diğer seviyelerde veya python'da bunun için başları belaya girebilir. Bu yüzden onları bunu kullanmaları için eğitmek en iyisidir. "=" değer atamak için, "==" ise değer karşılaştırmak içindir.
                error_code: |-
                    isim = sor 'Adın ne?'
                    eğer isim = 'Hedy'
                        yazdır 'Çok havalısın!'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    isim = sor 'Adın ne?'
                    eğer isim == 'Hedy'
                        yazdır 'Çok havalısın!'
    -   level: '15'
        sections:
        -   title: Öğrenciler iken döngüsünde girintilemeyi unutabilir
            example:
                error_text: Girinti yapmak öğrenciler için genellikle zordur.
                error_code: |-
                    cevap = 0
                    iken cevap != 25
                    cevap = sor '5 kere 5 kaç eder?'
                    yazdır 'Doğru bir cevap verilmiştir'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    cevap = 0
                    iken cevap != 25
                        cevap = sor '5 kere 5 kaç eder?'
                    yazdır 'Doğru bir cevap verilmiştir'
    -   level: '16'
        sections:
        -   title: Öğrenciler parantezleri unutur
            example:
                error_text: Bu seviyeden itibaren listeler köşeli parantez içinde olmalıdır.
                error_code: |-
                    dondurma = 'çilek', 'çikolata'
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    dondurma = ['çilek', 'çikolata']
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
        -   title: Öğrenciler yanlış parantezleri kullanır
            example:
                error_text: Bu seviyeden itibaren listeler köşeli parantez içinde olmalıdır.
                error_code: |-
                    dondurma = ('çilek', 'çikolata'}
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    dondurma = ['çilek', 'çikolata']
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
        -   title: Öğrenciler parantezlere odaklanırken tırnak işaretlerini unuturlar
            example:
                error_text: Öğrenciler bazen sözdiziminin yeni yönüne o kadar odaklanırlar ki tırnak işaretlerini unuturlar.
                error_code: |-
                    dondurma = [çilek, çikolata]
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    dondurma = ['çilek', 'çikolata']
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
        -   title: Öğrenciler hala eski rastgele komutunu kullanmaya çalışıyor
            example:
                error_text: Öğrenciler bazen yeni gelen değişiklikleri anlamamış olabilirler. Listeden bir öğe almak için artık "şuradan rastgele" komutu kullanılamaz.
                error_code: |-
                    dondurma = ['çilek', 'çikolata']
                    yazdır 'En sevdiğim ' dondurma şuradan rastgele ' tadında dondurma'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    dondurma = ['çilek', 'çikolata']
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
        -   title: Öğrenciler parantezlere odaklanırken tırnak işaretlerini unuturlar
            example:
                error_text: Öğrenciler bazen sözdiziminin yeni yönüne o kadar odaklanırlar ki tırnak işaretlerini unuturlar.
                error_code: |-
                    dondurma = [çilek, çikolata]
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    dondurma = ['çilek', 'çikolata']
                    yazdır 'En sevdiğim ' dondurma[rastgele] ' tadında dondurma'
    -   level: '17'
        sections:
        -   title: Öğrenciler `{elif}` ifadesini `{else}` gibi kullanmaya çalışabilirler; yanına bir koşul yazmadan
            example:
                error_text: '`{elif}` komutunun arkasında bir koşul olması gerekir. Bir koşul olmadan `{else}` gibi kullanılamaz.'
                error_code: |-
                    renk = sor 'En sevdiğin renk hangisi?'
                    {if} renk == 'yeşil':
                        {print} 'yeşil güzeldir'
                    {elif}:
                        {print} 'Ben yeşili seviyorum.'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    renk = sor 'En sevdiğin renk hangisi?'
                    {if} renk == 'yeşil':
                        {print} 'yeşil güzeldir'
                    {elif} renk == 'sarı':
                        {print} 'sarı iyidir'
                    {else}:
                        {print} 'Ben yeşili seviyorum.'
        -   title: Öğrenciler iki nokta üst üste işaretini unutuyor
            example:
                error_text: Bu seviyeden itibaren, girinti gerektiren her komuttan sonra iki nokta üst üste kullanılmalıdır.
                error_code: |-
                    cevap = sor 'Nasılsın?'
                    {if} cevap {is} 'harika'
                        {print} 'Ben de!'
                    {elif} cevap {is} 'kötü'
                        {print} 'Dur seni neşelendireyim'
                    {else}
                        {print} 'Harikayım!'
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    cevap = sor 'Nasılsın?'
                    {if} cevap {is} 'harika':
                        {print} 'Ben de!'
                    {elif} cevap {is} 'kötü':
                        {print} 'Dur seni neşelendireyim'
                    {else}:
                        {print} 'Harikayım!'
    -   level: '18'
        sections:
        -   title: Öğrenciler parantezleri kullanmayı unutuyorlar
            example:
                error_text: Öğrenciler metinlerinin etrafına parantez koymayı unutabilirler. Bu seviyede bir çok komutta artık parantez kullanılmalıdır.
                error_code: yazdır 'Benim adım Hedy!'
                solution_text: 'Doğru olan kod:'
                solution_code: yazdır('Benim adım Hedy!')
        -   title: Öğrenciler yine de sor komutunu kullanmaya çalışıyorlar
            example:
                error_text: sor komutu 1. seviyeden beri kullanılıyordu. Bu yüzden öğrenciler için sor yerine girdi komutuna geçmek zor olabilir.
                error_code: |-
                    yazdır('Benim adım Hedy!')
                    isim = sor('Adın ne?')
                    yazdır('Demek senin adın ', isim)
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    yazdır('Benim adım Hedy!')
                    isim = girdi('Adın ne?')
                    yazdır('Demek senin adın ', isim)
        -   title: Öğrenciler parantezleri tırnak işareti gibi kullanmaya çalışıyor olabilir
            example:
                error_text: Değişkenleri tırnak işaretlerinin dışında tutmayı öğrendikleri için aynı şeyi parantezler için de yapabilirler. Ama bu parantezleri kullanmanın doğru yolu değildir. Tek bir parantezin için değişkenleri ve metinleri virgülle ayırmak gerekiyor.
                error_code: |-
                    sıcaklık = 25
                    yazdır('Şu anda have dışarıda ') sıcaklık (' derece')
                solution_text: 'Doğru olan kod:'
                solution_code: |-
                    sıcaklık = 25
                    yazdır('Şu anda hava dışarıda ', sıcaklık, ' derece')
