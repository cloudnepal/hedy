sections:
-   subsections:
    -   title: Hva er Hedy?
        text: "Hedy er et tekstlig programmeringsspråk, spesifikt utviklet for barn og ungdom i alderen 10 til 15 år.\nI motsetning til programmeringsspråk laget for barn, som eks. Scratch, så bruker Hedy tekst istedenfor kode-blokker.\nMed Hedy lærer du å skrive kode slik som ekte programmerere gjør, men i små steg med kjekke og morsomme øvelser.\nPå denne måten kan Hedy fungere som et springbrett til ekte programmeringsspråk som Python på en tilgjenglig og morro måte,\nDu kan se en [video](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) om utviklingen av Hedy som et programmeringsspråk her.\n"
    -   title: Målgruppe
        text: "Hedy er utviklet for barne- og ungdomskole elever i alderen 10 til 15 år.\nDet er viktig at elevene er flink til å lese før de begynner med Hedy. Vi anbefaler å vente med å begynne med Hedy til elevene har oppnådd leseferdigheter tilsvarende et minimumsnivå av tredje klasse.\nElever (og lærerere!) trenger ikke tidligere erfaring med programmering for å starte med Hedy.\n"
    -   title: Hvordan fungerer Hedy?
        text: "<Todo>\n"
    -   title: Å undervise med Hedy
        text: "Hedy er delt opp i nivåer hvor man lærer seg nye kommandoer og regler. Hvert nivå inneholder et varierende sett med øvelser før å øve på de nylig lærte kommandoene.\nØvelsene kan gjøres av elevene på egenhånd, eller som del av klassisk undervisning. I bruksanvisningen for lærerer vil det finnes undervisningplan for hvert av nivåene.\nUndervisningsplanene og øvelsene har steg for steg forklaringer for å sikre at lærere med mindre digital erfaring også klarer å bruke Hedy!\nHedy støtter også kreative lærere som foretrekker å lage sine egne undervisningsplaner og øvelser!\n"
    -   title: Enheter
        text: "Hedy er webbasert. Dette betyr at Hedy fungerer på enhver digital enhet som har en nettleser (Google Chrome, Firefox, Edge, osv.). Hedy fungerer på laptoper, chromebooks, nettbrett og til og med smarttelefoner!\nMan trenger ikke å laste ned noe for å bruke Hedy, bare gå til nettsiden og sett i gang!\n"
    title: Introduksjon
    key: intro
-   title: Forberedelser
    key: forberedelser
    subsections:
    -   title: Sett ditt foretrukke språk
        text: "Når elevene lager en profil må de velge et 'foretrukke språk'. Hedy vil alltid lastet på det valgte språket.\nDet foretrukke språket kan alltids endres senere ved å gå til 'Min profil' og velge 'Mine personlige innstillinger'.\nFra desember 2021 er det obligatorisk å sette et foretrukket språk for hver Hedy konto.\nFor kontoer opprettet tidligere enn desember 2021 vil man få en melding om at foretrukket språk mangler.\nDette er ikke noe problem, bare gå til 'Min profil' og velg et språk i 'Mine personlige innstillinger'.\nFrem til du velger et språk vil Hedy vises i språket som er valgt i nettleserinnstillingene. Hvis det språket ikke støttes velges automatisk engelsk.\n"
    -   title: Lagring av programmer
        text: "Nå når du er logget inn vil du se den blå menylinjen med 'Mine programmer' og din profil.\nDisse knappene vil også vises til elevene dine også. I 'Mine programmer' vil du finne all koden som lagres.\n\nDu kan lagre prosjektene dine ved å gi prosjektet et navn i den hvite linjen, for så å lagre ved å trykke på den grønne 'Lagre Kode' knappen\n\nLa programmeringsmorroen begynne!\n"
    -   title: Setting preferred language
        text: "When students create profile they are supposed to choose a 'preferred language'. Hedy will always be loaded in this selected language.\nChanging this language can always be done later on by navigation to 'My account' and 'My personal settings' again.\nFrom December 2021 on setting a preferred language is obligatory for each Hedy account.\nWhen your account or the accounts of your students have being created earlier than this date you will receive a message that a preferred language is missing.\nDon't worry! Navigate to 'My profile' and set a language in your profile settings.\nUntil you set a language Hedy will be shown in your browser language and, when this language is not supported, in English.\n\n**For non-English speakers**\nNot only can you change the language of the adventures to your own language. You can also choose which language the keywords (for example 'print' or 'ask') should be in.\nThis way you can teach your students to code with English keywords, but you can also let them program in their own laguage. For example Dutch students can use the command 'vraag' instead of 'ask'.\n"
    -   title: Storing programs
        text: "Because you are now logged in, you'll see the blue banner with My profile and My programs.\nThese tabs exist for your students too. In My programs you can find all the codes that you've saved.\n\nYou can save your projects easily by giving your project a name in the white bar and pressing the green button Save Code.\nYou (and your students) can also share programs. These programs will be posted on our explore page, for everybody to see and use.\nIf you want to unshare your program, go to 'My programs' and click 'Unshare'.\n"
-   key: undervise
    title: Å undervise med Hedy
    subsections:
    -   title: Undervise med Hedy
        text: "Hedy inneholder flere nivåer som hver for seg vil lære elevene en ny ferdighet. Vi anbefaler å undervise i et nivå per undervisningstime.\nDette gir elevene dine tid til å virkelig lære seg en ny kommando eller et nytt konsept, samt at de får tid til å øve skikkelig før de går videre til neste nivå.\nVi bruker denne strukturen i våre undervisningstimer:\n"
    -   title: Introduksjon
        text: "Du kan begynne undervisningen med å aktivere elevenes tidligere kunnskap: Hva har de lært sålangt, hva lærte de forrige gang og hvilke feil gjorde de som de nå har lært av?\nPå denne måten vil alle tidligere lærte kommandoer og vanlige feil være lett tilgjengelig i elevenes hukommelse når du begynner å introdusere det nye læringsmålet.\n"
    -   title: Introduksjon av nye konsepter og kommandoer
        text: "Det kan være veldig vanskelig for noen elever å forstå nye konsepter og kommandoer.\nDerfor er det svært viktig å gi gode eksempler på hvordan de nye kommandoene skal brukes.\nSpesielt i de innledende nivåene, når elevene ikke har erfaring med programmering i det hele tatt, kan det være vanskelig for elevene å forstå de nye abstrakte konseptene.\nÅ vise mange eksempler vil hjelpe med å gjøre et abstrakt konsept mer gjennkjennelig og lettere å forstå.\nEksempelvis: 'Hva er en variabel?', 'Se, variabelen kjæledyr endret seg til å være hund'.\n"
    -   title: La oss komme i gang
        text: "Hvert nivå inneholder forskjellige eventyr som du kan finne i de rosa fanene. Den første rosa fanen forklarer de nye kommandoene som introduseres i dette nivået.\nDe neste fanene er eventyr som elevene kan bryne seg på og gjøre til sine egne prosjekter.\nEventyrene er sortert fra lettest til vanskeligst. Vi anbefaler derfor å begynne til venstre, og jobbe deg mot høyre.\nDen siste fanen 'Hva skjer neste gang' gir en liten forsmak på hva du skal lære om i neste nivå. Du kan selvfølgelig velge hvilke eventyr du ønsker at elevene skal gjøre for hvert nivå.\nDe trenger ikke alltid å gjøre alle eventyrene. Hvert eventyr inneholder eksempelkode som studenene kan prøve med den grønne knappen.\nEksempelkoden blir kopiert til kodefeltet slik at elevene kan prøve koden, samt eksperimentere ved å gjøre endringer i koden.\nStimuler elevene dine til å gjøre eksempelkoden til deres egne prosjekter ved å legge til sine idéer og lage sine egne variasjoner av eventyrene.\n"
    -   title: Quiz
        text: "For å teste at elevene dine har plukket opp all ny informasjon i nivået kan du la dem ta en quiz.\nQuizen inneholder 10 flervalgsspørsmål om det nye konseptet og kommandoene i det nivået.\nDet er ikke alle nivåer som har en quiz enda, vi holder fortsatt på å bygge quizene.\n"
    -   title: Evaluering
        text: "Avslutt undervisningstimen ved å ha en kort evaluering av timen. Hva lærte elevene? Hvilke vanskeligheter møtte de på?\nHvordan lærte de av feilene de gjorde? Og selvfølgelig; Hva laget de?\nElevene er ofte svært stolt av det de har laget, så det er kjekt å sette av litt ekstra tid til å gi elevene muligheten til å vise det de har gjort til klassekameratene sine.\n"
-   title: Vanlige feil
    key: common_mistakes
    levels:
    -   level: '1'
        sections:
        -   title: Elevene glemmer hvordan man skriver kommandoer
            example:
                error_text: "For eksempel; De prøver å skrive ut en setning uten å bruke skriv-kommandoen\n"
                error_code: "Hedy kan ikke skrive dette\n"
                solution_text: "Lær elevene dine å begynne kodelinjene sine med en kommando.\n"
                solution_code: "skriv Hedy kan skrive dette!\n"
        -   title: Elevene bruker stor forbokstav når de skriver kommandoer
            example:
                error_text: "Kommandoene fungerer ikke hvis de har stor forbokstav\n"
                error_code: "Spør Hvorfor funker ikke koden min\nSkriv Fordi jeg brukte stor forbokstav\n"
                solution_text: "Fjern den store forbokstaven\n"
                solution_code: "spør Hvorfor funker koden min nå?\nskriv Fordi jeg fjernet den store forbokstaven\n"
        -   title: Elevene bruker 'ekko' uten 'spør'
            example:
                error_text: "'ekko' er laget for å gjennta svaret som gis til en spør-kommando. Uten 'spør' vil ikke 'ekko' gjøre noe.\n"
                error_code: "ekko Ditt navn er\n"
                solution_text: "Legg til en spør-kommando for å få det til å fungere.\n"
                solution_code: "spør Hva heter du?\nekko Ditt navn er\n"
        -   title: Eleven ønsker å skrive ut ekko-ordet (variabelen) i midten av en setning
            example:
                error_text: "Og de har rett til det! Derfor skal de lære hvordan de kan bruke variabler i neste nivå.\n"
                error_code: "spør Hvilket programmeringsspråk er best?\nekko er best!\n"
                solution_text: "I nivå 1 må vi gjøre slik:\n"
                solution_code: "spør Hvilket programmeringsspråk er best?\nekko Det beste språket er...\n"
        -   title: 'Skilpadden: Eleven lar skilpadden vandre ut av skjermen'
            example:
                error_text: "Det er vanlig at elever prøver ut store tall når de bruker skilpadden, noe som fører til at pilen forsvinner ut av skjermen.\n"
                error_code: "frem 300\nsnu 90\n"
                solution_text: "I eksempelet over så er det vanlig at elevene tror at snu-kommandoen ikke fungerer. Den fungerer, men de ser det ikke fordi det skjer utenfor skjermen. Løsningen er å bruke mindre tall for å unngå at skilpadden forsvinner utenfor skjermen.\n"
                solution_code: "frem 100\nsnu 90\n"
        -   title: "Skilpadden: Eleven bruker kommandoen bak, men den eksisterer ikke"
            example:
                error_text: "Bak/bakover/tilbake er ikke en kommando\n"
                error_code: "bak 100\n"
                solution_text: "For å få skilpadden til å gå bakover kan du bruke frem-kommandoen og et negativt tall. For eksempel:\n"
                solution_code: "frem -100\n"
    -   level: '2'
        sections:
        -   title: Eleven har skrivefeil i kommandoene sine
            example:
                error_text: "Hedy klarer ikke å gjennkjenne kommandoer med skrivefeil i.\n"
                error_code: "skrivv Ikke lag skriveleifer!\n"
                solution_text: "Lær elevene dine å lese feilmeldingene. På denne måten kan de selv finne ut av hva som gikk gale.\n"
                solution_code: "skriv Ikke lag skriveleifer!\n"
        -   title: Eleven glemmer at spør-kommandoen har endret seg
            example:
                error_text: "I dette nivået lærer elevene om variabler. For å bruke spør-kommandoen på dette nivået må man nå lagre svaret som en variabel. Dette kan være lett å glemme for elevene.\n"
                error_code: "spør Hva vil du ha å spise?\n"
                solution_text: "I dette nivået må du fortelle Hedy hvor svaret skal lagres, slik at det kan brukes senere i koden. Dette kalles en variabel.\n"
                solution_code: "bestilling er spør Hva vil du ha å spise?\n"
        -   title: 'Eleven prøver å bruke ekko-kommandoen '
            example:
                error_text: "For noen elever kan det være frustrerende å lære at ekko-kommandoen ikke fungerer lengre. Det er derfor veldig viktig å forklare fordelene med å bruke variabler. Du kan for eksempel si at man kan bruke flere variabler i en kode og at man kan putte dem hvor man vil i en setning!\n"
                error_code: "svaret er spør Hvorfor fungerer ikke ekko lengre?!\nekko\n"
                solution_text: "Bruk en variabel isteden:\n"
                solution_code: "svaret er spør Hvorfor fungerer ikke ekko lengre?\nskriv svaret\n"
        -   title: Eleven bruker et variabelnavn som et vanlig ord
            example:
                error_text: "I eksempelet under er ordet 'navn' brukt som en variabel og som normal tekst. Resultatet av koden blir da 'Hei mitt Hedy er Hedy'\n"
                error_code: "navn er Hedy\nskriv Hei mitt navn er navn\n"
                solution_text: "Ikke bruk ord til variabelnavn hvis du ønsker å bruke ordet i teksten din. I nivå 4 blir dette løst ved å bruke fnutter (apostrofer).\n"
                solution_code: "navn er Hedy\nskriv Hei jeg heter navn\n"
        -   title: Eleven bruker lange variabelnavn som består av to eller flere ord
            example:
                error_text: "En variabelnavn må være et ord. Man kan bruke understrek for å sette sammen to ord, det teller som et ord.\n"
                error_code: "valgt dør er spør Hvilken dør velger du?\n"
                solution_text: "Legg til en understrek:\n"
                solution_code: "valgt_dør er spør Hvilken dør velger du?\n"
        -   title: Elever bruker av og til to forskjellige navn for den samme variabelen
            example:
                error_text: "I dette eksempelet har eleven brukt 'hest' og 'navn' for å referere til samme variabel.\n"
                error_code: "hest er spør Hva heter hesten din?\nskriv Hesten din heter navn\n"
                solution_text: "Sjekk alltid at variabler har samme navn i hele koden. Små forskjeller kan være vanskelig å oppdage (eks. entall/flertall) men de vil føre til feil i koden.\n"
                solution_code: "navn er spør Hva heter hesten din?\nskriv Hesten din heter navn\n"
    -   level: '3'
        sections:
        -   title: Eleven prøver å skrive ut hele lister
            example:
                error_text: "En liste kan ikke skrives ut. Man kan kun skrive ut et ord fra listen ved å bruke på tilfeldig-kommandoen\n"
                error_code: "handleliste er epler, melk, sjokolade\nskriv handleliste\n"
                solution_text: "For å skrive ut en liste med alle tingene på handlelisten kan du legge dem rett etter en skriv-kommando. Eventuelt kan du bruke listen til å skrive ut et tilfeldig ord i listen:\n"
                solution_code: "skriv epler, melk, sjokolade\n\neller\n\nhandleliste er epler, melk, sjokolade\nskriv handleliste på tilfeldig\n"
        -   title: Eleven bruker navnet til en variabel eller liste som vanlig tekst
            example:
                error_text: "Problemet oppsto antageligvis i nivå 2 også. Nå kan det skje for lister også:\n"
                error_code: "navn er Hedy\nskriv Hei mitt navn er navn\n\neller\n\ndyr er nesehorn, bie, svane\nskriv Mitt favoritt dyr er... dyr på tilfeldig\n"
                solution_text: "Ikke bruk variabel- eller listenavn som vanlig tekst. I nivå 4 løses dette problemet med fnutter (apostrofer).\n"
                solution_code: "navn er Hedy\nskriv Hei jeg heter navn\n\neller\n\ndyr er nesehorn, bie, svane\nskriv Favoritt dyret mitt er... dyr på tilfeldig\n"
        -   title: Eleven glemmer 'på' i 'på tilfeldig'
            example:
                error_text: "Som i eksemplet:\n"
                error_code: "fugler er spurv, måke, hakkespett\nskriv fugler tilfeldig\n"
                solution_text: "Problemet løses ved å legge til på-nøkkelordet:\n"
                solution_code: "fugler er spurv, måke, hakkespett\nskriv fugler på tilfeldig\n"
        -   title: Eleven glemmer å bruke skriv-kommandoen når de i tillegg bruker 'på tilfeldig' kommandoen
            example:
                error_text: "Eller så skriver de 'på tilfeldig' på begynnelsen av linjen:\n"
                error_code: "frukter er eple, appelsin, banan\nfrukter på tilfeldig\n"
                solution_text: "Vær tydelig med elevene dine og si at man alltid må bruke skriv-kommandoen for å skrive ut tekst.\n"
                solution_code: "frukter er eple, appelsin, banan\nskriv frukter på tilfeldig\n"
        -   title: Eleven glemte å bruke komma i listen sin
            example:
                error_text: "I en liste er innholdet separert med komma-tegn\n"
                error_code: "pizzaer er funghi tonno quattro stagioni\nskriv pizzaer på tilfeldig\n"
                solution_text: "Etter hver ting i listen må vi legge til et komma:\n"
                solution_code: "pizzaer er funghi, tonno, quattro, stagioni\nskriv pizzaer på tilfeldig\n"
        -   title: Eleven prøver å bruke 'på tilfeldig'-kommandoen uten en liste
            example:
                error_text: "For eksempel:\n"
                error_code: "klubber er Manchester United\nskriv klubber på tilfeldig\n"
                solution_text: "Hedy kan ikke skrive noe tilfeldig, fordi det ikke fins en liste å velge noe tilfeldig fra.\n"
                solution_code: "klubber er Manchester United, Bayern Munchen, FC Barcelona\nskriv klubber på tilfeldig\n"
        -   title: 'Elever prøver å bruke legg/fjern uten en liste '
            example:
                error_text: "I eksempelet under er ikke 'navn' en liste, men en variabel. Du kan ikke legge noe til den.\n"
                error_code: "navn er Jakob\nditt_navn er spør Hvem er du?\nlegg ditt_navn til navn\nskriv navn på tilfeldig\n"
                solution_text: "Det må finnes en liste før man kan bruke legg-kommandoen, så du må legge til et ekstra navn for å gjøre 'navn' om til en liste, for eksempel Ramona. Hvis du ikke vil ha Ramona på listen din kan du bruke fjern-kommandoen til å fjerne det etterpå.\n"
                solution_code: "navn er Jakob, Ramona\nditt_navn er spør Hvem er du?\nlegg ditt_navn til navn\nskriv navn på tilfeldig\n"
        -   title: Elever glemmer å bruke til/fra ved bruk av legg/fjern
            example:
                error_text: "Uten til/fra vil ikke legg/fjern kommandoene fungere.\n"
                error_code: "eventyr er fortelling, papegøye, terninger\nvalg er spør Hvilket eventyr liker du best?\nlegg valg\nfjern terninger\nskriv Jeg elsker eventyr på tilfedig\n"
                solution_text: "Hedy må vite hvilken liste elementet skal legges til i eller fjernes fra.\n"
                solution_code: "eventyr er fortelling, papegøye, terninger\nvalg er spør Hvilket eventyr liker du best?\nlegg valg til eventyr\nfjern terninger fra eventyr\nskriv Jeg elsker eventyr på tilfedig\n"
    -   level: '4'
        sections:
        -   title: Eleven glemmer å bruke apostrof på begge sider av teksten
            example:
                error_text: "I dette nivået krever skriv og spør at du bruker fnutter rundt tekststrenger. En før teksten og en etter.\n"
                error_code: "skriv Hallo\nhumør er spør 'Hvordan har du det?\n"
                solution_text: "Legg til riktige fnutter.\n"
                solution_code: "skriv 'Hallo'\nhumør er spør 'Hvordan har du det?'\n"
        -   example:
                error_code: "skriv `Velkommen til restauranten`\nmatrett er spør \"Hva ønsker du å bestille?\"\n"
                error_text: "Det er viktig å begynne undervisningen av dette nivået med å sjekke at elevene vet hvordan de skriver det riktige apostrof-tegnet. Det er vanlig at elevene bruker feil tegn, eks \"dobbel-apostrof \" eller `skrå-apostrof `.\n"
                solution_text: "Dette er de korrekte apostrofene:\n"
                solution_code: "skriv 'Velkommen til restauranten'\nmatrett er spør 'Hva ønsker du å bestille?'\n"
            title: Eleven bruker feil apostrof-tegn
        -   title: Eleven bruker en apostrof i teksten sin
            example:
                error_text: "Fra dette nivået er det ikke mulig å bruke fnutter. De brukes ofte i norsk når man skriver enkelte forkortninger samt ord som leses bokstav for bokstav eller ord som har s-, x- eller z-ending. (Mer vanlig på engelsk med fnutter)\n"
                error_code: "skriv 'Du kan ikke skrive en pc's prossessor'\n"
                solution_text: "Du kan velge å bruke feil gramatikk, eller fjerne apostrofen. Eventuelt kan du bruke ` som en apostrof:\n"
                solution_code: "skriv 'Du kan skrive en pcs prossessor'\nskriv 'Du kan skrive en pc`s prossessor'\n"
    -   sections:
        -   title: Eleven glemmer å bruke skriv-kommandoen sammen med hvis-kommandoen
            example:
                error_text: "Etter eleven bruker hvis- eller ellers-kommandoen glemmer de å bruke en påfølgende kommando som skriv- eller spør-kommandoen:\n"
                error_code: "hvis navn er Hedy 'Kjempebra!'\nellers 'Hedy er bedre!'\n"
                solution_text: "Legg til skriv-kommandoen for å fikse problemet:\n"
                solution_code: "hvis navn er Hedy skriv 'Kjempebra!'\nellers skriv 'Hedy er bedre!'\n"
        -   title: Eleven kan bruke to forskjellige navn for å referere til samme variabel
            example:
                error_text: "I dette eksempelet har studenten brukt 'hest' og 'navn' for den samme variabelen:\n"
                error_code: "hest er spør 'Hva heter hesten din?'\nhvis navn er Blakken skriv 'Kult!'\nellers skriv 'Mindre kult!'\n"
                solution_text: "Sjekk alltid at variabler har samme navn gjennom hele kodeflyten. Små forskjeller kan være vanskelig å legge merke til (eks. entall/flertall) men det vil føre til feil i koden.\n"
                solution_code: "hest er spør 'Hva heter hesten din?'\nhvis hest er Blakken skriv 'Kult!'\nellers skriv 'Mindre kult!'\n"
        -   title: Elevene glemmer fortsatt apostrof på begge sider
            example:
                error_text: "Enkelte hvis-kommandoer kan bli veldig lange og elevene har en tendens til å glemme apostrofene.\n"
                error_code: "hvis navn er Hedy skriv morro\nellers skriv 'meh!\n"
                solution_text: "Bruk alltid to fnutter i en skriv-kommando:\n"
                solution_code: "hvis navn er Hedy skriv 'morro'\nellers skriv 'meh!'\n"
        -   title: Eleven bruker fnutter rundt variabelnavn
            example:
                error_text: "På dette nivået skal det ikke være fnutter rundt variabel navn.\n"
                error_code: "hvis 'navn' er 'Hedy' skriv 'morro'\nellers skriv 'meh!'\n"
                solution_text: "Fjern apostrofene for å få koden til å fungere:\n"
                solution_code: "hvis navn er Hedy skriv 'morro'\nellers skriv 'meh!'\n"
        -   title: Eleven bruker lange variabelnavn bestående av to ord
            example:
                error_text: "Et variabelnavn må være i et ord. Du kan bruke understrek for å koble sammen to ord, dette teller som et ord.\n"
                error_code: "valgt dør er spør 'Hvilken dør velger du?'\n"
                solution_text: "Legg til en understrek:\n"
                solution_code: "valgt_dør er spør 'Hvilken dør velger du?'\n"
        -   example:
                error_code: "hvis navn er Mari, Silje, Samira skriv 'Du er morsom'\nellers skriv 'Du er ikke morsom'\n"
                error_text: "Eksempel: Denne eleven vil at Hedy skal fortelle alle vennene hennes at de er morsom, men ikke de andre klassekameratene hennes.\n"
                solution_text: "Du kan bruke i-kommandoen for å løse problemet. Kommandoen introduseres først på senere nivå, men den fungerer allerede på nivå 5.\nEn annen løsning kan være å bruke flere hvis-kommandoer uten en ellers-kommando. Ulempen med dette er at de andre klassekameratene ikke blir fortalt at de ikke er morsom.\n"
                solution_code: "venner er Mari, Silje, Samira\nnavn er spør 'Hvem er du?'\nhvis navn i venner skriv 'Du er morsom'\nellers skriv 'Du er ikke morsom'\n\neller\n\nnavn er spør 'Hvem er du?'\nhvis navn er Mari skriv 'Du er morsom'\nhvis navn er Silje skriv 'Du er morsom'\nhvis navn er Samira skriv 'Du er morsom'\n"
            title: Elever vil at flere alternativer skal produsere samme resultat ved bruk av hvis-kommandoen
        -   title: Eleven setter variabelnavnet til det samme som verdien i hvis-utsagnet
            example:
                error_text: "I eksempelet under er passordet 'passord'. Dette vil resultere i at det alltid er korrekt.\n"
                error_code: "passord er spør 'Hva er passordet?'\nhvis passord er passord skriv 'Korrekt!'\nellers 'Feil passord'\n"
                solution_text: "Velg et annet navn for variabelen:\n"
                solution_code: "hemmelig_passord er spør 'Hva er passordet?'\nhvis hemmelig_passord er passord skriv 'Korrekt!'\nellers 'Feil passord'"
        level: '5'
    -   level: '6'
        sections:
        -   title: Students struggle with quotation marks
            example:
                error_text: "Some students struggle with adding quotattion marks or not. If you add quotation marks, the output screen will literally show '5+5'.\n"
                error_code: "print '5 + 5'\n"
                solution_text: "In this code the output screen will print '10'.\n"
                solution_code: "print 5 + 5\n"
        -   title: Students struggle with the concept of doing maths with a variable
            example:
                error_text: "Some students will find it hard to do maths with variables. Try to show them very simple examples, like:\n"
                solution_code: "price = 0\nprint 'Welcome to our burger restaurant'\nburger = ask 'Would you like a burger?'\nif burger = yes price = price + 10\ndrink = ask 'Would you like a drink?'\nif drink = yes price = price + 4\nprint 'That will be ' price ' euros please'\n"
                error_code: "age = ask 'How old are you?'\nprint 'Next year you will be ' age + 1\n"
                solution_text: "Or take it a step further like this.\n"
    -   sections:
        -   example:
                error_code: "repeat 3 times 'For he`s a jolly good fellow'\nrepeat 3 print 'Which nobody can deny!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "repeat 3 times print 'For he`s a jolly good fellow'\nrepeat 3 times print 'Which nobody can deny!'\n"
                error_text: "Make sure that the students know to use both the full repeat command and the print command.\n"
            title: Students forget one of the word of the repeat command, or they forget the print command
        -   title: Students try to repeat multiple lines
            example:
                error_text: "In this level you can only repeat one line of code multiple times. In this code the student wanted to print 3 different drinks, but it won't work. It will ask the question 3 times and only print the last answer.\n"
                solution_text: "You should go to the next level to be able to repeat multiple lines. So on this level you'll have to print everything seperately.\n"
                solution_code: "drink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\n"
                error_code: "repeat 3 times drink = ask 'What would you like to drink?'\nprint drink\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                error_code: "repeat 100 times print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times print 'This is enough'\n"
        level: '7'
    -   sections:
        -   example:
                solution_code: "repeat 3 times\n    print 'hello'\n"
                error_text: "Indentation is a new concept in this level, that is hard to use for some students. Make sure they practise some simple codes before making a whole program with it.\n"
                error_code: "repeat 3 times\nprint 'hello'\n"
                solution_text: "This is the correct code:\n"
            title: Students use the indentation wrong
        -   title: Students only repeat 1 line when they wanted to repeat multiple lines
            example:
                error_text: "For instance, in the code below the student wanted to take the drinks order of 3 people. But insted the program asked 3 times, but only wrote down one order.\n"
                error_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
                solution_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\n    print drink\n"
        -   title: Students want to nest if statements, or put if statements inside a loop
            example:
                solution_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n"
                error_text: "In this level students aren't allowed yet to put if statements inside other if statements or inside repeat loops.\nIn the next level this is allowed.\n"
                error_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    repeat 3 times\n        print 'Hip Hip Hooray!'\n"
                solution_text: "This is the correct code for this level:\n"
        -   title: Students make programs that take too long to run
            example:
                error_code: "repeat 100 times\n    print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                solution_code: "repeat 20 times\n    print 'This is enough'\n"
        -   example:
                error_code: "password is ask 'What is the password?'\nif password is password\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                solution_code: "password is ask 'What is the password?'\nif password is 'password'\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                error_text: "We have seen this mistake by some of our students. They make a password for their computer, but they make the password 'password'.\nIn line 2 the computer is asked to check wheter the variable password is the same as the variable password, so itself. Which means the answer is alway yes.\nSo with this code the answer will always be 'You can come in' no matter what the player fills in.\n"
                solution_text: "You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.\n"
            title: Students use the if command to check if the variable value is the same as the variable name
        level: '8'
    -   level: '9'
        sections:
        -   title: Students make mistakes with indentation
            example:
                error_text: "The hardest part about this level is getting the indentation right. Students love nesting if statements, sometimes even inside other nested if statements. Keeping track of indentation can get pretty tough.\n"
                error_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n        if book is yes\nprint 'Robin buys the book and goes home'\nelse\n    print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
                solution_text: "This is the correct code. Try to keep track of all the different constructions when putting if statements inside other if statements.\n"
                solution_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n    if book is yes\n        print 'Robin buys the book and goes home'\n    else\n        print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
    -   sections:
        -   example:
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animals\n"
                solution_text: "The word animals in the last line should be changed into animal.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
                error_text: "We often see that students try to print the list (in the example animals) instead of the items of the list.\n"
            title: Students so not use the for command correctly
        -   title: Students forget the indentation
            example:
                error_text: "Students tend to forget to use indentation after a for command.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\nprint 'I love ' animals\n"
                solution_text: "You should use indentation after a for command.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
        level: '10'
    -   sections:
        -   example:
                error_text: "Make sure that the students use indentation.\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "This is the correct code:\n"
                solution_code: "for i in range 1 to 5\n    print i\n"
            title: Students forget to use indentation
        -   title: Students don't understand the i
            example:
                error_text: "Some students don't understand that i is a variable. i is chosen, because it is used in Python programming, but you could just as easily use a different variable name.\nFor example, this code:\n"
                solution_text: "Could just as well be replaced with this code. It works the same.\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
                error_code: "for i in range 1 to 5\nprint i\n"
        level: '11'
    -   level: '12'
        sections:
        -   title: Students forget quotation marks
            example:
                error_text: "Students need more quotation marks now than in the previous levels. In this example quotation marks were forgotten in the list and in the if command.\n"
                error_code: "superheroes = Spiderman, Batman, Iron Man\nsuperhero = superheroes at random\nif superhero = Batman\n    print 'IM BATMAN!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "superheroes = 'Spiderman', 'Batman', 'Iron Man'\nsuperhero = superheroes at random\nif superhero is 'Batman'\n    print 'IM BATMAN!'\n"
        -   example:
                error_code: "score = '25'\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
                solution_text: "This is the correct code:\n"
                solution_code: "score = 25\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
                error_text: "You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.\nIn the example below, you can't do maths with the number 25, because it's in quotation marks.\n"
            title: Students use quotation marks on numbers they want to use for calculations
        -   title: Students use commas instead of periods in decimal numbers
            example:
                error_text: "Decimal numbers can be used from this level on, but you can't use commas.\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print 2.5 + 2.5\n"
                error_code: "print 2,5 + 2,5\n"
    -   level: '13'
        sections:
        -   title: Students confuse `and` with `or`
            example:
                error_text: "Both commands might appear similar, but their functions are very different.\n"
                error_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' or time is 'yes'\n    print 'Lets play!'\n"
                solution_text: "In this case, the person should answer yes on both questions, so you should use `and`.\n"
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
    -   sections:
        -   title: Students confuse the < and > signs
            example:
                error_text: "Often, students are already familiar with these signs from maths class. But if your students don't know these signs yet, they might have a challenge with it.\n"
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   example:
                error_code: "name = ask 'What is your name?'\nif name =< 'Hedy'\n    print 'You are not Hedy'\n"
                solution_text: "This is the correct code:\n"
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                solution_code: "name = ask 'What is your name?'\nif name != 'Hedy'\n    print 'You are not Hedy'\n"
            title: Students use the wrong signs for `!=` `<=` and `>=`
        -   title: Students forget to use the == sign
            example:
                error_text: "In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.\n"
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "name = ask 'What is your name?'\nif name == 'Hedy'\n    print 'You are cool!'\n"
        level: '14'
    -   level: '15'
        sections:
        -   title: Students forget indentation in the while loop
            example:
                error_text: "Indentation is often hard for students.\n"
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
    -   sections:
        -   example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = 'starwberry', 'chocolate'\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
            title: Students forget the brackets
        -   title: Students use the wrong brackets
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
            title: Students forget the quotation marks while focussing on the brackets
        -   example:
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream at random ' icecream'\n"
                solution_text: "This is the correct code:\n"
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
            title: Students still use the old at random command
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        level: '16'
    -   level: '17'
        sections:
        -   example:
                solution_text: "This is the correct code:\n"
                error_text: "The elif command needs a condition behind it. It cannot be used like else, without a condition.\n"
                error_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif:\n    print 'I like green'\n"
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
            title: Students use elif like else, so without a condition
        -   example:
                solution_text: "This is the correct code:\n"
                solution_code: "answer = ask 'How are you doing?'\nif answer is 'great':\n    print 'Me too!'\nelif answer is 'bad':\n    print 'Let me cheer you up!'\nelse:\n    print 'Im great!'\n"
                error_text: "After each command that requires indentation, a colon should be used.\n"
                error_code: "answer = ask 'How are you doing?'\nif answer is 'great'\n    print 'Me too!'\nelif answer is 'bad'\n    print 'Let me cheer you up!'\nelse\n    print 'Im great!'\n"
            title: Students forget the colon
    -   level: '18'
        sections:
        -   title: Students forget to use the brackets
            example:
                error_text: "Students will forget to put brackets around their text.\n"
                error_code: "print 'my name is Hedy!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print('my name is Hedy!')\n"
        -   title: Students will still use the ask command
            example:
                error_text: "The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.\n"
                error_code: "print('My name is Hedy!')\nname = ask('What is your name?')\nprint('So your name is ', name)\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print('My name is Hedy!')\nname = input('What is your name?')\nprint('So your name is ', name)\n"
        -   title: Students might use the brackets as quotation marks
            example:
                error_text: "They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.\n"
                error_code: "temperature = 25\nprint('It is ') temperature ('degrees outside')\n"
                solution_text: "This is the correct code:\n"
                solution_code: "temperature = 25\nprint('It is ', temperature, 'degrees outside')\n"
    intro: "Du kan lære av å gjøre feil, spesielt i kodeverden!\nÅ gjøre feil er uungåelig, og en fantastisk mulighet til å lære, men det kan være en utfordring for deg som lærer å finne den rette løsningen for en feil!\nSpesielt når koden blir lengre og lengre utover i nivåene. Derfor har vi laget en liste med vanlige feil som gjøres i nivåene, og hvordan man løser de!\n"
title: Hedy dokumentasjon
learn-more-sections:
-   title: Liker du Hedy?
    text: "Vi vil gjerne høre fra deg!\n\n[Klikk her for å sende oss en epost](mailto:hello@hedy.org \"About Hedy\")\n"
-   title: Har du funnet en feil?
    text: "[Fortell oss om det på GitHub](https://github.com/hedyorg/hedy/issues/new/choose)\n"
-   title: Har du lyst til å hjelpe?
    text: "Den letteste måten er ved å hjelpe til med [oversettelse av Hedy](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nHer er nåværende status, hjelp oss å ferdigstille et språk, eller legg til et nytt et.\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Oversettelse-status\" /></a>\n"
-   title: Code week presentasjon
    text: "Har du lyst til å lære mer om Hedy? Sjekk ut denne presentasjonen Felienne holdt på European Code Week 2020:\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/R2U9MEowYag?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n"
start-sections:
-   title: Hva er et gradvis programmeringsspråk?
    text: "Å lære seg å programmere kan være vanskelig. Ikke at programmering i seg selv *er* vanskelig! Men det er mange regler man må lære seg, akkurat som når du begynte å lære deg norsk.\nPå samme måte krever det mye øvelse å lære seg programmering.\n\nDisse setningene leser du nok ganske lett. Men husker du når du lærte deg å lese? Da brukte du en del tid bare på å lære hver bokstav!\nDette gjelder også for programmering, det er kanskje vanskelig i begynnelsen, men det blir lettere etterhvert!\n\nDet som er bra med Hedy er at Hedy er *gradvis*. Det betyr at du ikke trenger å lære alle reglene på en gang.\nDe første nivåene har ganske få regler, slik at det er lett å bli vant til programmering.\nFor hvert nivå legger vi til flere regler og kommandoer. Kommandoer er instruksjoner for en datamaskin.\n"
-   title: Hvorfor er Hedy gradvis?
    text: "I denne videoen forklarer Felienne, skaperen av Hedy, hvorfor Hedy er gradvis.\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/fmF7HpU_-9k\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"
-   title: Hvem er Hedy laget for?
    text: "Hedy er laget for alle barn og ungdom som har lyst til å lære programmering! Du trenger bare å være komfortabel med å lese norsk.\n"
-   title: Trenger jeg erfaring med programmering?
    text: "Nei, det er ikke nødvendig. Men hvis du har programmert med Scratch eller Python, kan noen av kommandoene være kjente.\n"
-   title: Er Hedy gratis?
    text: "Ja! Hedy er også åpen kildekode (Open Source) som betyr at alle som kan programmere kan hjelpe oss å gjøre Hedy bedre.\nDu kan finne koden på [GitHub](https://github.com/hedyorg/hedy).\nHvis du liker Hedy og vil bidra, er vi veldig glade for [donasjoner](https://github.com/sponsors/hedyorg)!\n"
-   title: Må jeg installere noe?
    text: "Nei. Hedy kjører i nettleseren, som er det programmet du bruker for å se på denne siden. Sannsynligvis Chrome, Edge, Firefox eller Safari. Hedy virker også på telefonen din eller nettbrettet ditt."
join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Translating Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
