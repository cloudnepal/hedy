title: Hedy documentation
sections:
-   title: Introduction
    key: intro
    subsections:
    -   title: Что такое Hedy?
        text: "Hedy - это текстовый язык программирования, специально разработанный для (пред)подростков (от 10 до 15 лет).\nВ отличие от языков программирования для детей, таких как Scratch, Hedy использует не кодовые блоки, а текстовый код.\nПоэтому с Hedy вы научитесь набирать код, как это делают настоящие программисты, но небольшими шагами, с помощью игровых упражнений.\nТаким образом, Hedy может служить ступенькой к настоящим языкам программирования, таким как Python, в доступной и, в основном, веселой форме!\nЗдесь вы можете посмотреть [видео](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) о развитии Hedy как языка программирования.\n"
    -   title: Целевая аудитория
        text: "Hedy is developed with middle school and junior high school students in mind (ages 10 - 15).\nIt's important for the students to be able to read well. We recommend not to start with Hedy before the students have achieved at least a 3rd grade reading level.\nStudents (and teachers!) don't need any programming experience before starting with Hedy.\n"
    -   title: Как работает Hedy?
        text: "Hedy is divided into levels, in which new commands are taught.Each level contains a variety of exercises to practice to newly learned commands.\nThe exercises can be done by the students individually, or you can use them in classical instructions. The lesson plans for each level are included in this teacher manual.\nThe lesson plans and exercises are explained step by step, to make sure the less digitally informed teachers should be able to use Hedy too!\nOf course Hedy also caters to the creative teachers that love to make their own lessonplans and exercises!\n"
    -   title: Devices
        text: "Hedy is webbased, which means it works on any device with a browser (Google Chrome, Firefox, Edge etc), so laptops, chromebooks, tablets and even smartphones are suitable to use Hedy.\nThere's no need to download anything before working with Hedy, just go to the website and you're all set!\n"
    -   title: The Hedy Community
        text: "All Hedy teachers, programmers and other fans are welcome to join our [Discord server](https://discord.gg/8yY7dEme9r). This is the ideal place to chat about Hedy: we have channels where you can show your cool projects and lessons, channels to report bugs, and channels to chat with other teachers and with the Hedy team."
-   title: Подготовка
    key: подготовка
    subsections:
    -   title: Создание класса
        text: "Как учитель, вы можете создать класс для своих учеников. В этом классе вы можете видеть учетные записи учеников и их программы, а также следить за их успехами.\nВы также можете настроить свой класс и выбрать, какие приключения будут доступны для них. Таким образом, ваши ученики не будут перегружены количеством приключений и уровней, и они смогут сосредоточиться на тех приключениях, которые вы хотели бы, чтобы они практиковали.\n"
    -   title: Студенческие аккаунты
        text: "Есть два способа позволить вашим ученикам присоединиться к вашему классу: Вы можете позволить им создать свои собственные учетные записи или создать учетные записи для них.\n\n**Ученики создают свои собственные учетные записи**.\nВаши ученики могут зайти на сайт Hedy и создать свои собственные учетные записи, как это сделали вы. Чтобы пригласить их в ваш класс, им нужно просто нажать на ссылку приглашения.\nВы можете найти ссылку на приглашение на странице класса и отправить ее своим ученикам. Имейте в виду, что ваши ученики должны быть зарегистрированы в Hedy, когда они нажмут на ссылку, поэтому позаботьтесь о том, чтобы все прошло гладко.\n\n**Вы создаете учетные записи для своих учеников**.\nИногда проще создать целую кучу аккаунтов для своих учеников самостоятельно. Это можно сделать, нажав кнопку \"Создать учетные записи учеников\" и заполнив для них имена пользователей и пароли.\nСтуденты могут войти в систему с выбранными вами именем пользователя и паролем. После этого они могут изменить свое имя пользователя или пароль, если захотят, и все равно останутся в вашем классе.\n"
    -   title: Настройка предпочитаемого языка
        text: "Когда студенты создают профиль, они должны выбрать \"предпочитаемый язык\". Hedy всегда будет загружаться на этом выбранном языке.\nИзменить этот язык всегда можно позже, перейдя в \"Мой аккаунт\" и \"Мои личные настройки\".\nС декабря 2021 года установка предпочтительного языка является обязательной для каждого аккаунта Hedy.\nЕсли ваш аккаунт или аккаунты ваших учеников были созданы раньше этой даты, вы получите сообщение о том, что выбранный язык отсутствует.\nНе волнуйтесь! Перейдите в \"Мой профиль\" и установите язык в настройках вашего профиля.\nПока вы не установите язык, Hedy будет отображаться на языке вашего браузера, а если этот язык не поддерживается, то на английском.\n\n**Для неанглоязычных пользователей**.\nВы можете не только изменить язык приключений на свой собственный. Вы также можете выбрать, на каком языке должны быть ключевые слова (например, \"печатать\" или \"спрашивать\").\nТаким образом, вы можете научить своих студентов кодировать с помощью английских ключевых слов, но при этом позволить им программировать на своем родном языке. Например, голландские студенты могут использовать команду \"vraag\" вместо \"ask\".\n"
    -   title: Хранение программ
        text: "Поскольку вы уже вошли в систему, вы увидите синий баннер с Моим профилем и Моими программами.\nЭти вкладки существуют и для ваших учеников. В разделе Мои программы вы можете найти все коды, которые вы сохранили.\n\nВы можете легко сохранить свои проекты, дав название проекту на белой полосе и нажав зеленую кнопку Сохранить код.\nВы (и ваши ученики) также можете обмениваться программами. Эти программы будут размещены на нашей странице explore, чтобы все могли их увидеть и использовать.\nЕсли вы хотите убрать свою программу из общего доступа, перейдите в раздел \"Мои программы\" и нажмите кнопку \"Убрать из общего доступа\".\n"
-   subsections:
    -   title: Преподавание с Хеди
        text: "Hedy содержит множество различных уровней, каждый из которых обучает различным новым навыкам. Мы рекомендуем преподавать один уровень за урок.\nЭто даст вашим ученикам время полностью усвоить новую команду или концепцию и попрактиковаться с ней, прежде чем переходить к следующему уровню.\nМы используем эту структуру в наших уроках:\n"
    -   title: Introduction
        text: "Вы можете начать свои уроки с активизации предыдущих знаний ваших учеников: Что они уже знают о предмете, что они узнали на предыдущем уроке и какие ошибки они совершили, от которых теперь отучились?\nТаким образом, все ранее выученные команды и часто допускаемые ошибки будут свежи в памяти учеников, когда вы будете вводить новый урок.\n"
    -   title: Введение новых понятий и команд
        text: "Новые понятия и команды могут быть очень трудны для полного понимания некоторыми учащимися.\nПоэтому очень важно показать ученикам, как правильно использовать новые команды.\nОсобенно на начальных уровнях, где у некоторых студентов вообще нет опыта программирования, им может быть трудно понять новые абстрактные концепции.\nДемонстрация большого количества примеров делает абстрактное понятие (например, \"Что такое переменная?\") более узнаваемым и легким для понимания (\"Смотрите, переменная pet изменилась на dog\").\n"
    -   title: Приступаем к работе
        text: "Каждый уровень содержит различные приключения, которые можно найти на розовых вкладках. Первая розовая вкладка объясняет новые команды в этом уровне.\nСледующие вкладки - это приключения, которые ученики могут опробовать и создать свои собственные.\nПриключения расположены от самого простого к самому сложному, поэтому мы рекомендуем начинать слева и двигаться вправо.\nПоследняя вкладка \"Что дальше\" дает небольшое представление о том, что вы узнаете на следующем уровне. Конечно, вы можете выбрать приключения, которые вы хотите, чтобы ваши ученики проходили на каждом уровне.\nИм не обязательно выполнять каждое приключение. Каждое приключение содержит пример кода, который ученики могут опробовать с помощью зеленой кнопки.\nПример кода копируется на рабочее поле, где ученики могут опробовать код и изменить его под себя.\nСтимулируйте учеников превратить примеры кодов в свои собственные проекты, добавляя свои идеи и создавая свои собственные варианты приключений.\n"
    -   title: Викторина
        text: "Чтобы проверить, усвоили ли ваши ученики всю новую информацию, содержащуюся в уровне, вы можете предложить им составить викторину.\nТест содержит 10 вопросов с несколькими вариантами ответов о новых понятиях и командах для данного уровня.\nПока что викторина есть не для каждого уровня, так как мы все еще создаем викторины.\n"
    -   title: Оценка
        text: "Завершите урок кратким подведением итогов. Чему научились ученики? С какими трудностями они столкнулись?\nКак они учились на своих ошибках? И, конечно же: Что они создали?\nУченики часто очень гордятся своими собственными творениями, поэтому приятно сэкономить немного времени и дать ученикам возможность показать свои работы одноклассникам.\n"
    title: Преподавание с Хеди
    key: обучение
-   levels:
    -   level: '1'
        sections:
        -   title: Студенты забывают печатать "коммандос"
            example:
                error_text: "Например, они набирают предложение, не используя печатный текст.\n"
                error_code: "Хеди не может напечатать это\n"
                solution_text: "Научите своих студентов всегда начинать строку кода с команды.\n"
                solution_code: "печать Хеди может напечатать это!\n"
        -   title: Студенты используют заглавные буквы при наборе команд
            example:
                error_text: "Команды не будут работать, если они написаны заглавными буквами.\n"
                error_code: "Спросите Почему мой код не работает?\nОтвет Потому что я использую заглавные буквы.\n"
                solution_text: "Уберите заглавные буквы.\n"
                solution_code: "спросить Почему мой код теперь работает?\nпечать Потому что я убрал заглавные буквы!\n"
        -   title: Студенты используют печатать без вопроса
            example:
                error_text: "Эхо создано для того, чтобы повторять ответ после команды спросить. Без команды спросить эхо не будет ничего делать.\n"
                error_code: "echo Ваше имя\n"
                solution_text: "Add an ask command to make it work.\n"
                solution_code: "ask What's your name?\necho Your name is\n"
        -   title: Студенты хотят, чтобы их эхо-слово (переменная) находилось в середине предложения
            example:
                error_text: "И они правы! Поэтому на следующем уровне они научатся использовать правильные переменные.\n"
                error_code: "спросить Какой язык программирования самый веселый?\nЭхо - самый лучший!\n"
                solution_text: "На уровне 1 мы должны оставить все как есть:\n"
                solution_code: "ask Какой язык программирования самый интересный?\nэхо Самый лучший - это...\n"
        -   title: 'Черепаха: Студенты позволяют черепахе уйти за пределы экрана'
            example:
                error_text: "Часто учащиеся любят пробовать большие числа, используя черепашку, которая заставляет стрелку уходить за пределы экрана.\n"
                error_code: "вперед 300\nповорот 90\n"
                solution_text: "In the example. students tend to think that the turn command doesn't work. Eventhough is does work, but you can't see it happening off screen. Use smaller numbers to prevent this from happening.\n"
                solution_code: "вперед 100\nповорот 90\n"
        -   title: "Черепаха: Студенты используют команду \"назад\", но такой команды не существует"
            example:
                error_text: "Назад - это не команда.\n"
                error_code: "назад 100\n"
                solution_text: "Чтобы заставить черепаху идти назад, используйте команду forward и отрицательное число. Например:\n"
                solution_code: "вперед -100\n"
    -   level: '2'
        sections:
        -   title: Students make typos in their commands
            example:
                solution_code: "печать Не делайте опечаток!\n"
                error_text: "Hedy can't recognize a command with a typo.\n"
                error_code: "prinnt Не делайте опечаток!\n"
                solution_text: "Научите своих учеников читать сообщения об ошибках. Так они смогут сами выяснить, что пошло не так.\n"
        -   title: Students forget that the ask command has changed
            example:
                error_text: "На этом уровне учащиеся узнают о переменных. Команда ask также требует переменной, но учащиеся забывают об этом.\n"
                error_code: "ask what would you like to eat?\n"
                solution_text: "В этом уровне вы должны указать Хеди, где сохранить ваш ответ, чтобы его можно было использовать позже. Это называется переменной.\n"
                solution_code: "order is What would you like to eat?\n"
        -   title: 'Students try to use the echo command. '
            example:
                error_text: "Для некоторых студентов может оказаться неприятным узнать, что команда echo больше не работает. Поэтому очень важно объяснить преимущества использования переменных. Например, вы можете использовать несколько переменных в коде, и вы можете поместить их в любое место в предложении!\n"
                error_code: "answer is ask Why doesn't echo work anymore?!\necho\n"
                solution_text: "Вместо этого используйте переменную.\n"
                solution_code: "ответ - спросить Почему эхо больше не работает?!\nвывести ответ\n"
        -   title: Студенты используют имя переменной или как обычное слово
            example:
                error_text: "В приведенном ниже примере слово 'name' используется как переменная, а также как обычный текст. Вывод этого кода будет выглядеть как 'Hi my Hedy is Hedy'.\n"
                error_code: "name is Hedy\nprint Hi my name is name\n"
                solution_text: "Поэтому не используйте слово, которое вы хотите использовать в тексте, в качестве имени переменной. На уровне 4 это решается с помощью кавычек.\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n"
        -   title: Students use long variable names containing two words.
            example:
                error_text: "Переменная должна быть названа одним словом. Вы можете использовать знак подчеркивания для соединения двух слов. Это считается за одно.\n"
                error_code: "chosen door is ask Which door do you pick?\n"
                solution_text: "Добавьте знак подчеркивания.\n"
                solution_code: "chosen_door is ask which door do you pick?\n"
        -   title: Студенты могут использовать два разных названия для одной и той же переменной
            example:
                error_text: "В этом примере студент использовал 'horse' и 'name' для одних и тех же переменных.\n"
                error_code: "лошадь спрашивают Как зовут вашу лошадь?\nнапечатать имя вашей лошади\n"
                solution_text: "Всегда проверяйте, имеет ли переменная одинаковое имя во всем коде. Небольшие различия может быть трудно заметить (например, множественное число), но они будут мешать коду.\n"
                solution_code: "name is ask Как зовут вашу лошадь?\nнапечатать Имя вашей лошади\n"
    -   level: '3'
        sections:
        -   title: Students try to print whole lists
            example:
                error_text: "Список не может быть напечатан. Можно напечатать только один элемент из списка наугад.\n"
                error_code: "groceries is apples, milk, chocolate\nprint groceries\n"
                solution_text: "Чтобы напечатать список всех продуктов, нужно просто поместить его после команды print. В противном случае вы можете использовать список для печати одного товара наугад.\n"
                solution_code: "распечатать яблоки, молоко, шоколад\n\nили\n\nпродукты - это яблоки, молоко, шоколад\nнапечатать продукты наугад\n"
        -   title: Студенты используют имя переменной или списка как обычный текст
            example:
                error_text: "Эта проблема, вероятно, возникала и на уровне 2. Теперь это может произойти и со списками.\n"
                error_code: "имя - Хеди\nнапечатать Привет, меня зовут имя\n\nили\n\nживотное - носорог, пчела, лебедь\nнапечатать Лучшее животное - это... животное наугад\n"
                solution_text: "Не используйте имена переменных или списков в обычном тексте для печати. На уровне 4 эта проблема решается с помощью кавычек.\n"
                solution_code: "имя - Хеди\nнапечатать Привет Я имя\n\nили\n\nживотное - носорог, пчела, лебедь\nнапечатать Лучшее животное - это... животные наугад\n"
        -   title: Students forget at in at random
            example:
                error_text: "Как в примере\n"
                error_code: "birds is sparrow, seagull, robin\nprint birds random\n"
                solution_text: "This problem is solved by adding the word at.\n"
                solution_code: "birds is sparrow, seagull, robin\nprint birds at random\n"
        -   title: Студенты забывают использовать команду print, когда также используют команду at random
            example:
                error_text: "Или они иногда ставятся наугад в начале строки.\n"
                error_code: "fruit is apple, cherry, banana\nfruit at random\n"
                solution_text: "Подчеркните своим ученикам, что для печати текста всегда нужна печать.\n"
                solution_code: "fruit is apple, cherry, banana\nprint fruit at random\n"
        -   title: Students forget to use commas in their lists
            example:
                error_text: "In a list items are seperated with a comma.\n"
                error_code: "pizzas is funghi tonno quattro stagioni\nprint pizzas at random\n"
                solution_text: "После каждого пункта вашего списка должна стоять запятая\n"
                solution_code: "pizzas is funghi, tonno, quattro stagioni\nprint pizzas at random\n"
        -   title: Students try to use at random without a list.
            example:
                error_text: "Например\n"
                error_code: "clubs is Manchester United\nprint clubs at random\n"
                solution_text: "Хеди не может напечатать что-либо наугад, потому что нет списка для выбора.\n"
                solution_code: "клубы - \"Манчестер Юнайтед\", \"Байрн Мюнхен\", ФК \"Барселона\nраспечатать клубы в произвольном порядке\n"
        -   title: 'Students try to use add/remove without a list '
            example:
                error_text: "В приведенном ниже примере 'names' - это не список, а переменная. В нее нельзя ничего добавить.\n"
                error_code: "имя - Джейк\nyour_name - ask Кто ты?\nдобавить ваше_имя к именам\nвывести имена случайным образом\n"
                solution_text: "There has to be a list first, so you have to add a second name to turn names into a list, for example Amy. If you don't want amy on your list, you can use remove to remove it after.\n"
                solution_code: "имена - Джейк, Эми\nyour_name спрашивают Кто ты?\nдобавить ваше_имя к именам\nвывести имена случайным образом\n"
        -   title: Students forget to use to/from in add/remove.
            example:
                error_text: "Without to/from the add/remove command won't work.\n"
                error_code: "приключения - это история, попугай, кубики\nвыбор - Какое приключение тебе больше нравится?\nдобавить выбор\nубрать кубики\nнапечатать наугад \"Я люблю приключения\n"
                solution_text: "Хеди должна знать, в какой список следует добавить/изъять элемент.\n"
                solution_code: "приключения - это история, попугай, кубики\nвыбор - Какое приключение тебе больше нравится?\nдобавить выбор в приключения\nудалить кубики из приключений\nнапечатать наугад \"Я люблю приключения\n"
    -   level: '4'
        sections:
        -   title: Студенты забывают использовать кавычки с обеих сторон текста
            example:
                error_text: "На этом уровне печатать и задавать нужно набор кавычек. Одна до текста и одна после.\n"
                error_code: "print Hello\nmood is ask 'How are you?\n"
                solution_text: "Добавьте правильные кавычки.\n"
                solution_code: "print 'Hello'\nmood is ask 'How are you?'\n"
        -   title: Students use the wrong quotation marks
            example:
                error_text: "Важно начать урок с проверки того, знают ли ученики, как правильно набирать кавычки. Иначе они могут использовать \"двойные кавычки\" или перекошенные `.\n"
                error_code: "print `Добро пожаловать в ресторан`\nеда спрашивает: \"Что бы вы хотели заказать?\"\n"
                solution_text: "These are the correct quotation marks:\n"
                solution_code: "print 'Добро пожаловать в ресторан'\nfood is ask 'Что бы вы хотели заказать?'\n"
        -   title: Students use an apostrophe in their text
            example:
                error_text: "Начиная с этого уровня апострофы не допускаются. Они часто используются в английском языке при сокращении таких слов, как you're, don't или what's.\n"
                error_code: "print 'You're not allowed to type this'\n"
                solution_text: "Вы можете использовать неправильную грамматику и просто опустить апостроф. Или вы можете использовать ` в качестве апострофа.\n"
                solution_code: "print 'Вам разрешено напечатать это'\nprint 'И вы можете сделать это'\n"
    -   sections:
        -   title: Students forget to use print in an if command
            example:
                error_text: "После того как студенты используют if или else, они забывают использовать вторую команду, например print или ask.\n"
                error_code: "if name is Hedy 'Great!'\nelse 'Hedy is better!'\n"
                solution_text: "Add the print command to fix it.\n"
                solution_code: "if name is Hedy print 'Great!'\nelse print 'Hedy is better!'\n"
        -   title: Students might use two different names for the same variable
            example:
                error_text: "В этом примере студент использовал 'horse' и 'name' для одних и тех же переменных.\n"
                error_code: "horse is ask 'Как зовут вашу лошадь?'\nесли имя - Костер, выведите \"круто\".\nelse print 'less cool!\n"
                solution_text: "Всегда проверяйте, имеет ли переменная одинаковое имя во всем коде. Небольшие различия может быть трудно заметить (например, множественное число), но они будут мешать коду.\n"
                solution_code: "если лошадь есть, спросите: \"Как зовут вашу лошадь?\nif horse is Bonfire print 'cool!'\nelse print 'less cool!'\n"
        -   title: Students still forget the quotes on both sides.
            example:
                error_text: "Коды, использующие команду `if`, могут стать очень длинными, а студенты обычно забывают использовать кавычки.\n"
                error_code: "if name is Hedy print fun\nelse print 'meh!\n"
                solution_text: "Always use 2 quotes in a print command.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!'\n"
        -   title: Students use quotes around variable names.
            example:
                error_text: "In this level there are no quotes around variable names.\n"
                error_code: "if 'name' is 'Hedy' print 'fun'\nelse print 'meh!'\n"
                solution_text: "Remove the quotes to get the code to work.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!\n"
        -   title: Students use long variable names containing two words.
            example:
                error_text: "Переменная должна быть названа одним словом. Вы можете использовать знак подчеркивания для соединения двух слов. Это считается за одно.\n"
                error_code: "chosen door is ask 'Which door do you pick?'\n"
                solution_text: "Добавьте знак подчеркивания.\n"
                solution_code: "chosen_door is ask 'which door do you pick?'\n"
        -   example:
                error_code: "если имя Джесси, Дэвид, Суф print 'Вы смешной' else print 'Вы не смешной'\n"
                error_text: "Например, этот студент Хеди говорил всем своим друзьям, что они смешные, а другим одноклассникам говорил, что это не так.\n"
                solution_text: "Для этого можно использовать команду `in`. Она объясняется на более высоком уровне, но уже работает на уровне 5.\nДругое решение - использовать несколько команд if и ни одной команды else. Недостаток в том, что это не скажет другим одноклассникам, что они не смешные.\n"
                solution_code: "друзья - Джесси, Дэвид, Суф\nname is ask 'Who are you?'\nif name in friends print 'You are funny'\nelse print 'You are not funny'\n\nили\n\nимя есть спросите \"Кто ты?\nесли naam - Джесси, выведите 'Вы смешной'.\nесли naam - Дэвид, напечатайте \"Ты смешной\".\nесли naam - Суф, напечатайте \"Ты смешной\".\n"
            title: Students want multiple answers to be correct
        -   title: Студенты делают имя переменной таким же, как значение в операторе if
            example:
                error_text: "В приведенном ниже примере пароль - 'password'. Это приведет к тому, что он всегда будет правильным.\n"
                error_code: "password is ask 'What is the password?'\nif password is password print 'Access granted'\nelse print 'Доступ запрещен!\n"
                solution_text: "Pick a different name for your variable.\n"
                solution_code: "secret_password is ask 'What is the password'\nif secret_password is password print 'Access granted!'\nelse print 'Access denied!'"
        level: '5'
    -   level: '6'
        sections:
        -   title: Студенты испытывают трудности с кавычками
            example:
                error_text: "Некоторые студенты испытывают трудности с добавлением или не добавлением кавычек. Если вы добавите кавычки, то на экране вывода будет буквально показано '5+5'.\n"
                error_code: "print '5 + 5'\n"
                solution_text: "In this code the output screen will print '10'.\n"
                solution_code: "print 5 + 5\n"
        -   example:
                solution_text: "Or take it a step further like this.\n"
                error_text: "Некоторым ученикам будет трудно выполнять математические действия с переменными. Попробуйте показать им очень простые примеры, например:\n"
                error_code: "age = ask 'Сколько вам лет?'\nprint 'В следующем году вам будет ' возраст + 1\n"
                solution_code: "цена = 0\nprint 'Добро пожаловать в наш бургерный ресторан'\nburger = ask 'Хотите бургер?'\nif burger = yes price = price + 10\ndrink = ask 'Would you like a drink?'\nif drink = yes price = price + 4\nprint 'Это будет ' цена ' евро, пожалуйста'\n"
            title: Студенты испытывают трудности с концепцией математических вычислений с переменной величиной
    -   sections:
        -   example:
                solution_code: "повторите 3 раза, напечатайте \"Потому что он веселый и хороший парень\".\nповторите 3 раза и напечатайте \"Что никто не может отрицать!\".\n"
                error_text: "Убедитесь, что учащиеся знают, как использовать команду полного повтора и команду печати.\n"
                error_code: "повторите 3 раза \"Ведь он веселый и хороший парень\".\nповторите 3 раза \"Что никто не может отрицать!\".\n"
                solution_text: "Это правильный код:\n"
            title: Студенты забывают одно из слов команды repeat или забывают команду print
        -   title: Students try to repeat multiple lines
            example:
                error_text: "In this level you can only repeat one line of code multiple times. In this code the student wanted to print 3 different drinks, but it won't work. It will ask the question 3 times and only print the last answer.\n"
                error_code: "повторить 3 раза drink = спросить \"Что бы вы хотели выпить?\".\nнапечатать напиток\n"
                solution_text: "Вы должны перейти на следующий уровень, чтобы иметь возможность повторять несколько строк. Поэтому на этом уровне вам придется печатать все по отдельности.\n"
                solution_code: "drink = спросить \"Что бы вы хотели выпить?\".\nнапечатать напиток\ndrink = спросить 'Что бы вы хотели выпить?\nнапечатать напиток\nвыпить = спросить 'Что бы вы хотели выпить?\nнапечатать напиток\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "На этом уровне очень легко создавать длинные коды. Студентам не разрешается создавать программы, которые долго загружаются (чтобы сохранить наши серверы).\n"
                error_code: "repeat 100 times print 'Сколько раз я могу повторить это?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times print 'This is enough'\n"
        level: '7'
    -   level: '8'
        sections:
        -   example:
                error_text: "Отступы - новое понятие для этого уровня, которое трудно использовать некоторым студентам. Убедитесь, что они попрактикуются в простых кодах, прежде чем создавать с его помощью целую программу.\n"
                error_code: "repeat 3 times\nprint 'hello'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "повторить 3 раза\n    выведите 'hello'\n"
            title: Студенты неправильно используют отступы
        -   example:
                error_text: "Например, в приведенном ниже коде студент хотел получить заказ напитков от 3 человек. Но вместо этого программа спросила 3 раза, но записала только один заказ.\n"
                error_code: "повторите 3 раза\n    выпить = спросить \"Что бы вы хотели выпить?\nнапечатать напиток\n"
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
                solution_code: "повторите 3 раза\n    выпить = спросить \"Что бы вы хотели выпить?\n    напечатать напиток\n"
            title: Студенты повторяют только 1 строку, когда они хотели повторить несколько строк
        -   title: Студенты хотят вложить операторы if или поместить операторы if внутрь цикла
            example:
                error_text: "На этом уровне студентам еще не разрешается помещать операторы if внутри других операторов if или внутри циклов повторения.\nНа следующем уровне это разрешено.\n"
                error_code: "день рождения = спросить \"У вас сегодня день рождения?\".\nесли день рождения = да\n    повторите 3 раза\n        print 'Hip Hip Hooray!'\n"
                solution_text: "This is the correct code for this level:\n"
                solution_code: "день рождения = спросить \"У вас сегодня день рождения?\".\nесли день рождения = да\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n"
        -   example:
                error_code: "повторить 100 раз\n    print 'Сколько раз я могу это повторить?'.\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times\n    print 'This is enough'\n"
                error_text: "На этом уровне очень легко создавать длинные коды. Студентам не разрешается создавать программы, которые долго загружаются (чтобы сохранить наши серверы).\n"
            title: Students make programs that take too long to run
        -   title: Студенты используют команду if, чтобы проверить, совпадает ли значение переменной с ее именем
            example:
                error_code: "password is спрашивает \"Какой пароль?\".\nif password is password\n    выведите 'Вы можете войти'\nelse\n    выведите 'Вам запрещено'\n"
                solution_code: "password is спрашивает 'What is the password?'.\nif password is 'password'\n    выведите 'Вы можете войти'\nelse\n    выведите 'Вам запрещено'\n"
                error_text: "Мы видели эту ошибку у некоторых наших студентов. Они придумывают пароль для своего компьютера, но делают пароль \"password\".\nВ строке 2 компьютеру предлагается проверить, совпадает ли переменная password с переменной password, так себе. Это означает, что ответ всегда положительный.\nТаким образом, при использовании этого кода ответ всегда будет \"Вы можете войти\", независимо от того, что вводит игрок.\n"
                solution_text: "You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.\n"
    -   level: '9'
        sections:
        -   title: Студенты допускают ошибки с отступами
            example:
                error_text: "Самое сложное в этом уровне - правильно расставить отступы. Студенты любят вставлять утверждения if, иногда даже внутри других вложенных утверждений if. Следить за отступами бывает довольно сложно.\n"
                error_code: "print 'Робин идет в центр города'\nlocation = ask 'Робин идет в магазин, или она идет домой?'\nif location is shop\n    print 'Она заходит в магазин'.\n    print 'Робин видит интересную книгу'\n    book = ask 'Покупает ли Робин книгу?'\n        если book is yes\nprint 'Робин покупает книгу и идет домой'\nelse\n    print 'Робин выходит из магазина и идет домой'\nelse\n    print 'Робин идет домой'\n"
                solution_text: "Это правильный код. Постарайтесь учесть все различные конструкции, когда операторы if помещаются внутри других операторов if.\n"
                solution_code: "print 'Робин идет в центр города'\nlocation = ask 'Робин идет в магазин, или она идет домой?'\nif location is shop\n    print 'Она заходит в магазин'.\n    print 'Робин видит интересную книгу'\n    book = ask 'Покупает ли Робин книгу?'\n    если book is yes\n        print 'Робин покупает книгу и идет домой'\n    else\n        print 'Робин выходит из магазина и идет домой'\nelse\n    print 'Робин идет домой'\n"
    -   level: '10'
        sections:
        -   title: Students so not use the for command correctly
            example:
                error_text: "Мы часто видим, что студенты пытаются напечатать список (в примере с животными), а не элементы списка.\n"
                error_code: "животные - это собака, кошка, рыбка\nдля животного в животных\n  print 'Я люблю ' животных\n"
                solution_code: "животные - это собака, кошка, рыбка\nдля животного в животных\n  print 'Я люблю ' животное\n"
                solution_text: "Слово животные в последней строке следует заменить на животное.\n"
        -   title: Students forget the indentation
            example:
                error_text: "Студенты, как правило, забывают использовать отступы после команды for.\n"
                error_code: "животные - это собака, кошка, рыбка\nдля животного в животных\nprint 'Я люблю ' животных\n"
                solution_text: "You should use indentation after a for command.\n"
                solution_code: "животные - это собака, кошка, рыбка\nдля животного в животных\n  print 'Я люблю ' животное\n"
    -   level: '11'
        sections:
        -   title: Студенты забывают использовать отступы
            example:
                error_text: "Make sure that the students use indentation.\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "Это правильный код:\n"
                solution_code: "for i in range 1 to 5\n    print i\n"
        -   title: Студенты не понимают i
            example:
                error_text: "Some students don't understand that i is a variable. i is chosen, because it is used in Python programming, but you could just as easily use a different variable name.\nFor example, this code:\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "С тем же успехом его можно заменить этим кодом. Он работает так же.\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
    -   level: '12'
        sections:
        -   title: Students forget quotation marks
            example:
                error_text: "Сейчас студентам требуется больше кавычек, чем на предыдущих уровнях. В этом примере кавычки были забыты в списке и в команде if.\n"
                error_code: "супергерои = Человек-паук, Бэтмен, Железный человек\nсупергерой = супергерои наугад\nесли супергерой = Бэтмен\n    print 'IM BATMAN!'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "супергерои = 'Человек-паук', 'Бэтмен', 'Железный человек'\nсупергерой = супергерои наугад\nесли супергерой - 'Бэтмен'\n    print 'IM BATMAN!'\n"
        -   title: Студенты используют кавычки для чисел, которые они хотят использовать для вычислений
            example:
                error_code: "балл = '25'\nответ - спросить \"Хотите ли вы получить очко?\".\nесли ответ \"да\n    балл = балл + 1\n    вывести результат\n"
                error_text: "You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.\nIn the example below, you can't do maths with the number 25, because it's in quotation marks.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "балл = 25\nответ - спросить \"Хотите ли вы получить очко?\".\nесли ответ \"да\n    балл = балл + 1\n    вывести результат\n"
        -   title: Students use commas instead of periods in decimal numbers
            example:
                error_code: "print 2,5 + 2,5\n"
                error_text: "Начиная с этого уровня можно использовать десятичные числа, но нельзя использовать запятые.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "напечатать 2,5 + 2,5\n"
    -   sections:
        -   example:
                error_code: "game - спросить \"Хочешь поиграть в игру?\".\ntime - спросить \"Есть ли у вас время поиграть?\".\nесли game is 'yes' или time is 'yes'\n    print 'Lets play!'\n"
                solution_text: "В этом случае человек должен ответить \"да\" на оба вопроса, поэтому следует использовать `and`.\n"
                solution_code: "game - спросить \"Хочешь поиграть в игру?\".\ntime - спросить \"Есть ли у вас время поиграть?\".\nесли game is 'yes' и time is 'yes'\n    print 'Lets play!'\n"
                error_text: "Обе команды могут показаться похожими, но их функции совершенно разные.\n"
            title: Students confuse `and` with `or`
        level: '13'
    -   level: '14'
        sections:
        -   title: Students confuse the < and > signs
            example:
                error_text: "Часто ученики уже знакомы с этими знаками по урокам математики. Но если ваши ученики еще не знают этих знаков, у них могут возникнуть трудности.\n"
                error_code: "возраст = спросить \"Сколько тебе лет?\".\nесли возраст < 12\n    print 'Вы старше меня!'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "возраст = спросить \"Сколько тебе лет?\".\nесли возраст > 12\n    print 'Вы старше меня!'\n"
        -   title: Students use the wrong signs for `!=` `<=` and `>=`
            example:
                error_text: "Эти знаки, вероятно, являются новыми для большинства студентов. Обязательно объясните эти знаки своим ученикам.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "имя = спросить \"Как вас зовут?\".\nif name != 'Hedy'\n    print 'You are not Hedy'\n"
                error_code: "имя = спросить \"Как вас зовут?\".\nif name =< 'Hedy'\n    print 'You are not Hedy'\n"
        -   title: Students forget to use the == sign
            example:
                error_code: "имя = спросить \"Как вас зовут?\".\nif name = 'Hedy'\n    print 'Ты крут!\n"
                error_text: "In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "name = ask 'What is your name?'\nif name == 'Hedy'\n    print 'Ты крут!\n"
    -   level: '15'
        sections:
        -   title: Students forget indentation in the while loop
            example:
                error_code: "ответ = 0\nwhile answer != 25\nanswer = ask 'Сколько будет 5 умножить на 5?'\nprint 'Был дан правильный ответ'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "ответ = 0\nwhile answer != 25\n    answer = ask 'Сколько будет 5 умножить на 5?'\nprint 'Был дан правильный ответ'\n"
                error_text: "Indentation is often hard for students.\n"
    -   level: '16'
        sections:
        -   title: Студенты забывают о скобках
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = 'starwberry', 'chocolate'\nprint 'Я люблю ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'Я люблю ' icecream[random] ' icecream'\n"
        -   title: Students use the wrong brackets
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'Я люблю ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'Я люблю ' icecream[random] ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Иногда студенты очень сосредоточены на новом аспекте синтаксиса, что забывают о кавычках.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'Я люблю ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'Я люблю ' icecream[random] ' icecream'\n"
        -   title: Students still use the old at random command
            example:
                error_text: "Иногда студенты очень сосредоточены на новом аспекте синтаксиса, что забывают о кавычках.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'Я люблю ' icecream[random] ' icecream'\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'Я люблю ' icecream в случайном порядке ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Иногда студенты очень сосредоточены на новом аспекте синтаксиса, что забывают о кавычках.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'Я люблю ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'Я люблю ' icecream[random] ' icecream'\n"
    -   sections:
        -   example:
                error_code: "color = ask 'Какой ваш любимый цвет?'\nif color == 'green':\n    print 'Зеленый цвет нравится'\nelif:\n    print 'Мне нравится зеленый'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "color = ask 'Какой ваш любимый цвет?'\nif color == 'green':\n    print 'Зеленый цвет нравится'\nelif color == yellow:\n    выведите 'желтый - хороший'\nelse:\n    print 'I like green'\n"
                error_text: "Для команды elif необходимо условие. Она не может быть использована как else, без условия.\n"
            title: Students use elif like else, so without a condition
        -   title: Студенты забывают о двоеточии
            example:
                error_text: "После каждой команды, требующей отступа, следует ставить двоеточие.\n"
                error_code: "ответ = спросить \"Как дела?\".\nесли ответ \"отлично\n    выведите 'У меня тоже!\nelif answer is 'bad'\n    выведите 'Позвольте мне подбодрить вас!\nelse\n    выведите \"Отлично!\n"
                solution_text: "Это правильный код:\n"
                solution_code: "ответ = спросить \"Как дела?\".\nесли ответ \"отлично\":\n    выведите 'У меня тоже!\nelif answer is 'bad':\n    print 'Позвольте мне подбодрить вас!\nelse:\n    print 'Im great!'\n"
        level: '17'
    -   level: '18'
        sections:
        -   title: Students forget to use the brackets
            example:
                error_text: "Students will forget to put brackets around their text.\n"
                error_code: "print 'my name is Hedy!'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "print('Меня зовут Хеди!').\n"
        -   title: Students will still use the ask command
            example:
                error_text: "Команда ask используется с первого уровня. Поэтому студентам может быть трудно переключиться на ввод вместо ask.\n"
                error_code: "print('Меня зовут Хеди!')\nname = ask('Как вас зовут?')\nprint('Итак, вас зовут ', name)\n"
                solution_text: "Это правильный код:\n"
                solution_code: "print('Меня зовут Хеди!')\nname = input('Как вас зовут?')\nprint('Итак, вас зовут ', name)\n"
        -   title: Students might use the brackets as quotation marks
            example:
                error_text: "Они научились держать переменные вне кавычек, поэтому они могут сделать то же самое со скобками. Что не является правильным способом их использования.\n"
                error_code: "temperature = 25\nprint('It is ') temperature ('degrees outside')\n"
                solution_text: "Это правильный код:\n"
                solution_code: "temperature = 25\nprint('It is ', temperature, 'degrees outside')\n"
    title: Часто допускаемые ошибки
    key: common_mistakes
    intro: "На ошибках можно учиться, особенно в кодировании!\nОшибки неизбежны, и это отличная возможность учиться, но для учителей может быть сложной задачей найти правильное исправление ошибки!\nОсобенно когда коды становятся все длиннее и длиннее по мере прохождения уровней. Поэтому мы составили список часто встречающихся ошибок в каждом уровне и их решений.\n"
learn-more-sections:
-   title: Вам нравится Хэди?
    text: "Мы будем рады услышать вас!\n[Нажмите здесь, чтобы отправить нам сообщение] (mailto:hello@hedy.org \"О Хеди\")\n"
-   title: Нашли проблему?
    text: "[Сообщите нам через Github](https://github.com/Felienne/hedy/issues/new/choose)\n"
-   text: "Хотите узнать больше о Хеди? Посмотрите выступление Фелиенн на Европейской неделе кода 2020:\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/R2U9MEowYag?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n"
    title: Разговор на неделе кодов
-   title: Хеди в новостях
    text: "Некоторые сайты и газеты писали о Хеди с момента нашего выхода в начале 2020 года. Мы ведем список здесь:\n\n* [Codeweek Podcast, июль 2022](https://codeweek.eu/podcast/26)\n* [Heise.de (немецкий), Januari 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)\n* [Strumenta, ноябрь 2021](https://tomassetti.me/teaching-programming-with-hedy/)\n* [Vives (голландский), CodeWeek Special October 2021](images/Vives-174-Codeweek.pdf)\n* [CodeWeek.eu - Haunted House Challenge, сентябрь 2021](https://codeweek.eu/2021/challenges/haunted-house)\n* [Opensource.com, апрель 2021](https://opensource.com/article/21/4/hedy-teach-code)\n* [IO Magazine, апрель 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)\n* [Ingeniería De Software (испанский), февраль 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)\n* [Hello World Magazine, февраль 2021](images/Hello_World_15_Hedy.pdf)\n* [Discoro, январь 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)\n* [Фелиенн получает голландскую награду за исследования в области ИКТ для Хеди, январь 2021](https://www.nwo.nl/en/news/felienne-hermans-receives-dutch-prize-ict-research-2021)\n* [SlashDot, август 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)\n* [GenBeta (испанский), август 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)\n* [Developpez (французский), август 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)\n* [Vives (голландский), октябрь 2020](images/artikel_vives.pdf) \"Met Hedy stap voor stap leren programmeren\"\n* [Лейденский университет, апрель 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)\n* [Mare (Голландия), апрель 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)\n* [AG Connect (голландский), апрель 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)\n"
start-sections:
-   title: Что такое поэтапный язык программирования?
    text: "Учиться программировать бывает сложно. Это не значит, что программирование сложно само по себе. Однако, как и при изучении русского языка, нужно запоминать правила и практиковаться.\n\nСейчас вы без труда читаете этот текст. Но помните ли вы, как сложно было читать в раннем детстве? Каждая буква давалась с трудом.\nТак же и с программированием: поначалу бывает трудно, но со временем становится проще.\n\nХэди — *поэтапный* язык программирования. Это значит, что вам не придётся изучать все правила с самого начала.\nНа первых нескольких этапах правил не так много, так что вы спокойно привыкнете к самому процессу программирования.\nНа каждом новом этапе добавляется несколько новых правил, так что вы постепенно изучаете всё больше *команд* — инструкций для компьютера.\n"
-   title: Почему Хэди — поэтапный язык?
    text: "В этом видео Фелина, создатель Хэди, объясняет, зачем он сделан поэтапным. Видео пока что доступно только на английском языке.\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/EdqT313rM40\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"
-   title: Для кого сделан Хэди?
    text: "Хэди подойдёт всем детям, которые хотят научиться программировать! Важно, чтобы вы умели бегло читать. Большая часть Хэди пока что не переведена на русский язык. Если вы хорошо понимаете по-английски, вы можете [помочь перевести Хэди на русский](https://github.com/Felienne/hedy/blob/main/TRANSLATING.md).\n"
-   title: Понадобится ли мне опыт программирования?
    text: "Не обязательно. Однако, если вы уже программировали на Scratch или Python, некоторые команды будут вам знакомы.\n"
-   title: Бесплатен ли Хэди?
    text: "Да! Это так благодаря Лейденскому университету в Нидерландах. Более того, Хэди — язык с открытым исходным кодом. Это значит, что любой, кто умеет программировать, может помочь нам в его разработке.\nИсходный код Хэди доступен на [GitHub](https://github.com/Felienne/hedy).\nЕсли вам нравится Хэди и вы готовы помочь, мы будем очень благодарны [пожертвованиям](https://www.steunleiden.nl/project/hedy).\n"
-   title: Нужно ли мне что-то устанавливать?
    text: Нет. Хэди работает в браузере — в той же программе, в которой вы сейчас видите эту страницу. Вероятно, это Chrome, Edge или Firefox. Хэди также работает на телефонах и планшетах.
join-sections:
-   text: "# Есть три способа, с помощью которых вы можете поддержать Хеди!\n"
    title: Supporting Hedy
-   title: Улучшение языка
    text: "Постепенный и многоязычный характер Hedy создает множество интересных технических проблем.\nНайти эти проблемы можно на [Github](https://github.com/Felienne/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Перевод Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/Felienne/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy предназначен для поддержки учителей при проведении уроков программирования в классе. У нас есть специальные функции для учителей, например, возможность создать класс, настроить его и посмотреть, как учатся ваши ученики.\nЕсли вам нравится Hedy, вы можете обратиться в школы, которые вы знаете, чтобы помочь учителям начать работу! Мы можем помочь вам найти школы или учителей через [Discord](https://discord.gg/8yY7dEme9r).\n"
