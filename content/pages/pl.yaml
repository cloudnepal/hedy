sections:
-   subsections:
    -   title: Czym jest Hedy?
        text: "Hedy to prosty język programowania, stworzony dla dzieci i nastolatków w przedziale wiekowym 10 - 15 lat.\nW przeciwieństwie do innych języków skierowanych do dziecięcej widowni, takich jak Scratch, Hedy nie używa kodu w formie bloczków, a prawdziwego tekstu.\nHedy oferuje więc naukę pisania kodu niczym prawdziwy programiści, ale małymi kroczkami za pomocą krótkich i ciekawych zadań.\nDzięki temu Hedy może funkcjonować jako przystanek na drodze do nauki właściwych języków programowania, chociażby Python'a, w łatwo przyswajalny i, przede wszystkim, zabawny sposób.\nTutaj możesz zobaczyć [film](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) na temat tego, jak powstawał Hedy.\n"
    -   title: Docelowi odbiorcy
        text: "Hedy został stworzony z myślą o dzieciach i nastolatkach w wieku 10 - 15 lat.\nWażnym jest, by uczniowie potrafili poprawnie czytać. Nie zalecamy używania Hedy'ego zanim uczniowie nie osiągną poziomu czytania odpowiadającego dzieciom z 3 klasy podstawowej.\nUczniowie (i nauczyciele!) nie muszą mieć żadnego doświadczenia w programowaniu przed rozpoczęciem nauki z Hedy'm.\n"
    -   title: Jak działa Hedy?
        text: "Hedy jest podzielony na poziomy, w ramach których wprowadzane są nowe polecenia. Każdy poziom zawiera szereg zadań pozwalających na przećwiczenie nowo poznanych poleceń. \nJako nauczyciel, możesz decydować które zadania są dostępne dla twoich uczniów. Czy będą tworzyć restauracje, kalkulator czy może nawiedzony dom? Na każdym poziomie, zadania są ułożone od najłatwiejszych do najtrudniejszych. \nDzięki takiemu podejściu, Twoi uczniowie cały czas będą mieli przed sobą zajmujące wyzwania. Zadania mogą być wykonywane przez każdego z uczniów z osobna, lub możesz je wykorzystać jako instrukcje nn aswoioich lejach. \n\nZadania zawierają także przykładowy kod, aby ułatwić korzystanie z Hedy, także mniej obeznanym z programowaniem nauczycielom.\nOczywiście Hedy wspiera również kreatywnych nauczycieli, którzy uwielbiają tworzyć własne plany lekcji i zadania.\n\nPo zrobieniu wszystkich zadań z danego poziomu, Twoi uczniowie mogę sprawdzić swoją wiedzę w quizie.\nMożesz śledzić pracę i postępy swoich uczniów na stronie klasy.\n"
    -   title: Urządzenia
        text: "Hedy jest aplikacją internetową, co oznacza tyle, że działa on na każdym urządzeniu z dostępną przeglądarką (Google Chrome, Firefox, Edge itp.), dzięki czemu każdy komputer, laptop, tablet, czy nawet smartfon, jest odpowiednim narzędziem to korzystania z Hedy'ego.\nNie ma potrzeby pobierania czegokolwiek przed przystąpieniem do pracy z Hedy'm - po prostu odpal stronę internetową i jesteś gotowy do działania!\n"
    -   title: Społeczność Hedy
        text: "Zapraszamy wszystkich nauczycieli, programistów i innych fanów Hedy do przyłączenia się do naszego [Discorda](https://discord.gg/8yY7dEme9r). Jest to idealne miejsce aby porozmawiać o Hedy'm: mamy kanały gdzie możesz pokazać innym swoje projektu i lekcje, kanały do zgłaszania błedów, oraz kanały do dyskusji z innymi nauczycielami oraz zespołem Hediego\n"
    title: Wprowadzenie
    key: intro
-   title: "Tutorial"
    key: "tutorial"
    subsections:
    -   title: "Tutorial"
        text: |
            Do you want to follow the tutorial (again)? Click [here](https://hedycode.com/tutorial)
-   key: przygotowanie
    title: Przygotowanie
    subsections:
    -   title: Tworzenie klasy
        text: "Jako nauczyciel, możesz stworzyć klasę dla swoich uczniów. Klasa taka umożliwia Ci zobaczenie kont uczniów i stworzone przez nich programy, a także monitorowanie ich postępów.\nKlasę można dostosowywać i wybierać, które przygody są odpowiednie dla Twoich uczniów, a które nie. W ten sposób uczniowie nie będą czuć się przytłoczeni ilością materiału, umożliwiając im skupienie się na konkretnej przygodzie, którą wspólnie chcielibyście się zająć.\n"
    -   title: "Customize your Class"
        text: |
            You can also customize your class and choose which adventures are available for them. This way your students won't be overwhelmed by the amount of adventures and levels, and they can specifically focus on the adventures you'd like them to practice with.
            This [video](https://www.youtube.com/watch?v=qva9gXBoUwY&t=10s) shows you how to customize your class.
    -   title: Konta uczniów
        text: "Uczniowie mogą dołączyć do Twojej klasy na dwa sposoby: zezwalasz im na stworzenie własnych kont albo tworzysz konta dla nich.\n\n**Uczniowie tworzą własne konta**\nTwoi uczniowie mogą założyć własne konta na stronie Hedy'ego. Żeby mogli dołączyć do klasy, wystarczy, że klikną link z zaproszeniem.\nLink z zaproszeniem znajduje się na stronie klasy. Wyślij go do swoich uczniów. Zwróć uwagę, że uczniowie muszą być zalogowani do Hedy'ego w momencie kliknięcia w link.\n\n**Ty tworzysz konta dla swoich uczniów**\nCzasami po prostu jest łatwiej stworzyć garść kont dla uczniów samodzielnie. Możesz to zrobić klikając przycisk 'stwórz konta dla uczniów' i uzupełniając pola z loginami i hasłami.\nUczniowie mogą zalogować się za pomocą tychże właśnie loginów i haseł. Po zalogowaniu się, będą mieć możliwość zmiany loginu i hasła na takie, które bardziej im odpowiada.\n"
    -   title: Zmiana preferowanego języka
        text: "Tworząc profil uczniowie powinni wybrać „preferowany język”. Hedy będzie zawsze włączał się w wybranym przez ucznia języku.\nW każdej chwili można zmienić język, ponownie przechodząc do „Moje konto” i „Moje ustawienia osobiste”.\nOd grudnia 2021 r. każde konto Hedy musi mieć ustawiony preferowany język.\nGdy Twoje konto lub konta Twoich uczniów zostaną utworzone przed tą datą, otrzymasz wiadomość, że brakuje wyboru preferowanego języka.\nNie martw się! Przejdź do „Mój profil” i ustaw język w ustawieniach profilu.\nDopóki nie ustawisz języka, Hedy będzie wyświetlane w języku Twojej przeglądarki, a jeśli ten język nie jest obsługiwany, w języku angielskim.\n\n**Dla osób nie mówiących po angielsku**\nNie tylko możesz zmienić język zadań na swój własny język. Możesz także wybrać język, w którym mają być słowa kluczowe (na przykład „drukuj” lub „zapytaj”).\nW ten sposób możesz nauczyć swoich uczniów kodowania za pomocą angielskich słów kluczowych, ale możesz także pozwolić im programować we własnym języku. Na przykład holenderski studenci mogą użyć polecenia „vraag” zamiast „zapytaj”.\n"
    -   title: Przechowywanie programów
        text: "Ponieważ jesteś teraz zalogowany, zobaczysz niebieski baner z przyciskiem \"Mój profil\" i \"Moje programy\".\nTe zakładki istnieją również dla Twoich uczniów. W \"Moje programy\" możesz znaleźć wszystkie zapisane kody.\n\nMożesz łatwo zapisać swoje projekty, nadając projektowi nazwę na białym pasku i naciskając zielony przycisk \"Zapisz kod\".\nTy (i Twoi uczniowie) możecie również udostępniać programy. Programy te zostaną opublikowane na naszej stronie \"Odkrywaj\", aby każdy mógł je zobaczyć i wykorzystać.\nJeśli chcesz cofnąć udostępnianie swojego programu, przejdź do 'Moje programy' i kliknij 'Przestań udostępniać'.\n"
-   title: Nauczanie z Hedy'm
    key: nauczanie
    subsections:
    -   title: Nauczanie z Hedy'm
        text: "Hedy zawiera wiele różnych poziomów, z których każdy uczy nowych umiejętności. Zalecamy nauczanie jednego poziomu na lekcję.\nDaje to uczniom czas na pełne zrozumienie nowego polecenia lub koncepcji i przećwiczenie ich przed przejściem na wyższy poziom.\nNasze lekcje są zorganizowane w następujący sposób:\n"
    -   title: "Slides"
        text: |
            **COMING SOON** Here you'll soon find slides to use in your lessons.
    -   title: Wprowadzenie
        text: "Możesz rozpocząć lekcje od krótkiego przypomnienia: co już wiedzą na dany temat, czego nauczyli się na poprzedniej lekcji i jakie błędy popełnili, z czego się z nich nauczyli?\nW ten sposób wszystkie wcześniej wyuczone polecenia i często popełniane błędy są świeże w pamięci Twoich uczniów, kiedy zaczynasz wprowadzać nową lekcję.\n"
    -   title: Wprowadzanie nowych pojęć i komend
        text: "The new concepts and commands can be very hard for some students to fully understand.\nThat's why it's of importance to model the proper use of the new commands to your students.\nEspecially in the lower levels, where some students have no experience whith programming at all, it can be hard for them to understand the new abstract concepts.\nShowing a lot of examples makes an abstract concept (for instance: 'What is a variable?') more recognizable and easier to understand ('Look, the variable pet changed into dog').\n"
    -   title: Przejdźmy do praktyki
        text: "Each level contains different adventures that you can find in the pink tabs. The first pink tab explains the new commands in this level.\nThe following tabs are adventures that the students can try out and make their own.\nThe adventures are arranged from easiest to hardest, so we recommend to start on the left and your your way to the right.\nThe last tab 'what's next' gives a little teaser of what you'll learn in the next level. Of course, you can select the adventures you want your students to do for each level.\nThey don't always have to make every adventure. Every adventure contains an example code, that the students can try out with the green button.\nThe example code gets copied to the workfield, where the students can try out the code and adjust it to make it their own.\nStimulate your students to turn the example codes into their own projects by adding their own ideas and making their own variation of the adventure.\n"
    -   title: Quiz
        text: "By sprawdzić, czy Twoi uczniowie opanowali wszystkie umiejętności z danego poziomu, możesz przeprowadzić dla nich quiz.\nQuiz taki obejmuje 10 pytań wielokrotnego wyboru.\nNie każdy poziom ma odpowiadający mu quiz, wciąż jesteśmy na etapie ich projektowania.\n"
    -   title: Ocena
        text: "Round up your lesson by having a brief evaluation. What did the students learn? Which hardships did they come across?\nHow did they learn from their mistakes? And of course: What did they create?\nStudents are often very proud of their own creations, so it's nice to save a little time and gove your students the opportunity to show their work to their classmates.\n"
-   title: "Extra Hedy features"
    key: "features"
    subsections:
    -   title: "Teacher Statistics"
        text: |
            This [video](https://www.youtube.com/watch?v=iwHVG4NRKI4&t=5s) shows you more information on how to use the teacher statistics in your class.
    -   title: "Make your own adventure"
        text: |
            It is also possible for teachers to create your own adventure. [This video](https://www.youtube.com/watch?v=A0zbXpxX4q4) shows you how to create your own adventure as a teacher and add it to your class(es).
    -   title: "Explore page"
        text: |
            On the [explore](https://hedycode.com/explore) page you can view the work of other Hedy users. You can try out their programs and use them as inspiration to create something cool yourself.
            You can also add a program you've made to the explore page yourself by clicking 'Save and share code' in the coding screen or go to My Programs and click 'Share'.
            Don't want to share your work anymore? Simply go to 'My Programs' and click 'Unshare'.
            If you want more information about the explore page, check out this [video](https://www.youtube.com/watch?v=26boFjqvS5Q).
    -   title: "My achievements"
        text: |
            If you click on your username in the topright corner of your screen, you can go to [My achievements](https://hedycode.com/my-achievements). On this page you achievements are collected. Your students have such a page as well.
            When you hover over the badge with your mouse, you'll see how to earn the badge. There are hidden badges too, of which you'll have to find out yourself how to earn them.
            If you want more information on the achievements, check out this [video](https://www.youtube.com/watch?v=-FjmKejukCs).
    -   title: "High Scores"
        text: |
            On [this page](https://hedycode.com/highscores) you can see the high scores of all Hedy users.
            In this [video](https://www.youtube.com/watch?v=IqTiUkBVTo8) you can learn some more about the high scores.
    -   title: "Debugger"
        text: |
            Is your (student's) code not working? There must be a bug (coding mistake) in it! You can use the debugger to find the mistake.
            The debugger is the ladybig button in your coding screen. If you press it, you can run your code line by line to find your mistake.
            Have you found the mistake? Press the red stop button and the debugger will shut off.
    -   title: "Read aloud"
        text: |
            Do you want the output of your program to be read aloud? Then you can use the read aloud function that is found under the 'run code' button in your coding screen.
    -   title: "Programmers mode"
        text: |
            Distracted by all the adventures, or do you want to make a long program? Then check out the 'Programmers Mode' switch at the bottom of your coding screen.
            Programmers mode allows you and your students to use a bigger coding screen.
    -   title: "Other useful features"
        text: |
            This [video](https://www.youtube.com/watch?v=c4MntPPgl1Y) shows you even more features of Hedy, like the cheatsheets and the keyboard switcher.
-   levels:
    -   level: '1'
        sections:
        -   title: Uczniowie zapominają napisać odpowiednią komendę
            example:
                error_text: "Na przykład, wpisują zdanie bez używania komendy 'napisz'\n"
                error_code: "Hedy nie może tego wyświetlić\n"
                solution_text: "Naucz swoich uczniów, by zawsze zaczynali linijkę kodu komendą.\n"
                solution_code: "napisz Hedy może to wyświetlic!\n"
        -   title: Uczniowie używają wielkich liter przy wpisywaniu komend
            example:
                error_text: "Komendy nie zadziałają, jeżeli zostaną napisane przy użyciu wielkich liter\n"
                error_code: "Zapytaj Czemu mój kod nie działa?\nNapisz Bo używam wielkich liter.\n"
                solution_text: "Zamień wielkie litery na małe.\n"
                solution_code: "zapytaj Czemu mój kod teraz działa?\nnapisz Bo używam tylko małych liter!\n"
        -   title: Uczniowie używają 'dołącz' bez ' zapytaj'
            example:
                error_text: "Komenda 'dołącz' powtarza odpowiedź do pytania zadanego komendą 'zapytaj'. Bez 'zapytaj', 'powtórz' nie ma czego powtórzyć.\n"
                error_code: "dołącz Nazywasz się\n"
                solution_text: "Dodaj komendę 'zapytaj'.\n"
                solution_code: "zapytaj Jak się nazywasz?\ndołącz Nazywasz się\n"
        -   title: Uczniowie próbują wykorzystać komendę 'dołącz' do dodania wartości w środku zdania
            example:
                error_text: "I mają rację! Jednak by to osiągnąć, potrzebne będą zmienne, wprowadzone dopiero w następnym poziomie.\n"
                error_code: "zapytaj Jaki język programowania jest najlepszy?\ndołącz jest najlepszy!\n"
                solution_text: "By zachować spójność przekazu, na potrzeby poziomu 1 ograniczymy się do:\n"
                solution_code: "zapytaj Jaki język programowania jest najlepszy?\necho Najlepszy jest...\n"
        -   title: 'Żółw: Uczniowie wyprowadzają żółwia poza ekran'
            example:
                error_text: "Uczniowie często lubią wykorzystywać duże liczby podczas zabawy z żółwiem, powodując tym samym przesunięcie poza widok ekranu.\n"
                error_code: "naprzód 300\nodwróć 90\n"
                solution_text: "W tym przykładzie, uczniom może się wydawać, że komenda 'odwróć' nie działa. W rzeczywistości jednak wszystko wykonuje się tak, jak powinno, ale poza ekranem. Użyjcie mniejszych liczb, by żółw nie opuścił nie ekranu.\n"
                solution_code: "naprzód 100\nodwróć 90\n"
        -   example:
                solution_code: "naprzód -100\n"
                error_text: "Komenda 'wstecz' nie istnieje\n"
                error_code: "wstecz 100\n"
                solution_text: "By żółw ruszył się wstecz, należy użyć komendy 'naprzód' z wartością ujemną. Na przykład:\n"
            title: "Żółw: Uczniowie próbują użyć komendę 'wstecz' lub podobną, lecz takowa nie istnieje"
    -   level: '2'
        sections:
        -   title: Uczniowie wpisali komendę z literówką
            example:
                error_text: "Hedy nie rozpozna komendy z literówką.\n"
                error_code: "napizs Nie rób literówek!\n"
                solution_text: "Naucz swoich uczniów, by zwracali uwagę na wiadomości z błędami. W ten sposób szybciej dojdą do tego, co poszło nie tak.\n"
                solution_code: "napisz Nie rób literówek!\n"
        -   title: Students forget that the ask command has changed
            example:
                error_text: "In this level students learn about variables. The ask command requires a variable as well, but students forget this.\n"
                error_code: "zapytaj Co chciałbyś zjeść?\n"
                solution_text: "W tym poziomie musisz wskazać Hedy'emu, gdzie przechować odpowiedź, by użyć ją później. Coś takiego nazywane jest 'zmienną'.\n"
                solution_code: "zamówienie to Co chciałbyś zjeść?\n"
        -   title: 'Uczniowie próbują użyć komendy ''dołącz'' '
            example:
                error_text: "For some students it might be frustrating to learn that the echo command doesn't work anymore. That's why it's very important to explain the advantages of using variables. For example you can use multiple variables in a code, and you can put them anywhere you like in a sentence!\n"
                error_code: "odpowiedź to zapytaj Czemu dołącz już nie działa?!\ndołącz\n"
                solution_text: "Użyj zmiennej.\n"
                solution_code: "odpowiedź to zapytaj Czemu dołącz już nie działa?!\nnapisz odpowiedź\n"
        -   title: Uczniowie używają nazwy zmiennej jak zwykłego słowa
            example:
                error_text: "W przykładzie poniżej, słowo 'imię' używane jest zarówno jako zmienna, jak i część zwykłego zdania. Wynikiem tego kodu będzie 'Hej moje Hedy to Hedy'.\n"
                error_code: "imię to Hedy\nnapisz Hej moje imię to Hedy\n"
                solution_text: "By tego uniknąć, nie używaj słów jako i nazwy zmiennych, i części zdania. W poziomie 4 problem ten jest rozwiązany za pomocą cudzysłowów.\n"
                solution_code: "imię to Hedy\nnapisz Hej nazywam się imię\n"
        -   title: Uczniowie używają zmiennych z nazwami dwuczłonowymi .
            example:
                error_text: "Nazwa zmiennej musi zawierać tylko jedno słowo. Zamiast spacji możliwe jest użycie podkreślników '_', w ten sposób dwa słowa liczą się jak jedno.\n"
                error_code: "wybrane drzwi to zapytaj Które drzwi wybierasz?\n"
                solution_text: "Zamień spacje na podkreślniki.\n"
                solution_code: "wybrane_drzwi to zapytaj Które drzwi wybierasz?\n"
        -   example:
                solution_code: "imię to zapytaj Jak nazywa się twój pies?\nnapisz Twój pies nazywa się imię\n"
                error_text: "W tym przykładzie uczeń nazwał zmienną 'pies', ale próbuje wywołuje zmienną 'imię'.\n"
                error_code: "pies to zapytaj Jak nazywa się twój pies?\nnapisz Twój pies nazywa się imię\n"
                solution_text: "Zawsze zwracaj uwagę na spójność nazwy zmiennej. Małe zmiany mogą być trudne do zauważenia (na przykład użycie liczby mnogiej zamiast pojedynczej), ale będą miały wpływ na działanie (lub niedziałanie) kodu.\n"
            title: Uczniowie używają nieistniejącej zmiennej
    -   level: '3'
        sections:
        -   title: Students try to print whole lists
            example:
                error_text: "A list can't be printed. You can only print one item from the list with at random.\n"
                error_code: "groceries is apples, milk, chocolate\nprint groceries\n"
                solution_text: "To print a list of all the groceries, you simply need to put them after a print command. Else you can use the list to print one item with at random.\n"
                solution_code: "print apples, milk, chocolate\n\nor\n\ngroceries is apples, milk, chocolate\nprint groceries at random\n"
        -   title: Uczniowie używają nazw zmiennych lub list jak zwykłego tekstu
            example:
                error_text: "This problem probably occured in level 2 as well. Now it can happen with lists too.\n"
                error_code: "name is Hedy\nprint Hi my name is name\n\nor\n\nanimal is rhino, bee, swan\nprint The best animal is... animal at random\n"
                solution_text: "Don;t use the names of variables or lists in regular text to print. In level 4 this problem is solves with quotation marks.\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n\nor\n\nanimals is rhino, bee, swan\nprint The best animal is... animals at random\n"
        -   title: Students forget at in at random
            example:
                error_text: "Like in the example\n"
                error_code: "birds is sparrow, seagull, robin\nprint birds random\n"
                solution_text: "This problem is solved by adding the word at.\n"
                solution_code: "birds is sparrow, seagull, robin\nprint birds at random\n"
        -   title: Students forget to use the print command when also using the at random command
            example:
                error_text: "Or they will sometimes put at random at the beginning of the line.\n"
                error_code: "fruit is apple, cherry, banana\nfruit at random\n"
                solution_text: "Emphasize to your students that you always need a print to print text.\n"
                solution_code: "fruit is apple, cherry, banana\nprint fruit at random\n"
        -   example:
                solution_text: "After each item on your list, there should be a comma\n"
                error_text: "In a list items are seperated with a comma.\n"
                error_code: "pizzas is funghi tonno quattro stagioni\nprint pizzas at random\n"
                solution_code: "pizzas is funghi, tonno, quattro stagioni\nprint pizzas at random\n"
            title: Students forget to use commas in their lists
        -   title: Students try to use at random without a list
            example:
                error_text: "For example\n"
                error_code: "clubs is Manchester United\nprint clubs at random\n"
                solution_text: "Hedy can't print anything at random, because there is no list to choose from.\n"
                solution_code: "clubs is Manchester United, Bayrn Munchen, FC Barcelona\nprint clubs at random\n"
        -   title: 'Students try to use add/remove without a list '
            example:
                error_text: "In the example below 'names' is not a list, but a variable. You cannot add anything to it.\n"
                error_code: "names is Jake\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
                solution_text: "There has to be a list first, so you have to add a second name to turn names into a list, for example Amy. If you don't want amy on your list, you can use remove to remove it after.\n"
                solution_code: "names is Jake, Amy\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
        -   title: Students forget to use to/from in add/remove
            example:
                error_text: "Without to/from the add/remove command won't work.\n"
                error_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice\nremove dice\nprint I love adventures at random\n"
                solution_text: "Hedy has to know which list the item should be added to/removed from.\n"
                solution_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice to adventures\nremove dice from adventures\nprint I love adventures at random\n"
    -   sections:
        -   example:
                error_code: "print Hello\nmood is ask 'How are you?\n"
                solution_text: "Add the correct quotation marks.\n"
                solution_code: "print 'Hello'\nmood is ask 'How are you?'\n"
                error_text: "In this level print and ask need a set of quotation marks. One before of the text and one after.\n"
            title: Students forget to use quotation marks on both sides of the text
        -   title: Students use the wrong quotation marks
            example:
                error_text: "It is important to start your lesson by checking if the students know how to type a quotation mark properly. ELse they might use the \"double quotes\" or the `skewed one`.\n"
                error_code: "print `Welcome to the restaurant`\nfood is ask \"What would you like to order?\"\n"
                solution_text: "These are the correct quotation marks:\n"
                solution_code: "print 'Welcome to the restaurant'\nfood is ask 'What would you like to order?'\n"
        -   title: Students use an apostrophe in their text
            example:
                error_text: "From this level on apostrophes are not allowed. They are often used in English when thyping contractions like you're, don't or what's.\n"
                error_code: "print 'You're not allowed to type this'\n"
                solution_text: "You can choose to use the wrong grammar and just leave the apostrophe out. Or you could use the ` as an apostrophe.\n"
                solution_code: "print 'Youre allowed to type this'\nprint 'And you`re able to do this'\n"
        level: '4'
    -   sections:
        -   example:
                error_code: "if name is Hedy 'Great!'\nelse 'Hedy is better!'\n"
                solution_text: "Add the print command to fix it.\n"
                error_text: "After students use if or else they forget to use a second command like print or ask.\n"
                solution_code: "if name is Hedy print 'Great!'\nelse print 'Hedy is better!'\n"
            title: Students forget to use print in an if command
        -   title: Students might use two different names for the same variable
            example:
                error_text: "In this example the student has used 'horse' and 'name' for the same variables.\n"
                error_code: "horse is ask 'What is your horse called?'\nif name is Bonfire print 'cool'\nelse print 'less cool!'\n"
                solution_text: "Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.\n"
                solution_code: "horse is ask 'What is your horse called'\nif horse is Bonfire print 'cool!'\nelse print 'less cool!'\n"
        -   title: Students still forget the quotes on both sides
            example:
                error_text: "If commandos can get very long and students tend to forget to use quotes.\n"
                error_code: "if name is Hedy print fun\nelse print 'meh!\n"
                solution_text: "Always use 2 quotes in a print command.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!'\n"
        -   title: Students use quotes around variable names
            example:
                error_text: "In this level there are no quotes around variable names.\n"
                error_code: "if 'name' is 'Hedy' print 'fun'\nelse print 'meh!'\n"
                solution_text: "Remove the quotes to get the code to work.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!\n"
        -   title: Students use long variable names containing two words
            example:
                error_text: "A variable should be named with one word. You could use an underscore to connect two words. That counts as one.\n"
                error_code: "chosen door is ask 'Which door do you pick?'\n"
                solution_text: "Add an underscore.\n"
                solution_code: "chosen_door is ask 'which door do you pick?'\n"
        -   title: Students want multiple answers to be correct
            example:
                error_text: "For example this student Hedy to tell all his friends that they are funny, but other classmates would be told that they are not.\n"
                error_code: "if name is Jesse, David, Souf print 'You are funny' else print 'You are not funny'\n"
                solution_text: "You could use the `in` command for that. It is explained in a higher level, but it does already work in level 5.\nAnother solution is to use multiple if commands and no else command. The disadvantage is that it won't tell the other classmates that they are not funny.\n"
                solution_code: "friends is Jesse, David, Souf\nname is ask 'Who are you?'\nif name in friends print 'You are funny'\nelse print 'You are not funny'\n\nor\n\nname is ask 'Who are you?'\nif naam is Jesse print 'You are funny'\nif naam is David print 'You are funny'\nif naam is Souf print 'You are funny'\n"
        -   example:
                error_text: "In the example below the password is 'password'. This will result in it always being correct.\n"
                solution_text: "Pick a different name for your variable.\n"
                error_code: "password is ask 'What is the password?'\nif password is password print 'Access granted'\nelse print 'Acces denied!'\n"
                solution_code: "secret_password is ask 'What is the password'\nif secret_password is password print 'Access granted!'\nelse print 'Access denied!'\n"
            title: The students make the variable name the same as the value in the if statement
        level: '5'
    -   level: '6'
        sections:
        -   title: Students struggle with quotation marks
            example:
                error_text: "Some students struggle with adding quotattion marks or not. If you add quotation marks, the output screen will literally show '5+5'.\n"
                error_code: "print '5 + 5'\n"
                solution_text: "In this code the output screen will print '10'.\n"
                solution_code: "print 5 + 5\n"
        -   title: Students struggle with the concept of doing maths with a variable
            example:
                error_text: "Some students will find it hard to do maths with variables. Try to show them very simple examples, like:\n"
                error_code: "age = ask 'How old are you?'\nprint 'Next year you will be ' age + 1\n"
                solution_text: "Or take it a step further like this.\n"
                solution_code: "price = 0\nprint 'Welcome to our burger restaurant'\nburger = ask 'Would you like a burger?'\nif burger = yes price = price + 10\ndrink = ask 'Would you like a drink?'\nif drink = yes price = price + 4\nprint 'That will be ' price ' euros please'\n"
    -   level: '7'
        sections:
        -   title: Students forget one of the word of the repeat command, or they forget the print command
            example:
                error_code: "repeat 3 times 'For he`s a jolly good fellow'\nrepeat 3 print 'Which nobody can deny!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "repeat 3 times print 'For he`s a jolly good fellow'\nrepeat 3 times print 'Which nobody can deny!'\n"
                error_text: "Make sure that the students know to use both the full repeat command and the print command.\n"
        -   title: Students try to repeat multiple lines
            example:
                error_text: "In this level you can only repeat one line of code multiple times. In this code the student wanted to print 3 different drinks, but it won't work. It will ask the question 3 times and only print the last answer.\n"
                error_code: "repeat 3 times drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "You should go to the next level to be able to repeat multiple lines. So on this level you'll have to print everything seperately.\n"
                solution_code: "drink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                error_code: "repeat 100 times print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times print 'This is enough'\n"
    -   sections:
        -   title: Students use the indentation wrong
            example:
                error_text: "Indentation is a new concept in this level, that is hard to use for some students. Make sure they practise some simple codes before making a whole program with it.\n"
                error_code: "repeat 3 times\nprint 'hello'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "repeat 3 times\n    print 'hello'\n"
        -   example:
                error_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
                solution_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\n    print drink\n"
                error_text: "For instance, in the code below the student wanted to take the drinks order of 3 people. But insted the program asked 3 times, but only wrote down one order.\n"
            title: Students only repeat 1 line when they wanted to repeat multiple lines
        -   title: Students want to nest if statements, or put if statements inside a loop
            example:
                error_text: "In this level students aren't allowed yet to put if statements inside other if statements or inside repeat loops.\nIn the next level this is allowed.\n"
                error_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    repeat 3 times\n        print 'Hip Hip Hooray!'\n"
                solution_text: "This is the correct code for this level:\n"
                solution_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times\n    print 'This is enough'\n"
                error_code: "repeat 100 times\n    print 'How many times can I repeat this?'\n"
        -   title: Students use the if command to check if the variable value is the same as the variable name
            example:
                error_text: "We have seen this mistake by some of our students. They make a password for their computer, but they make the password 'password'.\nIn line 2 the computer is asked to check wheter the variable password is the same as the variable password, so itself. Which means the answer is alway yes.\nSo with this code the answer will always be 'You can come in' no matter what the player fills in.\n"
                error_code: "password is ask 'What is the password?'\nif password is password\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                solution_text: "You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.\n"
                solution_code: "password is ask 'What is the password?'\nif password is 'password'\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
        level: '8'
    -   level: '9'
        sections:
        -   example:
                solution_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n    if book is yes\n        print 'Robin buys the book and goes home'\n    else\n        print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
                error_text: "The hardest part about this level is getting the indentation right. Students love nesting if statements, sometimes even inside other nested if statements. Keeping track of indentation can get pretty tough.\n"
                error_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n        if book is yes\nprint 'Robin buys the book and goes home'\nelse\n    print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
                solution_text: "This is the correct code. Try to keep track of all the different constructions when putting if statements inside other if statements.\n"
            title: Students make mistakes with indentation
    -   level: '10'
        sections:
        -   title: Students so not use the for command correctly
            example:
                error_text: "We often see that students try to print the list (in the example animals) instead of the items of the list.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animals\n"
                solution_text: "The word animals in the last line should be changed into animal.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
        -   title: Students forget the indentation
            example:
                error_text: "Students tend to forget to use indentation after a for command.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\nprint 'I love ' animals\n"
                solution_text: "You should use indentation after a for command.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
    -   level: '11'
        sections:
        -   example:
                error_text: "Make sure that the students use indentation.\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "This is the correct code:\n"
                solution_code: "for i in range 1 to 5\n    print i\n"
            title: Students forget to use indentation
        -   title: Students don't understand the i
            example:
                error_text: "Some students don't understand that i is a variable. i is chosen, because it is used in Python programming, but you could just as easily use a different variable name.\nFor example, this code:\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "Could just as well be replaced with this code. It works the same.\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
    -   sections:
        -   title: Students forget quotation marks
            example:
                error_text: "Students need more quotation marks now than in the previous levels. In this example quotation marks were forgotten in the list and in the if command.\n"
                error_code: "superheroes = Spiderman, Batman, Iron Man\nsuperhero = superheroes at random\nif superhero = Batman\n    print 'IM BATMAN!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "superheroes = 'Spiderman', 'Batman', 'Iron Man'\nsuperhero = superheroes at random\nif superhero is 'Batman'\n    print 'IM BATMAN!'\n"
        -   title: Students use quotation marks on numbers they want to use for calculations
            example:
                error_code: "score = '25'\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
                solution_text: "This is the correct code:\n"
                error_text: "You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.\nIn the example below, you can't do maths with the number 25, because it's in quotation marks.\n"
                solution_code: "score = 25\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
        -   title: Students use commas instead of periods in decimal numbers
            example:
                error_text: "Decimal numbers can be used from this level on, but you can't use commas.\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print 2.5 + 2.5\n"
                error_code: "print 2,5 + 2,5\n"
        level: '12'
    -   level: '13'
        sections:
        -   example:
                error_text: "Both commands might appear similar, but their functions are very different.\n"
                error_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' or time is 'yes'\n    print 'Lets play!'\n"
                solution_text: "In this case, the person should answer yes on both questions, so you should use `and`.\n"
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
            title: Students confuse `and` with `or`
    -   level: '14'
        sections:
        -   title: Students confuse the < and > signs
            example:
                error_text: "Often, students are already familiar with these signs from maths class. But if your students don't know these signs yet, they might have a challenge with it.\n"
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   title: Students use the wrong signs for `!=` `<=` and `>=`
            example:
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                error_code: "name = ask 'What is your name?'\nif name =< 'Hedy'\n    print 'You are not Hedy'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "name = ask 'What is your name?'\nif name != 'Hedy'\n    print 'You are not Hedy'\n"
        -   title: Students forget to use the == sign
            example:
                error_text: "In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.\n"
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "name = ask 'What is your name?'\nif name == 'Hedy'\n    print 'You are cool!'\n"
    -   level: '15'
        sections:
        -   title: Students forget indentation in the while loop
            example:
                error_text: "Indentation is often hard for students.\n"
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
    -   sections:
        -   title: Students forget the brackets
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = 'starwberry', 'chocolate'\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students use the wrong brackets
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   example:
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream at random ' icecream'\n"
            title: Students still use the old at random command
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        level: '16'
    -   sections:
        -   example:
                error_text: "The elif command needs a condition behind it. It cannot be used like else, without a condition.\n"
                error_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif:\n    print 'I like green'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
            title: Students use elif like else, so without a condition
        -   title: Students forget the colon
            example:
                error_text: "After each command that requires indentation, a colon should be used.\n"
                error_code: "answer = ask 'How are you doing?'\nif answer is 'great'\n    print 'Me too!'\nelif answer is 'bad'\n    print 'Let me cheer you up!'\nelse\n    print 'Im great!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "answer = ask 'How are you doing?'\nif answer is 'great':\n    print 'Me too!'\nelif answer is 'bad':\n    print 'Let me cheer you up!'\nelse:\n    print 'Im great!'\n"
        level: '17'
    -   level: '18'
        sections:
        -   title: Students forget to use the brackets
            example:
                error_text: "Students will forget to put brackets around their text.\n"
                error_code: "print 'my name is Hedy!'\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print('my name is Hedy!')\n"
        -   title: Students will still use the ask command
            example:
                error_text: "The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.\n"
                error_code: "print('My name is Hedy!')\nname = ask('What is your name?')\nprint('So your name is ', name)\n"
                solution_text: "This is the correct code:\n"
                solution_code: "print('My name is Hedy!')\nname = input('What is your name?')\nprint('So your name is ', name)\n"
        -   title: Students might use the brackets as quotation marks
            example:
                error_text: "They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.\n"
                error_code: "temperature = 25\nprint('It is ') temperature ('degrees outside')\n"
                solution_text: "This is the correct code:\n"
                solution_code: "temperature = 25\nprint('It is ', temperature, 'degrees outside')\n"
    title: Często popełniane błędy
    key: common_mistakes
    intro: "Możesz uczyć się na błędach, zwłaszcza w programowaniu!\nPomyłki są nieuniknione, dając przy tym świetną okazję do uczenia się, jednak znalezienie odpowiedniego ich rozwiązania może okazać się dość problematyczne dla samych nauczycieli.\nSzczególnie w późniejszych poziomach, kiedy kod staje się coraz dłuższy i bardziej skomplikowany. Z tego też powodu stworzyliśmy listę najczęściej spotykanych błędów w każdym z poziomów, wraz z ich rozwiązaniami.\n"
title: Dokumentacja
learn-more-sections:
-   title: Czy lubisz Hedy?
    text: "Podziel się z nami swoją opinią!\n[Kliknij tutaj aby wysłać do nas wiadomość](mailto:hello@hedy.org \"O Hedy\")\n"
-   title: Found a bug?
    text: "[Daj nam znać na GitHubie](https://github.com/hedyorg/hedy/issues/new/choose)\n"
-   title: Co tygodniowa pogadanka nad kodem
    text: "Chcesz się dowiedzieć więcej o Hedy? Zobacz wystąpienie Felienne na \"European Code Week 2020\" (po Angielsku):\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/R2U9MEowYag?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n"
start-sections:
-   title: Czym jest stopniowany język programowania?
    text: "Uczenie się programowania może być trudne. Nie oznacza to, że programowanie samo w sobie *jest* trudne! Ale jest wiele zasad które należy zapamiętać, zupełnie jak gdy rozpoczyna się naukę polskiego.\nPodobnie, będziesz potrzebować wiele praktyki aby nauczyć się programowania.\n\nMożesz czytać te zdania z łatwością. Ale czy pamiętasz okres rozpoczynania nauki czytania? Każda litera wymagała od ciebie czasu!\nTo prawda również w przypadku programowania, może ono być trudne na początku, ale z czasem staje się łatwiejsze!\n\nDobrą cechą Hedy jest to, że Hedy jest *stopniowany*. Oznacza to, że nie musisz uczyć się wszystkich zasad jednocześnie.\nPierwsze kilka poziomów nie ma aż tak wiele zasad, dzięki czemu swobodnie możesz przyzwyczaić się do programowania.\nNa każdym poziomie dodajemy nowe zasady, zwiększając liczbę komend które znasz. Komendy to instrukcje dla komputera.\n"
-   title: Dlaczego Hedy jest stopniowany?
    text: "W tym materiale wideo Felienne, twórczyni Hedy, wyjaśnia dlaczego Hedy jest stopniowany.\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/fmF7HpU_-9k\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"
-   title: Dla kogo jest Hedy?
    text: "Hedy jest przeznaczony dla wszystkich dzieci pragnących nauczyć się programować! Musisz jedynie potrafić czytać po angielsku z łatwością.\n"
-   title: "Multi-lingual programming"
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: Czy potrzebuję doświadczenia z programowaniem?
    text: "Nie, nie jest to wymagane. Jednakże, jeśli programowałoś już w Scratchu lub Pythonie, niektóre z komend będą dla ciebie znajome.\n"
-   title: Czy Hedy jest darmowy?
    text: "Tak! Hedy jest także Otwartym Oprogramowaniem (Open Source), co oznacza, że każdy kto potrafi programować może pomóc nam ulepszać Hedy.\nMożesz znaleźć kod na [GitHubie](https://github.com/hedyorg/hedy).\nJeśli lubisz Hedy i chcesz wnieść swój wkład, akceptujemy (i jesteśmy bardzo wdzięczni za) [dotacje](https://github.com/sponsors/hedyorg)!\n"
-   title: Czy muszę coś zainstalować?
    text: "Nie. Hedy działa w przeglądarce internetowej, która jest programem którego używasz aby wyświetlać tę stronę. Prawdopodobnie Chrome, Edge lub Firefox. Hedy działa również za twoim telefonie lub tablecie."
join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Translating Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
