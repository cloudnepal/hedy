#!/bin/bash
set -eu
# Recompile the TypeScript and generate a minified JavaScript bundle using esbuild.
#
# We commit the generated JavaScript bundle to minimize the burden on contributors--
# they don't need to install any of the NPM/esbuild tools and remember to run build
# scripts if they don't need to work on the browser code.
#
# We minimize the generated bundle so that contributors aren't tempted to accidentally
# edit straight in the JavaScript.
#
#----------------------------------------------------------------------
#
# This script does two similar, but different jobs:
#
# In normal build mode, we first compile TypeScript -> JavaScript using the
# TypeScript compiler (TSC), and then bundle it all into one file using esbuild.
# The reason we do this is because TSC can translate certain desirable idioms
# that are are not supposed in old browsers, like `async`, `?.` and `??` to
# plain old JavaScript. `esbuild` does not do that, which is why have TSC do
# this job first.
#
# We can also run in `--watch` mode, in which case we bypass the TypeScript
# compiler and only run esbuild. This is because the TypeScript compiler is
# rather slow (think 5-10 seconds to do a compilation), and we want to
# optimize for iteration speed in that case. That does mean that the generated
# JavaScript is slightly different between those cases--however, the final
# JavaScript will always be generated on deploy using the official generation
# method.
root=$(cd $(dirname $0)/../.. && pwd)

cd $root

python3 highlighting/generate-rules-highlighting.py
python3 build-tools/heroku/generate-client-messages.py

if [[ ! -f node_modules/.bin/tsc ]]; then
    echo "ðŸ‘‰ You need to run the following command ONCE before running 'generate-typescript':" >&2
    echo "" >&2
    echo "    npm ci" >&2
    echo "" >&2
    exit 1
fi

if [[ "${1:-}" == "--watch" ]]; then
    echo "ðŸ‘€ Running TypeScript compilation in watch mode. ðŸ‘€"
    echo "Leave this window open and edit (and save) .ts files to your heart's content."
    echo ""
    # Watch mode, just use esbuild and nothing else
    npx esbuild static/js/index.ts \
        --watch \
        --bundle \
        --sourcemap \
        --minify \
        --target=es2017 \
        --global-name=hedyApp \
        --platform=browser \
        --outfile=static/js/appbundle.js
else
    # Use tsc to generate .js
    npx tsc --outDir __tmp__

    npx esbuild __tmp__/static/js/index.js \
        --bundle \
        --sourcemap \
        --minify \
        --target=es2017 \
        --global-name=hedyApp \
        --platform=browser \
        --outfile=static/js/appbundle.js "$@"

    rm -rf __tmp__
fi
